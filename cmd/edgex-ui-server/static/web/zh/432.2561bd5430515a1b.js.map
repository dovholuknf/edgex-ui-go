{"version":3,"file":"432.2561bd5430515a1b.js","mappings":"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","sources":["./src/app/core-data/core-data.component.ts","./src/app/core-data/core-data.component.html","./src/app/core-data/event/event.component.ts","./src/app/core-data/event/event.component.html","./src/app/core-data/reading/reading.component.ts","./src/app/core-data/reading/reading.component.html","./src/app/guards/health/coredata-alive.guard.ts","./src/app/core-data/core-data-routing.module.ts","./src/app/core-data/core-data.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-core-data',\n  templateUrl: './core-data.component.html',\n  styleUrls: ['./core-data.component.css']\n})\nexport class CoreDataComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card mb-2\">\n   <div class=\"card-header\">\n    <i class=\"fa fa-info-circle mr-2 text-info\"></i> \n     <span>Tips</span>\n   </div>\n   <div class=\"card-body\" i18n>\n      An event represents a collection of one or more sensor readings. \n      Some sensors or devices are only providing a single value – a single reading - at a time. Other sensors spew multiple values whenever they are read.\n      An event must have at least one reading. Events are associated to a sensor or device.\n      <br>\n      <br>\n      The following data is only for the convenience of the user to view the data format of the data center, which does not make any sense to manipulate!\n      <br>\n      The dynamic display effect of the data is that only the API of the Core Data service is called periodically, with intervals of 3 seconds.\n   </div>\n</div>\n\n <div class=\"card\">\n    <div class=\"card-header\">\n      <ul class=\"nav nav-tabs card-header-tabs font-weight-bold\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link \" routerLink=\"./event\" routerLinkActive=\"active\" i18n>Event</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"./reading\" routerLinkActive=\"active\" i18n>Reading</a>\n          </li>\n      </ul>\n    </div>\n    <div class=\"card-body\">\n        <router-outlet></router-outlet>\n    </div>\n</div>\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { DataService } from '../../services/data.service';\nimport { MultiEventsResponse } from '../../contracts/v3/responses/event-response';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['./event.component.css']\n})\nexport class EventComponent implements OnInit, OnDestroy{\n\n  feedInterval: any;\n  pauseOperate: boolean = true;\n\n  constructor(private dataSvc: DataService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  feedEvents() {\n    this.feedInterval = setInterval(() => {\n      this.dataSvc.allEventsPagination(0,5).subscribe((resp: MultiEventsResponse) => {\n        if (resp.events.length === 0) {\n          $(\"#data-event-stream\").prepend('<p class=\"user-select-all\">' +\n          'no data stream available, please confirm whether there is at least one device to collect data' +\n          '</p>');\n          return\n        }\n        resp.events.forEach((e,i) => {\n          $(\"#data-event-stream\").prepend('<p class=\"user-select-all\">' + JSON.stringify(e) + '</p>');\n        })\n      })\n    },3000)\n  }\n\n  start() {\n    this.pauseOperate = false;\n    this.feedEvents();\n  }\n\n  pause() {\n    this.pauseOperate = true;\n    window.clearInterval(this.feedInterval);\n  }\n\n  operateToggle() {\n    if (this.pauseOperate) {\n      this.pauseOperate = false;\n      return\n    }\n    this.pauseOperate = true;\n  }\n\n  ngOnDestroy() {\n     window.clearInterval(this.feedInterval);\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header\">\n        <span class=\"font-weight-bold\">\n            <span class=\"fa fa-area-chart mr-2 text-danger\"></span> \n            <span class=\"text-secondary\" i18n>Event Data Stream</span>\n        </span>\n    </div>\n    <div class=\"card-header p-2\">\n        <div class=\"btn-group btn-group-sm\" role=\"group\">\n            <button class=\"btn btn-primary\" (click)=\"start()\" [disabled]=\"!pauseOperate\">\n                <span>\n                    <i class=\"fa fa-play mr-1\"></i>\n                    <span i18n>Start</span> \n                </span> \n            </button>\n            <button type=\"button\" class=\"btn btn-info\" (click)=\"pause()\" [disabled]=\"pauseOperate\">\n                <span>\n                    <i class=\"fa fa-pause mr-1\"></i>\n                    <span i18n>Pause</span>\n                </span>\n            </button>\n          \n        </div>\n    </div>\n    <div class=\"card-body\">\n        <pre id=\"data-event-stream\" class=\"w-100 overflow-auto\" style=\"height: 350px\"></pre>\n    </div>\n </div>","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../../services/data.service';\nimport { MultiReadingResponse } from '../../contracts/v3/responses/reading-response';\n\n@Component({\n  selector: 'app-reading',\n  templateUrl: './reading.component.html',\n  styleUrls: ['./reading.component.css']\n})\nexport class ReadingComponent implements OnInit {\n\n  feedInterval: any;\n  pauseOperate: boolean = true;\n\n  constructor(private dataSvc: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  feedEvents() {\n    this.feedInterval = setInterval(() => {\n      this.dataSvc.allReadingsPagination(0,5).subscribe((resp: MultiReadingResponse) => {\n        if (resp.readings.length === 0) {\n          $(\"#data-event-stream\").prepend('<p class=\"user-select-all\">' +\n          'no data stream available, please confirm whether there is at least one device to collect data' +\n          '</p>');\n          return\n        }\n        resp.readings.forEach((r,i) => {\n          $(\"#data-reading-stream\").prepend('<p class=\"user-select-all\">' + JSON.stringify(r) + '</p>');\n        })\n      })\n    },3000)\n  }\n\n  start() {\n    this.pauseOperate = false;\n    this.feedEvents();\n  }\n\n  pause() {\n    this.pauseOperate = true;\n    window.clearInterval(this.feedInterval);\n  }\n\n  operateToggle() {\n    if (this.pauseOperate) {\n      this.pauseOperate = false;\n      return\n    }\n    this.pauseOperate = true;\n  }\n\n  ngOnDestroy() {\n     window.clearInterval(this.feedInterval);\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header\">\n        <span class=\"font-weight-bold\">\n            <span class=\"fa fa-area-chart mr-2 text-danger\"></span> \n            <span class=\"text-secondary\" i18n>Reading Data Stream</span>\n        </span>\n    </div>\n    <div class=\"card-header p-2\">\n        <div class=\"btn-group btn-group-sm\" role=\"group\">\n            <button class=\"btn btn-primary\" (click)=\"start()\" [disabled]=\"!pauseOperate\">\n                <span><i class=\"fa fa-play mr-1\"></i><span i18n>Start</span></span> \n            </button>\n            <button type=\"button\" class=\"btn btn-info\" (click)=\"pause()\" [disabled]=\"pauseOperate\">\n                <span><i class=\"fa fa-pause mr-1\"></i><span i18n>Pause</span></span>\n            </button>\n          \n        </div>\n    </div>\n    <div class=\"card-body\">\n        <pre id=\"data-reading-stream\" class=\"w-100 overflow-auto\" style=\"height: 350px\"></pre>\n    </div>\n </div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\n import { Injectable } from '@angular/core';\n import { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\n import { Observable, of } from 'rxjs';\n import { DataService } from '../../services/data.service';\n import { mergeMap, take ,catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoredataAliveGuard  {\n  constructor(private router: Router, private dataSvc: DataService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.checkAvailable(route,\n      state);\n  }\n\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.canActivate(route,state)\n  }\n\n  checkAvailable(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.dataSvc.ping().pipe(\n      take(1),\n      catchError((error)=>{\n        return this.router.navigate(['/svc-unavailable'],{ \n          queryParams: {'svcName':'core data','routerPath':`/${state.url.split('/')[1]}`}\n        })\n      }),\n      mergeMap(() => {\n        return of(true)\n      })\n    )\n  }\n  \n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CoreDataComponent } from './core-data.component';\nimport { EventComponent } from './event/event.component';\nimport { ReadingComponent } from './reading/reading.component';\nimport { AuthGuard } from '../guards/auth/guard/auth.guard';\nimport { CoredataAliveGuard } from '../guards/health/coredata-alive.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CoreDataComponent,\n    canActivate: [AuthGuard, CoredataAliveGuard],\n    canActivateChild: [CoredataAliveGuard],\n    children: [\n      {\n        path: '',\n        redirectTo: 'event',\n        pathMatch: 'full'\n      },\n      {\n        path: 'event',\n        component: EventComponent\n      },\n      {\n        path: 'reading',\n        component:  ReadingComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoreDataRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CoreDataRoutingModule } from './core-data-routing.module';\nimport { CoreDataComponent } from './core-data.component';\nimport { EventComponent } from './event/event.component';\nimport { ReadingComponent } from './reading/reading.component';\n\n\n@NgModule({\n  declarations: [CoreDataComponent, EventComponent, ReadingComponent],\n  imports: [\n    CommonModule,\n    CoreDataRoutingModule\n  ]\n})\nexport class CoreDataModule { }\n"],"names":["CoreDataComponent","constructor","ngOnInit","static","this","t","core","Xpm","selectors","decls","vars","consts","i18n_0","$localize","i0","EventComponent","dataSvc","pauseOperate","feedEvents","feedInterval","setInterval","allEventsPagination","subscribe","resp","events","length","forEach","e","i","$","prepend","JSON","stringify","start","pause","window","clearInterval","operateToggle","ngOnDestroy","i1","ctx","ReadingComponent","allReadingsPagination","readings","r","CoredataAliveGuard","router","canActivate","route","state","checkAvailable","canActivateChild","ping","pipe","take","catchError","error","navigate","queryParams","svcName","routerPath","url","split","mergeMap","of","i2","Yz7","factory","ɵfac","providedIn","routes","path","component","AuthGuard","children","redirectTo","pathMatch","CoreDataRoutingModule","oAB","cJS","RouterModule","forChild","CoreDataModule","CommonModule"],"sourceRoot":"webpack:///"}