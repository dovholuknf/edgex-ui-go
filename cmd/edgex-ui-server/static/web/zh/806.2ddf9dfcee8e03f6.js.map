{"version":3,"file":"806.2ddf9dfcee8e03f6.js","mappings":"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","sources":["./src/app/scheduler/scheduler.component.ts","./src/app/scheduler/scheduler.component.html","./src/app/scheduler/interval/interval-center/interval-center.component.ts","./src/app/scheduler/interval/interval-center/interval-center.component.html","./src/app/scheduler/interval/interval-list/interval-list.component.html","./src/app/scheduler/interval/interval-list/interval-list.component.ts","./src/app/scheduler/interval/add-interval/add-interval.component.ts","./src/app/scheduler/interval/add-interval/add-interval.component.html","./src/app/scheduler/interval/edit-interval/edit-interval.component.html","./src/app/scheduler/interval/edit-interval/edit-interval.component.ts","./src/app/scheduler/intervalaction/interval-action-center/interval-action-center.component.ts","./src/app/scheduler/intervalaction/interval-action-center/interval-action-center.component.html","./src/app/scheduler/intervalaction/interval-action-list/interval-action-list.component.html","./src/app/scheduler/intervalaction/interval-action-list/interval-action-list.component.ts","./src/app/scheduler/interval/interval-combo-list/interval-combo-list.component.html","./src/app/scheduler/interval/interval-combo-list/interval-combo-list.component.ts","./src/app/scheduler/intervalaction/add-interval-action/add-interval-action.component.html","./src/app/scheduler/intervalaction/add-interval-action/add-interval-action.component.ts","./src/app/scheduler/intervalaction/edit-interval-action/edit-interval-action.component.html","./src/app/scheduler/intervalaction/edit-interval-action/edit-interval-action.component.ts","./src/app/guards/health/scheduler-alive.guard.ts","./src/app/scheduler/scheduler-routing.module.ts","./src/app/scheduler/scheduler.module.ts","./src/app/services/command.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-scheduler',\n  templateUrl: './scheduler.component.html',\n  styleUrls: ['./scheduler.component.css']\n})\nexport class SchedulerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n      <ul class=\"nav nav-tabs card-header-tabs font-weight-bold\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link \" routerLink=\"./interval-center\" routerLinkActive=\"active\">\n              <span i18n>Interval</span>\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"./interval-action-center\" routerLinkActive=\"active\">\n              <span i18n>IntervalAction</span> \n            </a>\n          </li>\n      </ul>\n    </div>\n    <div class=\"card-body\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-interval-center',\n  templateUrl: './interval-center.component.html',\n  styleUrls: ['./interval-center.component.css']\n})\nexport class IntervalCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n \n<router-outlet></router-outlet>","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-list text-danger\"></i> \n        <span i18n>Interval List</span>\n    </div>\n    <div class=\"card-body p-0 position-relative\">\n        <div *ngIf=\"toolbars\" class=\"bg-light px-2 py-2\">\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n                <button class=\"btn btn-primary\" (click)=\"refresh()\">\n                    <span>\n                        <i class=\"fa fa-refresh mr-1\"></i>\n                        <span i18n>Refresh</span>\n                    </span> \n                </button>\n                <button type=\"button\" class=\"btn btn-info\"  routerLink=\"../add-interval\">\n                    <span>\n                        <i class=\"fa fa-plus mr-1\"></i>\n                        <span i18n>Add</span> \n                    </span>\n                </button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"edit()\" [disabled]=\"intervalSelected.length !== 1\">\n                    <span>\n                        <i class=\"fa fa-edit mr-1\"></i>\n                        <span i18n>Edit</span>\n                    </span>\n                </button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteConfirm()\" [disabled]=\"intervalSelected.length === 0\">\n                    <span>\n                        <i class=\"fa fa-trash mr-1\"></i>\n                        <span i18n>Delete</span>\n                    </span>\n                </button>\n              </div>\n        </div>\n        <div class=\"table-responsive \">\n            <table class=\"table table-hover text-truncate \">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\"><input *ngIf=\"enableSelectAll\" type=\"checkbox\" role=\"button\" [checked]=\"isCheckedAll()\" (click)=\"selectAll($event)\"></th>\n                      <th scope=\"col\" i18n>ID</th>\n                      <th scope=\"col\" i18n>Name</th>\n                      <th scope=\"col\" i18n>Start</th>\n                      <th scope=\"col\" i18n>End</th>\n                      <th scope=\"col\" i18n>Interval</th>\n                      <th scope=\"col\" i18n>RunOnce</th>\n                      <!-- <th scope=\"col\">AssociatedActions</th> -->\n                      <!-- <th scope=\"col\">Created</th>\n                      <th scope=\"col\">Modified</th> -->\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let interval of intervalList\" [class.table-active]=\"isChecked(interval.name)\">\n                        <td> <input type=\"checkbox\" role=\"button\"  [checked]=\"isChecked(interval.name)\" (click)=\"selectOne($event,interval)\"></td>\n                        <td class=\"user-select-all\">{{interval.id}}</td>\n                        <td class=\"user-select-all\">{{interval.name}}</td>\n                        <td>{{interval.start}}</td>\n                        <td>{{interval.end}}</td>\n                        <td>{{interval.interval}}</td>\n                        <td>{{interval.runOnce?true:false}}</td>\n                        <!-- <td class=\"text-center\">\n                            <a routerLink=\"../../interval-action-center\" [queryParams]=\"{'intervalName':interval.name}\">\n                                <i class=\"fa fa-share-alt-square fa-lg\"></i>\n                            </a>\n                        </td> -->\n                        <!-- <td>{{interval.created | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                        <td>{{interval.modified | date:'yyyy-MM-dd hh:mm:ss' }}</td> -->\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\" i18n>items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"custom-select\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\">\n                        <i class=\"fa fa-angle-double-left mr-1\"></i>\n                        <span i18n>Previous</span>\n                    </button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > intervalList.length\">\n                        <span i18n>Next</span>\n                        <i class=\"fa fa-angle-double-right ml-1\"></i>\n                    </button>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning mr-1\"></i>\n                    <span i18n>Warning</span>\n                </h5>  \n            </div>\n            <div class=\"modal-body\" i18n>\n                Associated actions will also be deleted and the data will be permanently erased!!! Are you sure to execute delete operation？\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" i18n>Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteIntervals()\" i18n>Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>\n    \n    ","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Interval } from '../../../contracts/v3/interval';\nimport { SchedulerService } from '../../../services/scheduler.service';\nimport { MultiIntervalResponse, IntervalResponse } from '../../../contracts/v3/responses/interval-response';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\nimport { BaseResponse } from '../../../contracts/v3/common/base-response';\n\n@Component({\n  selector: 'app-interval-list',\n  templateUrl: './interval-list.component.html',\n  styleUrls: ['./interval-list.component.css']\n})\nexport class IntervalListComponent implements OnInit {\n\n  @Input() enableSelectAll: boolean = true;\n  @Output() singleIntervalSelectedEvent = new EventEmitter<Interval>();\n  @Input() toolbars: boolean = true;\n  intervalList: Interval[] = [];\n  intervalSelected: Interval[] = [];\n  @Input() singleIntervalSelected?: Interval;\n  // isCheckedAll: boolean = false;\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n\n  constructor(private schedulerSvc:SchedulerService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private errSvc: ErrorService) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      if (params['intervalName']) {\n        this.schedulerSvc.findIntervalByName(params['intervalName']).subscribe((resp:IntervalResponse)=>{\n          this.intervalList = [];\n          this.intervalList.push(resp.interval);\n          return\n        })\n      } else {\n        this.findIntervalsPagination();\n      }\n    })\n  }\n\n  refresh() {\n    this.schedulerSvc.findAllIntervalsPagination(0, this.pageLimit).subscribe((data: MultiIntervalResponse) => {\n      if (this.errSvc.handleErrorForAPI(data)){\n        return\n      }\n      this.intervalList = data.intervals;\n      this.msgSvc.success('refresh');\n      this.resetPagination();\n    });\n  }\n\n  findIntervalsPagination() {\n    this.schedulerSvc.findAllIntervalsPagination(this.pageOffset, this.pageLimit).subscribe((data: MultiIntervalResponse) => {\n      if (this.errSvc.handleErrorForAPI(data)){\n        return\n      }\n      this.intervalList = data.intervals;\n    });\n  }\n\n  onSingleIntervalSelectedEmitter() {\n    this.singleIntervalSelectedEvent.emit(this.singleIntervalSelected);\n  }\n\n  isSingleChecked(name: string) {\n    return this.singleIntervalSelected?.name === name;\n  }\n\n  selectSingleInterval(event: any, name: string) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.intervalList.forEach((interval) => {\n        if (interval.name === name) {\n          this.singleIntervalSelected = interval;\n        }\n      });\n    } else {\n      this.singleIntervalSelected = {} as Interval;\n    }\n    this.onSingleIntervalSelectedEmitter();\n  }\n\n  isCheckedAll(): boolean {\n    let checkedAll = true;\n    if (this.intervalList &&  this.intervalList.length === 0) {\n      checkedAll = false\n    }\n    this.intervalList.forEach(interval => {\n      if (this.intervalSelected.findIndex(intervalSelected => intervalSelected.name === interval.name) === -1) {\n        checkedAll = false\n      }\n    });\n    return checkedAll\n  }\n\n  selectAll(event: any) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.intervalList.forEach(interval => {\n        if (this.intervalSelected.findIndex((intervalSelected) => intervalSelected.name === interval.name) !== -1) {\n          return\n        }\n        this.intervalSelected.push(interval);\n      });\n    } else {\n      this.intervalList.forEach(interval => {\n        let found = this.intervalSelected.findIndex((intervalSelected) => intervalSelected.name === interval.name);\n        if (found !== -1) {\n          this.intervalSelected.splice(found,1)\n        }\n      });\n    }\n  }\n\n  isChecked(name: string): boolean {\n    if (!this.enableSelectAll) {\n      return this.isSingleChecked(name)\n    }\n    return this.intervalSelected.findIndex(interval => interval.name === name) >= 0;\n  }\n\n  selectOne(event: any, interval: Interval) {\n    if (!this.enableSelectAll) {\n      this.selectSingleInterval(event, interval.name);\n      return\n    }\n\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.intervalSelected.push(interval)\n      return\n    }\n\n    let found = this.intervalSelected.findIndex(intervalSelected => intervalSelected.name === interval.name);\n    if (found !== -1) {\n      this.intervalSelected.splice(found, 1)\n    }\n  }\n\n  edit() {\n    this.router.navigate(['../edit-interval'], {\n      relativeTo: this.route,\n      queryParams: { 'intervalName': this.intervalSelected[0].name }\n    })\n  }\n\n  deleteConfirm() {\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n\n  deleteIntervals() {\n    this.intervalSelected.forEach((interval,i) => {\n      this.schedulerSvc.deleteIntervalByName(interval.name).subscribe((data: BaseResponse[]) => {\n        if (this.errSvc.handleErrorForAPI(data)){\n          return\n        }\n        this.intervalSelected.splice(i,1);\n        this.intervalList.forEach((item, index) => {\n          if (item.name === interval.name) {\n            this.intervalList.splice(index,1);\n            return\n          }\n        });\n        this.msgSvc.success('delete', `name: ${interval.name}`);\n        this.resetPagination();\n        this.findIntervalsPagination();\n      });\n    });\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  onPageSelected() {\n    this.resetPagination();\n    this.setPagination();\n    this.findIntervalsPagination();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.findIntervalsPagination();\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.findIntervalsPagination();\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n  }\n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Interval } from '../../../contracts/v3/interval';\nimport { SchedulerService } from '../../../services/scheduler.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\nimport { BaseWithIdResponse } from '../../../contracts/v3/common/base-response';\nimport flatpickr from 'flatpickr';\n\n@Component({\n  selector: 'app-add-interval',\n  templateUrl: './add-interval.component.html',\n  styleUrls: ['./add-interval.component.css']\n})\nexport class AddIntervalComponent implements OnInit, OnDestroy {\n\n  interval: Interval = {} as Interval;\n  calendarStart: any;\n  calendarEnd: any;\n\n  constructor(private schedulerSvc:SchedulerService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private errSvc: ErrorService) { }\n\n  ngOnInit(): void {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n    this.initDatePickr();\n  }\n\n  initDatePickr() {\n    this.calendarStart = flatpickr(\"input[name='intervalStart']\", {\n      dateFormat: \"YmdTHiS\",\n      enableTime: true,\n      enableSeconds: true,\n      time_24hr: true,\n      allowInput: false\n    });\n    this.calendarEnd = flatpickr(\"input[name='intervalEnd']\", {\n      dateFormat: \"YmdTHiS\",\n      enableTime: true,\n      enableSeconds: true,\n      time_24hr: true,\n      allowInput: false\n    });\n  }\n\n  submit() {\n    this.schedulerSvc.addInterval(this.interval).subscribe((data: BaseWithIdResponse[]) => {\n      if (this.errSvc.handleErrorForAPI(data)){\n        return\n      }\n      this.msgSvc.success(\"create new interval\", `name: ${this.interval.name}`);\n      this.router.navigate(['../interval-list'], { relativeTo: this.route });\n    });\n  }\n\n  ngOnDestroy(): void {\n    $('[data-toggle=\"popover\"]').popover('dispose');\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-plus text-danger mr-1\"></i>\n        <span i18n>Add Interval</span>\n        <button class=\"btn btn-sm btn-success float-right\" (click)=\"submit()\" [disabled]=\"!interval.name || !interval.interval\" i18n>Submit</button>\n    </div>\n    <div class=\"card-body\">\n        <form>\n            <div class=\"form-group row has-validation\">\n                <label for=\"intervalName\" class=\"col-md-2 col-form-label\" required i18n>Name</label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" id=\"validationIntervalName\" [class.is-invalid]=\"!interval.name\" [class.is-valid]=\"interval.name\" name=\"intervalName\" [(ngModel)]=\"interval.name\" required>\n                    <div id=\"validationIntervalNameFeedback\" class=\"invalid-feedback\">\n                        <small>the interval name can't be empty!</small> \n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"intervalStart\" class=\"col-md-2 col-form-label\" i18n>Start</label>\n                <div class=\"col-md-10\">\n                    <div class=\"input-group mb-3\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><i class=\"fa fa-calendar\"></i></span>\n                        </div>\n                        <input type=\"text\" class=\"form-control\" name=\"intervalStart\" [(ngModel)]=\"interval.start\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"intervalEnd\" class=\"col-md-2 col-form-label\" i18n>End</label>\n                <div class=\"col-md-10\">\n                    <div class=\"input-group mb-3\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><i class=\"fa fa-calendar\"></i></span>\n                        </div>\n                        <input type=\"text\" class=\"form-control\" name=\"intervalEnd\" [(ngModel)]=\"interval.end\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"intervalInterval\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Interval</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Interval indicates how often the specific resource needs to be polled. It represents as a duration string. The format of this field is to be an unsigned integer followed by a unit which may be \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\" representing nanoseconds, microseconds, milliseconds, seconds, minutes or hours. Eg, \"100ms\", \"24h\"'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" name=\"intervalInterval\" [class.is-invalid]=\"!interval.interval\" [class.is-valid]=\"interval.interval\" [(ngModel)]=\"interval.interval\" required>\n                    <div id=\"validationIntervalIntervalFeedback\" class=\"invalid-feedback\">\n                        <small>the interval interval can't be empty!</small> \n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"intervalRunOnce\" class=\"col-md-2 col-form-label\" i18n>RunOnce</label>\n                <div class=\"col-md-10\">\n                    <select class=\"custom-select\" name=\"intervalRunOnce\" [(ngModel)]=\"interval.runOnce\">\n                        <option [ngValue]=\"false\">false</option>\n                        <option [ngValue]=\"true\">true</option>\n                    </select>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-edit text-danger\"></i>\n        <span i18n>Edit Interval</span> {{interval?.name}}\n        <button class=\"btn btn-sm btn-success float-right\" (click)=\"update()\" [disabled]=\"!interval?.name\" i18n>Submit</button>\n    </div>\n    <div class=\"card-body\">\n        <form *ngIf=\"interval as Interval\">\n            <div class=\"form-group row has-validation\">\n                <label for=\"intervalName\" class=\"col-md-2 col-form-label\" required i18n>Name</label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" [class.is-invalid]=\"!interval.name\" [class.is-valid]=\"interval.name\" name=\"intervalName\" [(ngModel)]=\"interval.name\">\n                    <div id=\"validationIntervalNameFeedback\" class=\"invalid-feedback\">\n                        <small>the interval name can't be empty!</small> \n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"intervalStart\" class=\"col-md-2 col-form-label\" i18n>Start</label>\n                <div class=\"col-md-10\">\n                    <div class=\"input-group mb-3\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><i class=\"fa fa-calendar\"></i></span>\n                        </div>\n                        <input type=\"text\" class=\"form-control\" name=\"intervalStart\" [(ngModel)]=\"interval.start\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"intervalEnd2\" class=\"col-md-2 col-form-label\" i18n>End</label>\n                <div class=\"col-md-10\">\n                    <div class=\"input-group mb-3\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><i class=\"fa fa-calendar\"></i></span>\n                        </div>\n                        <input type=\"text\" class=\"form-control\" name=\"intervalEnd\" [(ngModel)]=\"interval.end\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"intervalInterval\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Interval</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"ISO8601 duration format\" \n                    data-content='Interval indicates how often the specific resource needs to be polled. It represents as a duration string. The format of this field is to be an unsigned integer followed by a unit which may be \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\" representing nanoseconds, microseconds, milliseconds, seconds, minutes or hours. Eg, \"100ms\", \"24h\"'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" name=\"intervalInterval\" [class.is-invalid]=\"!interval.interval\" [class.is-valid]=\"interval.interval\" [(ngModel)]=\"interval.interval\" required>\n                    <div id=\"validationIntervalIntervalFeedback\" class=\"invalid-feedback\">\n                        <small>the interval interval can't be empty!</small> \n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"intervalRunOnce\" class=\"col-md-2 col-form-label\" i18n>RunOnce</label>\n                <div class=\"col-md-10\">\n                    <select class=\"custom-select\" name=\"intervalRunOnce\" [(ngModel)]=\"interval.runOnce\">\n                        <option [ngValue]=\"false\">false</option>\n                        <option [ngValue]=\"true\">true</option>\n                    </select>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnDestroy} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Interval } from '../../../contracts/v3/interval';\nimport { SchedulerService } from '../../../services/scheduler.service';\nimport { IntervalResponse } from '../../../contracts/v3/responses/interval-response';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\nimport { BaseResponse } from '../../../contracts/v3/common/base-response';\nimport flatpickr from 'flatpickr';\n\n@Component({\n  selector: 'app-edit-interval',\n  templateUrl: './edit-interval.component.html',\n  styleUrls: ['./edit-interval.component.css']\n})\nexport class EditIntervalComponent implements OnInit, OnDestroy {\n\n  interval?: Interval;\n  calendarStart: any;\n  calendarEnd: any;\n\n  constructor(private schedulerSvc:SchedulerService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private errSvc: ErrorService) { }\n\n  ngOnInit(): void {\n\n    this.route.queryParams.subscribe(param => {\n      if (param['intervalName']) {\n        this.schedulerSvc.findIntervalByName(param['intervalName']).subscribe((data: IntervalResponse) => {\n          if (this.errSvc.handleErrorForAPI(data)){\n            return\n          }\n          this.interval = data.interval;\n          this.interval.runOnce = this.interval.runOnce?true:false;\n          setTimeout(() => {\n            this.initDatePickr();\n          }, 300);\n        });\n      }\n    });\n  }\n\n  initDatePickr() {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n    this.calendarStart = flatpickr(\"input[name='intervalStart']\", {\n      dateFormat: \"YmdTHiS\",\n      enableTime: true,\n      enableSeconds: true,\n      time_24hr: true,\n      allowInput: false\n    });\n    this.calendarEnd = flatpickr(\"input[name='intervalEnd']\", {\n      dateFormat: \"YmdTHiS\",\n      enableTime: true,\n      enableSeconds: true,\n      time_24hr: true,\n      allowInput: false\n    });\n  }\n\n  update() {\n    this.schedulerSvc.updateInterval(this.interval as Interval).subscribe((data: BaseResponse[]) => {\n      if (this.errSvc.handleErrorForAPI(data)){\n        return\n      }\n      this.msgSvc.success('update interval', `name: ${this.interval?.name}`);\n      this.router.navigate(['../interval-list'],{relativeTo: this.route})\n    });\n  }\n\n  ngOnDestroy(): void {\n    $('[data-toggle=\"popover\"]').popover('dispose');\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-interval-action-center',\n  templateUrl: './interval-action-center.component.html',\n  styleUrls: ['./interval-action-center.component.css']\n})\nexport class IntervalActionCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<router-outlet></router-outlet>","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-list text-danger mr-1\"></i> \n        <span i18n>Interval Action List</span> \n    </div>\n    <div class=\"card-body p-0 position-relative\">\n        <div class=\"bg-light px-2 py-2\">\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n                <button class=\"btn btn-primary\" (click)=\"refresh()\">\n                    <span>\n                        <i class=\"fa fa-refresh mr-1\"></i>\n                        <span i18n>Refresh</span> \n                    </span> \n                </button>\n                <button type=\"button\" class=\"btn btn-info\"  routerLink=\"../add-interval-action\">\n                    <span>\n                        <i class=\"fa fa-plus mr-1\"></i>\n                        <span i18n>Add</span> \n                    </span>\n                </button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"edit()\" [disabled]=\"intervalActionSelected.length !== 1\">\n                    <span>\n                        <i class=\"fa fa-edit mr-1\"></i>\n                        <span i18n>Edit</span>\n                    </span>\n                </button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteConfirm()\" [disabled]=\"intervalActionSelected.length === 0\">\n                    <span>\n                        <i class=\"fa fa-trash mr-1\"></i>\n                        <span i18n>Delete</span>\n                    </span>\n                </button>\n              </div>\n        </div>\n        <div class=\"table-responsive \">\n            <table class=\"table table-hover text-truncate \">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\"><input type=\"checkbox\" role=\"button\" [checked]=\"isCheckedAll()\" (click)=\"selectAll($event)\"></th>\n                      <th scope=\"col\" i18n>ID</th>\n                      <th scope=\"col\" i18n>Name</th>\n                      <th scope=\"col\" i18n>AssociatedInterval</th>\n                      <th scope=\"col\" i18n>AddressType</th>\n                      <!-- <th scope=\"col\">Created</th>\n                      <th scope=\"col\">Modified</th> -->\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let intervalAction of intervalActionList\" [class.table-active]=\"isChecked(intervalAction.name)\">\n                        <td> <input type=\"checkbox\" role=\"button\" [checked]=\"isChecked(intervalAction.name)\" (click)=\"selectOne($event,intervalAction)\"></td>\n                        <td class=\"user-select-all\">{{intervalAction.id}}</td>\n                        <td class=\"user-select-all\">{{intervalAction.name}}</td>\n                        <td>\n                            <a routerLink=\"../../interval-center\" [queryParams]=\"{'intervalName':intervalAction.intervalName}\">{{intervalAction.intervalName}}</a>\n                        </td>\n                        <td>{{intervalAction.address.type}}</td>                        \n                        <!-- <td>{{interval.created | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                        <td>{{interval.modified | date:'yyyy-MM-dd hh:mm:ss' }}</td> -->\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\" i18n>items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"custom-select\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\">\n                        <i class=\"fa fa-angle-double-left mr-1\"></i> \n                        <span i18n>Previous</span> \n                    </button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > intervalActionList.length\">\n                        <span i18n>Next</span> \n                        <i class=\"fa fa-angle-double-right ml-1\"></i>\n                    </button>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning mr-1\"></i>\n                    <span i18n>Warning</span> \n                </h5>  \n            </div>\n            <div class=\"modal-body\">\n                <span i18n>The data will be permanently erased!!! Are you sure to execute delete operation？</span> \n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" i18n>Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteIntervalActions()\" i18n>Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>\n    \n    ","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { IntervalAction } from '../../../contracts/v3/interval-action';\nimport { SchedulerService } from '../../../services/scheduler.service';\nimport { MultiIntervalActionResponse } from '../../../contracts/v3/responses/interval-action-response';\nimport { MessageService } from '../../../message/message.service';\n\n@Component({\n  selector: 'app-interval-action-list',\n  templateUrl: './interval-action-list.component.html',\n  styleUrls: ['./interval-action-list.component.css']\n})\nexport class IntervalActionListComponent implements OnInit {\n\n  intervalActionList: IntervalAction[] = [];\n  intervalActionSelected: IntervalAction[] = [];\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n\n  constructor(private schedulerSvc:SchedulerService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      if (params['intervalName']) {\n\n      } else {\n        this.findIntervalActionsPagination();\n      }\n    })\n  }\n\n  refresh() {\n    this.schedulerSvc.findAllIntervalActionsPagination(0, this.pageLimit).subscribe((data: MultiIntervalActionResponse) => {\n      this.intervalActionList = data.actions;\n      this.msgSvc.success('refresh');\n      this.resetPagination();\n    });\n  }\n\n  findIntervalActionsPagination() {\n    this.schedulerSvc.findAllIntervalActionsPagination(this.pageOffset, this.pageLimit).subscribe((data: MultiIntervalActionResponse) => {\n      this.intervalActionList = data.actions;\n    });\n  }\n\n  isCheckedAll(): boolean {\n    let checkedAll = true;\n    if (this.intervalActionList && this.intervalActionList.length === 0) {\n      checkedAll = false\n    }\n    this.intervalActionList.forEach(action => {\n      if (this.intervalActionSelected.findIndex(actionSelected => actionSelected.name === action.name) === -1) {\n        checkedAll = false\n      }\n    });\n    return checkedAll\n  }\n\n  selectAll(event: any) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.intervalActionList.forEach(intervalAction => {\n        if (this.intervalActionSelected.findIndex(actionSelected => actionSelected.name === intervalAction.name) !== -1) {\n            return\n        }\n        this.intervalActionSelected.push(intervalAction);\n      });\n    } else {\n      this.intervalActionList.forEach(intervalAction => {\n        let found = this.intervalActionSelected.findIndex(actionSelected => actionSelected.name === intervalAction.name);\n        if (found !== -1) {\n          this.intervalActionSelected.splice(found,1)\n        }\n      });\n    }\n  }\n\n  isChecked(name: string): boolean {\n    return this.intervalActionSelected.findIndex(intervalAction => intervalAction.name === name) >= 0;\n  }\n\n  selectOne(event: any, intervalAction: IntervalAction) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.intervalActionSelected.push(intervalAction);\n      return\n    }\n    let found = this.intervalActionSelected.findIndex(actionSelected => actionSelected.name === intervalAction.name);\n    if (found !== -1) {\n      this.intervalActionSelected.splice(found,1)\n    }\n  }\n\n  edit() {\n    this.router.navigate(['../edit-interval-action'], {\n      relativeTo: this.route,\n      queryParams: { 'intervalActionName': this.intervalActionSelected[0].name }\n    })\n  }\n\n  deleteConfirm() {\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n\n  deleteIntervalActions() {\n    this.intervalActionSelected.forEach((intervalAction,i) => {\n      this.schedulerSvc.deleteIntervalActionByName(intervalAction.name).subscribe(() => {\n        this.intervalActionList.forEach((item, index) => {\n          if (item.name === intervalAction.name) {\n            this.intervalActionList.splice(index,1);\n            return\n          }\n        });\n        this.intervalActionSelected.splice(i,1);\n        this.msgSvc.success('delete', `name: ${intervalAction.name}`);\n        this.resetPagination();\n        this.findIntervalActionsPagination();\n      });\n    });\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  onPageSelected() {\n    this.resetPagination();\n    this.setPagination();\n    this.findIntervalActionsPagination();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.findIntervalActionsPagination();\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.findIntervalActionsPagination();\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"combo-shielder\" *ngIf=\"visible\" (click)=\"close($event)\"></div>\n <div class=\"combo\">\n    <div class=\"input-group has-validation\" (click)=\"toggle($event)\">\n        <input type=\"text\" class=\"form-control\" name=\"selectedInterval\" readonly=\"readonly\" maxlength=\"0\" [(ngModel)]=\"selectedInterval.name\" [class.is-invalid]=\"!selectedInterval.name && validate\" [class.is-valid]=\"selectedInterval.name && validate\" required>\n        <div class=\"input-group-append\">\n            <span class=\"input-group-text\" role=\"button\"><i class=\"fa fa-chevron-down\"></i></span>\n        </div> \n        <div id=\"validationIntervalNameFeedback\" class=\"invalid-feedback\">\n            <small>the interval name can't be empty!</small> \n        </div>\n    </div>\n    <div [style.display]=\"!visible ? 'none': ''\" class=\"combo-body shadow rounded\">\n        <app-interval-list \n        (singleIntervalSelectedEvent)=\"onSingleIntervalSelected($event)\"\n        [singleIntervalSelected]=\"selectedInterval\"\n        [enableSelectAll]=\"false\"\n        [toolbars]=\"false\"\n        ></app-interval-list>\n    </div>\n </div>\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\n\nimport { Interval } from '../../../contracts/v3/interval';\n\n@Component({\n  selector: 'app-interval-combo-list',\n  templateUrl: './interval-combo-list.component.html',\n  styleUrls: ['./interval-combo-list.component.css']\n})\nexport class IntervalComboListComponent implements OnInit {\n\n  visible: boolean = false;\n  @Input() validate: boolean = false;\n  @Input() selectedInterval: Interval;\n  @Output() intervalSelectedEvent = new EventEmitter<Interval>();\n\n  constructor() {\n    this.selectedInterval = {} as Interval;\n  }\n\n  ngOnInit(): void { }\n\n  onSingleIntervalSelected(interval: Interval) {\n    this.selectedInterval = interval;\n    this.intervalSelectedEvent.emit(interval);\n  }\n\n  close(event: any) {\n    event.stopPropagation();\n    this.visible = false;\n  }\n\n  toggle(event: any) {\n    event.stopImmediatePropagation();\n    if (this.visible) {\n      this.visible = false;\n      return\n    }\n    this.visible = true;\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card mb-3\">\n     <div class=\"card-header\">\n        <i class=\"fa fa-info-circle mr-2 text-info\"></i>\n        <span i18n>Tips</span>\n     </div>\n     <div class=\"card-body\" i18n>\n        The support scheduler micro service provide an internal EdgeX “clock” that can kick off operations in any EdgeX service.\n        At a configuration specified time (called an interval), the service calls on any EdgeX service API URL via REST to trigger an operation (called an interval action).\n        For example, the scheduling service periodically calls on core data APIs to clean up old sensed events that have been successfully exported out of EdgeX.\n        <br> Users also can call the API of command service to collect one device's data automatically.\n     </div>\n </div>\n\n <div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-plus text-danger mr-1\"></i>\n        <span i18n>Add Interval Action</span>\n        <button class=\"btn btn-sm btn-success float-right\" (click)=\"submit()\" [disabled]=\"validate()\" i18n>Submit</button>\n    </div>\n    <div class=\"card-body\">\n        <form>\n            <div class=\"form-group row has-validation\">\n                <label for=\"intervalActionName\" class=\"col-md-2 col-form-label\" required i18n>Name</label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" id=\"validationIntervalActionName\" [class.is-invalid]=\"!intervalAction.name\" [class.is-valid]=\"intervalAction.name\" name=\"intervalActionName\" [(ngModel)]=\"intervalAction.name\" required>\n                    <div id=\"validationIntervalActionNameFeedback\" class=\"invalid-feedback\">\n                        <small>the interval action name can't be empty!</small>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"intervalName\" class=\"col-md-2 col-form-label\" i18n>IntervalName</label>\n                <div class=\"col-md-10\">\n                    <div class=\"mb-3\">\n                        <app-interval-combo-list [validate]=\"true\" (intervalSelectedEvent)=\"onSingleIntervalSelected($event)\"></app-interval-combo-list>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"adminState\" class=\"col-md-2 col-form-label\" i18n>AdminState</label>\n                <div class=\"col-md-10\">\n                    <select class=\"custom-select\" name=\"adminState\" [(ngModel)]=\"intervalAction.adminState\">\n                        <option value=\"UNLOCKED\">UNLOCKED</option>\n                        <option value=\"LOCKED\">LOCKED</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"Address\" class=\"col-md-2 col-form-label\" i18n>Address</label>\n                <div class=\"col-md-10\">\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            <div class=\"form-check form-check-inline\">\n                                <span class=\"badge\" [class.badge-secondary]=\"intervalAction.address.type !== 'REST'\" [class.badge-primary]=\"intervalAction.address.type === 'REST'\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"REST\" value=\"REST\" [(ngModel)]=\"intervalAction.address.type\" (click)=\"typeToggle('REST')\">\n                                    <label class=\"form-check-label\" for=\"REST\">REST</label>\n                                </span>\n                            </div>\n                            <div class=\"form-check form-check-inline\">\n                                <span class=\"badge\" [class.badge-secondary]=\"intervalAction.address.type !== 'MQTT'\" [class.badge-primary]=\"intervalAction.address.type === 'MQTT'\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"MQTT\" value=\"MQTT\" [(ngModel)]=\"intervalAction.address.type\" (click)=\"typeToggle('MQTT')\">\n                                    <label class=\"form-check-label\" for=\"MQTT\">MQTT</label>\n                                </span>\n                            </div>\n                            <div class=\"form-check form-check-inline\">\n                                <span class=\"badge\" [class.badge-secondary]=\"intervalAction.address.type !== 'EMAIL'\" [class.badge-primary]=\"intervalAction.address.type === 'EMAIL'\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"EMAIL\" value=\"EMAIL\" [(ngModel)]=\"intervalAction.address.type\" (click)=\"typeToggle('EMAIL')\">\n                                    <label class=\"form-check-label\" for=\"EMAIL\">EMAIL</label>\n                                </span>\n                            </div>\n                            <!-- <ul class=\"nav nav-tabs card-header-tabs\">\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link\" [class.active]=\"intervalAction.address?.type === 'REST'\" role=\"button\" (click)=\"typeToggle('REST')\">REST</a>\n                                </li>\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link\" [class.active]=\"intervalAction.address?.type === 'MQTT'\" role=\"button\" (click)=\"typeToggle('MQTT')\">MQTT</a>\n                                </li>\n                                <li class=\"nav-item\">\n                                    <a class=\"nav-link\" [class.active]=\"intervalAction.address?.type === 'EMAIL'\" role=\"button\" (click)=\"typeToggle('EMAIL')\">EMAIL</a>\n                                </li>\n                            </ul> -->\n                        </div>\n                        <div *ngIf=\"intervalAction.address.type === 'REST'\" class=\"card-header\">\n                            <span class=\"badge mr-2\" role=\"button\" [class.badge-secondary]=\"templateSelected !== 'coredata'\" [class.badge-primary]=\"templateSelected === 'coredata'\" (click)=\"templateToggle('coredata')\" i18n>CoreDataSeviceTemplate</span>\n                            <span class=\"badge mr-2\" role=\"button\" [class.badge-secondary]=\"templateSelected !== 'command'\" [class.badge-primary]=\"templateSelected === 'command'\" (click)=\"templateToggle('command')\" i18n>CommandServiceTemplate</span>\n                            <span class=\"badge mr-2\" role=\"button\" [class.badge-secondary]=\"templateSelected !== 'custom'\" [class.badge-primary]=\"templateSelected === 'custom'\" (click)=\"templateToggle('custom')\"  i18n>CustomTemplate</span>\n                        </div>\n                        <div class=\"card-body\">\n                            <div *ngIf=\"intervalAction.address.type === 'REST'\" #REST>\n                                <div [ngSwitch]=\"templateSelected\">\n                                    <ng-template [ngSwitchCase]=\"'custom'\" #customTemplate>\n                                        <form>\n                                            <div class=\"form-group row\">\n                                                <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required i18n>HttpMethod</label>\n                                                <div class=\"col-md-10\">\n                                                    <select type=\"text\" class=\"custom-select\" name=\"httpMethod\" [(ngModel)]=\"intervalAction.address.httpMethod\">\n                                                        <option value=\"GET\">GET</option>\n                                                        <option value=\"POST\">POST</option>\n                                                        <option value=\"PUT\">PUT</option>\n                                                        <option value=\"DELETE\">DELETE</option>\n                                                        <option value=\"PATCH\">PATCH</option>\n                                                        <option value=\"HEAD\">HEAD</option>\n                                                        <option value=\"TRACE\">TRACE</option>\n                                                        <option value=\"CONNECT\">CONNECT</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row has-validation\">\n                                                <label for=\"addressHostREST\" class=\"col-md-2 col-form-label\" required i18n>Host</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"addressHostREST\" [class.is-invalid]=\"!intervalAction.address.host\" [class.is-valid]=\"intervalAction.address.host\" name=\"addressHost\" [(ngModel)]=\"intervalAction.address.host\" required>\n                                                    <div id=\"addressHostRESTFeedback\" class=\"invalid-feedback\">\n                                                        <small>the REST address host can't be empty!</small>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row has-validation\">\n                                                <label for=\"addressPortREST\" class=\"col-md-2 col-form-label\" required i18n>Port</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"addressPortREST\" [class.is-invalid]=\"!isPureIntegerType(intervalAction.address.port)\" [class.is-valid]=\"isPureIntegerType(intervalAction.address.port)\" name=\"addressPort\" [(ngModel)]=\"intervalAction.address.port\" required>\n                                                    <div id=\"addressPortRESTFeedback\" class=\"invalid-feedback\">\n                                                        <small i18n>the REST address port can't be empty and only pure integer is supported!</small>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row\">\n                                                <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required i18n>Path</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"addressPath\" name=\"addressPath\" [(ngModel)]=\"intervalAction.address.path\">\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row\">\n                                                <label for=\"Content\" class=\"col-md-2 col-form-label\">\n                                                    <span class=\"mr-2\" i18n>Content</span>\n                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                     data-content=\"the actual content to be sent as the body,such as one string format of JSON\"></span>\n                                                </label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"Content\" name=\"Content\" [(ngModel)]=\"intervalAction.content\">\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row\">\n                                                <label for=\"ContentType\" class=\"col-md-2 col-form-label\">\n                                                    <span class=\"mr-2\">ContentType</span>\n                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                     data-content=\"Indicates which request contentType should be used (i.e. text/html, application/json), the default is application/json if not setup\"></span>\n                                                </label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"ContentType\" name=\"ContentType\" [(ngModel)]=\"intervalAction.contentType\">\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </ng-template>\n                                    <ng-template [ngSwitchCase]=\"'coredata'\" #coredataTemplate>\n                                        <form>\n                                            <div class=\"form-group row\">\n                                                <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required i18n>HttpMethod</label>\n                                                <div class=\"col-md-10\">\n                                                    <select type=\"text\" class=\"custom-select\" name=\"httpMethod\" [(ngModel)]=\"intervalAction.address.httpMethod\">\n                                                        <option value=\"DELETE\">DELETE</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row has-validation\">\n                                                <label for=\"addressHostREST\" class=\"col-md-2 col-form-label\" required>\n                                                    <span class=\"mr-2\">Host</span>\n                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                     data-content=\"Both Host and Port fields are editable if you have a different host address !\"></span>\n                                                </label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"addressHostREST\" [class.is-invalid]=\"!intervalAction.address.host\" [class.is-valid]=\"intervalAction.address.host\" name=\"addressHost\" [(ngModel)]=\"intervalAction.address.host\" required>\n                                                    <div id=\"addressHostRESTFeedback\" class=\"invalid-feedback\">\n                                                        <small i18n>the REST address host can't be empty!</small>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row has-validation\">\n                                                <label for=\"addressPortREST\" class=\"col-md-2 col-form-label\" required i18n>Port</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"addressPortREST\" [class.is-invalid]=\"!isPureIntegerType(intervalAction.address.port)\" [class.is-valid]=\"isPureIntegerType(intervalAction.address.port)\" name=\"addressPort\" [(ngModel)]=\"intervalAction.address.port\" required>\n                                                    <div id=\"addressPortRESTFeedback\" class=\"invalid-feedback\">\n                                                        <small i18n>the REST address port can't be empty and only pure integer is supported!</small>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row\">\n                                                <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required>\n                                                    <span class=\"mr-2\" i18n>Path</span>\n                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                    data-content=\"Remove all old events (and associated readings) based on delimiting age, the parameters delimiting age will be filled up automatically when parameters field is selected!\"></span>\n                                                </label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"addressPath\" name=\"addressPath\" [(ngModel)]=\"intervalAction.address.path\" disabled>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row\">\n                                                <label for=\"requestBody\" class=\"col-md-2 col-form-label\" required i18n>Parameter</label>\n                                                <div class=\"col-md-10\">\n                                                    <div class=\"input-group\">\n                                                        <div class=\"input-group-prepend\">\n                                                            <span class=\"input-group-text\"><i class=\"fa fa-calendar\"></i></span>\n                                                        </div>\n                                                        <input type=\"text\" class=\"form-control\" name=\"coredataRequestParameter\" [(ngModel)]=\"coredataRequestParameter\">\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </ng-template>\n                                    <ng-template [ngSwitchCase]=\"'command'\" #commandTemplate>\n                                        <form>\n                                            <div class=\"form-group row\">\n                                                <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required>\n                                                     <span class=\"mr-2\" i18n>HttpMethod</span>\n                                                     <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                     data-content=\"httpMethod field will be filled up automatically when the path field is selected! \"></span>\n                                                </label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\"  name=\"httpMethod\" disabled [(ngModel)]=\"intervalAction.address.httpMethod\" required>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row has-validation\">\n                                                <label for=\"addressHostREST\" class=\"col-md-2 col-form-label\" required>\n                                                    <span class=\"mr-2\">Host</span>\n                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                     data-content=\"Both Host and Port fields are editable if you have a different host address !\"></span>\n                                                </label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"addressHostREST\" [class.is-invalid]=\"!intervalAction.address.host\" [class.is-valid]=\"intervalAction.address.host\" name=\"addressHost\" [(ngModel)]=\"intervalAction.address.host\" required>\n                                                    <div id=\"addressHostRESTFeedback\" class=\"invalid-feedback\">\n                                                        <small i18n>the REST address host can't be empty!</small>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row has-validation\">\n                                                <label for=\"addressPortREST\" class=\"col-md-2 col-form-label\" required i18n>Port</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"addressPortREST\" [class.is-invalid]=\"!isPureIntegerType(intervalAction.address.port)\" [class.is-valid]=\"isPureIntegerType(intervalAction.address.port)\" name=\"addressPort\" [(ngModel)]=\"intervalAction.address.port\" required>\n                                                    <div id=\"addressPortRESTFeedback\" class=\"invalid-feedback\">\n                                                        <small i18n>the REST address port can't be empty and only pure integer is supported!</small>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row\">\n                                                <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required i18n>Path</label>\n                                                <div class=\"col-md-10\">\n                                                    <app-device-core-command-combo-list [validate]=\"true\" (cmdMethodEvent)=\"onCmdMethodSelected($event)\" (commandSelectedEvent)=\"onCommandSelected($event)\"></app-device-core-command-combo-list>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row\"  *ngIf=\"intervalAction.address.path && this.intervalAction.address.httpMethod\">\n                                                <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required i18n>Parameters</label>\n                                                <div class=\"col-md-10\">\n                                                    <div class=\"card\">\n                                                        <div class=\"card-header\">\n                                                            <span>Command Parameters Setting</span>\n                                                        </div>\n                                                        <div class=\"card-body\">\n                                                            <div *ngIf=\"this.intervalAction.address.httpMethod == 'PUT'; else getParameter\">\n                                                                <div *ngIf=\"commandServiceTemplateRequestParameters.length == 0\">\n                                                                    no paramters.\n                                                                </div>\n                                                                <div *ngFor=\"let param of commandServiceTemplateRequestParameters\">\n                                                                    <div class=\"form-group row\">\n                                                                        <label for=\"{{param.resourceName}}\" class=\"col-md-2 col-form-label\" i18n>{{param.resourceName}}</label>\n                                                                        <div class=\"col-md-10\">\n                                                                            <select *ngIf=\"param.valueType == 'Bool'; else valueTypeIsNotBool\" id=\"cmd-param-{{param.resourceName}}\" name=\"{{param.resourceName}}\" class=\"custom-select\">\n                                                                                <option [ngValue]=\"false\">false</option>\n                                                                                <option [ngValue]=\"true\">true</option>\n                                                                            </select>\n                                                                            <ng-template #valueTypeIsNotBool>\n                                                                                <input type=\"text\" class=\"form-control\" id=\"cmd-param-{{param.resourceName}}\" name=\"{{param.resourceName}}\" placeholder=\"valueType: {{param.valueType}}\">\n                                                                            </ng-template>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <ng-template #getParameter>\n                                                                <div class=\"form-group row\">\n                                                                    <label for=\"ds-pushevent\" class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\" i18n>pushevent</span>\n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                                        data-content=\"true indicates a successful GET will result in an event being pushed to the EdgeX system\"></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-10\">\n                                                                        <select id=\"ds-pushevent\" name=\"ds-pushevent\" class=\"custom-select\" [(ngModel)]=\"pushEventOfGetCmdParamter\">\n                                                                            <option value=\"true\">true</option>\n                                                                            <option value=\"false\">false</option>\n                                                                        </select>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label for=\"ds-returnevent\" class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\" i18n>returnevent</span>\n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                                        data-content=\"no indicates there will be no Event returned in the http response\"></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-10\">\n                                                                        <select id=\"ds-returnevent\" name=\"ds-returnevent\" class=\"custom-select\" [(ngModel)]=\"returnEventOfGetCmdParamter\">\n                                                                            <option value=\"true\">true</option>\n                                                                            <option value=\"false\">false</option>\n                                                                        </select>\n                                                                    </div>\n                                                                </div>\n                                                            </ng-template>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </ng-template>\n                                </div>\n                            </div>\n                            <div [style.display]=\"intervalAction.address.type !== 'MQTT' ? 'none' : ''\" #MQTT>\n                                <form>\n                                    <div class=\"form-group row has-validation\">\n                                        <label for=\"addressHostMQTT\" class=\"col-md-2 col-form-label\" required i18n>Host</label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"addressHostMQTT\" [class.is-invalid]=\"!intervalAction.address.host\" [class.is-valid]=\"intervalAction.address.host\" name=\"addressHost\" [(ngModel)]=\"intervalAction.address.host\" required>\n                                            <div id=\"addressHostMQTTFeedback\" class=\"invalid-feedback\">\n                                                <small i18n>the MQTT host can't be empty!</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row has-validation\">\n                                        <label for=\"addressPortMQTT\" class=\"col-md-2 col-form-label\" required i18n>Port</label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"addressPortMQTT\" [class.is-invalid]=\"!isPureIntegerType(intervalAction.address.port)\" [class.is-valid]=\"isPureIntegerType(intervalAction.address.port)\" name=\"addressPort\" [(ngModel)]=\"intervalAction.address.port\" required>\n                                            <div id=\"addressPortMQTTFeedback\" class=\"invalid-feedback\">\n                                                <small i18n>the MQTT port can't be empty and only pure integer is supported!!</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"Content\" class=\"col-md-2 col-form-label\">\n                                            <span class=\"mr-2\" i18n>Content</span>\n                                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                            data-content=\"the actual content to be sent as the body,such as one string format of JSON\"></span>\n                                        </label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"Content\" name=\"Content\" [(ngModel)]=\"intervalAction.content\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"ContentType\" class=\"col-md-2 col-form-label\">\n                                            <span class=\"mr-2\">ContentType</span>\n                                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                            data-content=\"Indicates which request contentType should be used (i.e. text/html, application/json), the default is application/json if not setup\"></span>\n                                        </label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"ContentType\" name=\"ContentType\" [(ngModel)]=\"intervalAction.contentType\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row has-validation\">\n                                        <label for=\"addressPublisher\" class=\"col-md-2 col-form-label\" required i18n>Publisher</label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"addressPublisher\" [class.is-invalid]=\"!intervalAction.address.publisher\" [class.is-valid]=\"intervalAction.address.publisher\" name=\"addressPublisher\" [(ngModel)]=\"intervalAction.address.publisher\" required>\n                                            <div id=\"addressPublisherFeedback\" class=\"invalid-feedback\">\n                                                <small i18n>the MQTT publisher can't be empty!</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row has-validation\">\n                                        <label for=\"addressTopic\" class=\"col-md-2 col-form-label\" required i18n>Topic</label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"addressTopic\" [class.is-invalid]=\"!intervalAction.address.topic\" [class.is-valid]=\"intervalAction.address.topic\" name=\"addressTopic\" [(ngModel)]=\"intervalAction.address.topic\" required>\n                                            <div id=\"addressTopicFeedback\" class=\"invalid-feedback\">\n                                                <small i18n>the MQTT topic can't be empty!</small>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"addressQoS\" class=\"col-md-2 col-form-label\">\n                                            <span class=\"mr-2\" i18n>QoS</span>\n                                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\"\n                                            data-content=\"only pure integer supported!\"></span>\n                                        </label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"number\" class=\"form-control\" id=\"addressQoS\" name=\"addressQoS\" [(ngModel)]=\"intervalAction.address.qos\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"addressKeepAlive\" class=\"col-md-2 col-form-label\">\n                                            <span class=\"mr-2\" i18n>KeepAlive</span>\n                                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\"\n                                            data-content=\"only pure integer supported!\"></span>\n                                        </label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"number\" class=\"form-control\" id=\"addressKeepAlive\" name=\"addressKeepAlive\" [(ngModel)]=\"intervalAction.address.keepAlive\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"addressRetained\" class=\"col-md-2 col-form-label\" required i18n>Retained</label>\n                                        <div class=\"col-md-10\">\n                                            <select type=\"text\" class=\"custom-select\" id=\"addressRetained\" name=\"addressRetained\" [(ngModel)]=\"intervalAction.address.retained\">\n                                                <option [ngValue]=\"false\">false</option>\n                                                <option [ngValue]=\"true\">true</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"addressAutoReconnect\" class=\"col-md-2 col-form-label\" required i18n>AutoReconnect</label>\n                                        <div class=\"col-md-10\">\n                                            <select type=\"text\" class=\"custom-select\" id=\"addressAutoReconnect\" name=\"addressAutoReconnect\" [(ngModel)]=\"intervalAction.address.autoReconnect\">\n                                                <option [ngValue]=\"true\">true</option>\n                                                <option [ngValue]=\"false\">false</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"addressConnectTimeout\" class=\"col-md-2 col-form-label\" required>\n                                            <span class=\"mr-2\" i18n>ConnectTimeout</span>\n                                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\"\n                                            data-content=\"only pure integer supported!\"></span>\n                                        </label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"number\" class=\"form-control\" id=\"addressConnectTimeout\" name=\"addressConnectTimeout\" [(ngModel)]=\"intervalAction.address.connectTimeout\">\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            <div [style.display]=\"intervalAction.address?.type !== 'EMAIL' ? 'none' : ''\" #EMAIL>\n                                <form>\n                                    <div class=\"form-group row\">\n                                        <label for=\"emailRecipients\" class=\"col-md-2 col-form-label\">\n                                            <span class=\"mr-2\" i18n>EmailRecipients</span>\n                                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\"\n                                            data-content=\"Multiple email addresses are separated by commas\"></span>\n                                        </label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"emailRecipients\" name=\"emailRecipients\" [(ngModel)]=\"addressEmailRecipients\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"Content\" class=\"col-md-2 col-form-label\">\n                                            <span class=\"mr-2\" i18n>Content</span>\n                                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                            data-content=\"the actual content to be sent as the body,such as one string format of JSON\"></span>\n                                        </label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"Content\" name=\"Content\" [(ngModel)]=\"intervalAction.content\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label for=\"ContentType\" class=\"col-md-2 col-form-label\">\n                                            <span class=\"mr-2\">ContentType</span>\n                                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                            data-content=\"Indicates which request contentType should be used (i.e. text/html, application/json), the default is application/json if not setup\"></span>\n                                        </label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"ContentType\" name=\"ContentType\" [(ngModel)]=\"intervalAction.contentType\">\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { SchedulerService } from '../../../services/scheduler.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\nimport { Address } from '../../../contracts/v3/address';\n\nimport { IntervalAction } from '../../../contracts/v3/interval-action';\nimport { Interval } from '../../../contracts/v3/interval';\nimport { CoreCommand } from '../../../contracts/v3/core-command';\nimport { CoreCommandParameter } from '../../../contracts/v3/core-command';\nimport flatpickr from 'flatpickr';\n\n@Component({\n  selector: 'app-add-interval-action',\n  templateUrl: './add-interval-action.component.html',\n  styleUrls: ['./add-interval-action.component.css']\n})\nexport class AddIntervalActionComponent implements OnInit {\n\n  addr_type_REST: string = 'REST';\n  addr_type_MQTT: string = 'MQTT';\n  addr_type_EMAIL: string = 'EMAIL';\n\n  template_type_coredata = 'coredata';\n  template_type_command = 'command';\n  template_type_custom = 'custom';\n\n  intervalAction: IntervalAction;\n  addressEmailRecipients: string = \"\";\n  templateSelected: string = \"coredata\";\n  coredataRequestParameter = '';\n  commandServiceTemplateRequestParameters: CoreCommandParameter[] = [];\n  pushEventOfGetCmdParamter = \"yes\";\n  returnEventOfGetCmdParamter = \"yes\";\n  calendarStart: any;\n\n  coredataSvcAvailableAPI: string[] = [\n    \"/api/v3/event/age/\"\n  ];\n\n  constructor(private schedulerSvc:SchedulerService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private errorSvc: ErrorService) {\n      this.intervalAction = { adminState: 'UNLOCKED' } as IntervalAction;\n      this.intervalAction.address = {} as Address;\n      this.intervalAction.address.type = 'REST';\n      this.intervalAction.address.httpMethod = 'GET';\n      this.intervalAction.address.retained = false;\n      this.intervalAction.address.autoReconnect = true;\n    }\n\n  ngOnInit(): void {\n    this.renderPopoverComponent();\n    this.renderCoredataDefaultTemplate();\n  }\n\n  initDatePickr() {\n    let that = this;\n    this.calendarStart = flatpickr(\"input[name='coredataRequestParameter']\", {\n      dateFormat: \"YmdTHiS\",\n      enableTime: true,\n      enableSeconds: true,\n      time_24hr: true,\n      allowInput: false,\n      onChange: function(selectedDates, dateStr, instance) {\n          that.intervalAction.address.path = that.coredataSvcAvailableAPI[0] + dateStr;\n      },\n    });\n  }\n\n  renderPopoverComponent() {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n  }\n\n  renderCoredataDefaultTemplate() {\n    this.intervalAction.address.httpMethod = 'DELETE';\n    this.intervalAction.address.host = 'edgex-core-data';\n    this.intervalAction.address.port = 59880;\n    this.intervalAction.address.path = this.coredataSvcAvailableAPI[0];\n    setTimeout(() => {\n      this.renderPopoverComponent();\n      this.initDatePickr();\n    }, 300);\n  }\n\n  templateToggle(template: string) {\n    this.templateSelected = template;\n    switch (this.templateSelected) {\n      case this.template_type_coredata:\n        this.renderCoredataDefaultTemplate();\n        break;\n      case this.template_type_command:\n        this.intervalAction.address.httpMethod = '';\n        this.intervalAction.address.host = 'edgex-core-command';\n        this.intervalAction.address.port = 59882;\n        this.intervalAction.address.path = '';\n        this.intervalAction.address.httpMethod = '';\n        setTimeout(() => {\n          this.renderPopoverComponent();\n        }, 300);\n        break;\n      case this.template_type_custom:\n        setTimeout(() => {\n          this.renderPopoverComponent();\n        }, 300);\n        this.intervalAction.address = {} as Address;\n        this.intervalAction.address.type = 'REST';\n        this.intervalAction.address.httpMethod = 'GET';\n        this.intervalAction.address.retained = false;\n        this.intervalAction.address.autoReconnect = true;\n    }\n  }\n\n  typeToggle(type: string) {\n    this.intervalAction.address.type = type;\n    if (type === 'REST') {\n      this.templateToggle('coredata');\n    }\n  }\n\n  onCmdMethodSelected(method: string) {\n    this.intervalAction.address.httpMethod = method;\n    setTimeout(() => {\n      this.renderPopoverComponent();\n    }, 500);\n  }\n\n  onCommandSelected(cmd: CoreCommand) {\n    this.intervalAction.address.path = cmd.path;\n    this.commandServiceTemplateRequestParameters = cmd.parameters;\n  }\n\n  onSingleIntervalSelected(interval: Interval) {\n    this.intervalAction.intervalName = interval.name;\n  }\n\n  isPureIntegerType(value: any): boolean {\n    if (!isNaN(value) && (parseFloat(value) === parseInt(value))) {\n      return true\n    }\n    return false\n  }\n\n  validate(): boolean {\n    let result = true;\n    let basic =  this.intervalAction.name && this.intervalAction.intervalName;\n    switch (this.intervalAction.address.type) {\n      case this.addr_type_REST:\n        if (basic && this.intervalAction.address.host &&\n          this.isPureIntegerType(this.intervalAction.address.port) &&\n          // this.intervalAction.address.port &&  // if the value of port is 0 will not be passed\n          this.intervalAction.address.path &&\n          this.intervalAction.address.httpMethod) {\n            result = false\n        }\n        break\n      case this.addr_type_MQTT:\n        if (basic && this.intervalAction.address.host &&\n          this.isPureIntegerType(this.intervalAction.address.port) &&\n          // this.intervalAction.address.port && // if the value of port is 0 will not be passed\n          this.intervalAction.address.publisher &&\n          this.intervalAction.address.topic) {\n            result = false\n        }\n        break\n      case this.addr_type_EMAIL:\n        if (basic) {\n          result = false\n        }\n    }\n    return result\n  }\n\n  getAllCmdTemplateParametersValue(): string {\n    if (this.intervalAction.address.type !== this.addr_type_REST ||\n      this.templateSelected !== this.template_type_command) {\n      return '';\n    }\n    if (this.intervalAction.address.httpMethod == 'GET') return '';\n    let params: any = {};\n    this.commandServiceTemplateRequestParameters?.forEach(p => {\n      if ($(`#cmd-param-${p.resourceName}`).val().trim() !== \"\") {\n        params[p.resourceName] = $(`#cmd-param-${p.resourceName}`).val().trim();\n      }\n    });\n    return JSON.stringify(params)\n  }\n\n  resetPathParameterSuffix() {\n    if (this.intervalAction.address.path.indexOf('ds-pushevent') !== -1 ||\n        this.intervalAction.address.path.indexOf('ds-returnevent') !== -1) {\n        this.intervalAction.address.path = this.intervalAction.address.path.split('?')[0];\n    }\n    this.intervalAction.address.path = `${this.intervalAction.address.path}?ds-pushevent=${this.pushEventOfGetCmdParamter}&ds-returnevent=${this.returnEventOfGetCmdParamter}`;\n  }\n\n  submit() {\n    this.intervalAction.address.recipients = this.addressEmailRecipients.split(',');\n    this.intervalAction.address.port = Number(this.intervalAction.address.port);\n\n    if (this.intervalAction.address.type === this.addr_type_REST &&\n        this.templateSelected === this.template_type_command) {\n          if (this.intervalAction.address.httpMethod === 'GET') {\n            this.resetPathParameterSuffix()\n          } else if (this.intervalAction.address.httpMethod === 'PUT') {\n            this.intervalAction.content = this.getAllCmdTemplateParametersValue();\n          }\n    }\n\n    this.schedulerSvc.addIntervalAction(this.intervalAction).subscribe((resp: any) => {\n      if(this.errorSvc.handleErrorForAPI(resp)) {\n        return\n      }\n      this.msgSvc.success('Add interval action',`name: ${this.intervalAction.name}`);\n      this.router.navigate(['../interval-action-list'],{ relativeTo: this.route });\n    })\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n   <div class=\"card-header\">\n       <i class=\"fa fa-edit text-danger mr-1\"></i>\n       <span i18n>Edit Interval Action</span>\n       <button class=\"btn btn-sm btn-success float-right\" (click)=\"save()\" [disabled]=\"validate()\" i18n>Save</button>\n   </div>\n   <div *ngIf=\"intervalAction\" class=\"card-body\">\n       <form>\n           <div class=\"form-group row has-validation\">\n               <label for=\"intervalActionName\" class=\"col-md-2 col-form-label\" required i18n>Name</label>\n               <div class=\"col-md-10\">\n                   <input type=\"text\" class=\"form-control\" id=\"validationIntervalActionName\" [class.is-invalid]=\"!intervalAction.name\" [class.is-valid]=\"intervalAction.name\" name=\"intervalActionName\" [(ngModel)]=\"intervalAction.name\" required>\n                   <div id=\"validationIntervalActionNameFeedback\" class=\"invalid-feedback\">\n                       <small>the interval action name can't be empty!</small>\n                   </div>\n               </div>\n           </div>\n           <div class=\"form-group row\">\n               <label for=\"intervalName\" class=\"col-md-2 col-form-label\" i18n>IntervalName</label>\n               <div class=\"col-md-10\">\n                   <div *ngIf=\"selectedIntervalDefault\" class=\"mb-3\">\n                       <app-interval-combo-list [validate]=\"true\" [selectedInterval]=\"selectedIntervalDefault\" (intervalSelectedEvent)=\"onSingleIntervalSelected($event)\"></app-interval-combo-list>\n                   </div>\n               </div>\n           </div>\n           <div class=\"form-group row\">\n                <label for=\"adminState\" class=\"col-md-2 col-form-label\" i18n>AdminState</label>\n                <div class=\"col-md-10\">\n                    <select class=\"custom-select\" name=\"adminState\" [(ngModel)]=\"intervalAction.adminState\">\n                        <option value=\"UNLOCKED\">UNLOCKED</option>\n                        <option value=\"LOCKED\">LOCKED</option>\n                    </select>\n                </div>\n           </div>\n           <div class=\"form-group row\">\n               <label for=\"Address\" class=\"col-md-2 col-form-label\" i18n>Address</label>\n               <div class=\"col-md-10\">\n                   <div class=\"card\">\n                       <div class=\"card-header\">\n                           <div class=\"form-check form-check-inline\">\n                               <span class=\"badge\" [class.badge-secondary]=\"intervalAction.address.type !== addr_type_REST\" [class.badge-primary]=\"intervalAction.address.type === addr_type_REST\" >\n                                   <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"REST\" value=\"REST\" [(ngModel)]=\"intervalAction.address.type\" (change)=\"typeToggle('REST')\">\n                                   <label class=\"form-check-label\" for=\"REST\">REST</label>\n                               </span>\n                           </div>\n                           <div class=\"form-check form-check-inline\">\n                               <span class=\"badge\" [class.badge-secondary]=\"intervalAction.address.type !== addr_type_MQTT\" [class.badge-primary]=\"intervalAction.address.type === addr_type_MQTT\" (click)=\"typeToggle('MQTT')\">\n                                   <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"MQTT\" value=\"MQTT\" [(ngModel)]=\"intervalAction.address.type\">\n                                   <label class=\"form-check-label\" for=\"MQTT\">MQTT</label>\n                               </span>\n                           </div>\n                           <div class=\"form-check form-check-inline\">\n                               <span class=\"badge\" [class.badge-secondary]=\"intervalAction.address.type !== addr_type_EMAIL\" [class.badge-primary]=\"intervalAction.address.type === addr_type_EMAIL\" (click)=\"typeToggle('EMAIL')\">\n                                   <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"EMAIL\" value=\"EMAIL\" [(ngModel)]=\"intervalAction.address.type\">\n                                   <label class=\"form-check-label\" for=\"EMAIL\">EMAIL</label>\n                               </span>\n                           </div>\n                           <!-- <ul class=\"nav nav-tabs card-header-tabs\">\n                               <li class=\"nav-item\">\n                                   <a class=\"nav-link\" [class.active]=\"intervalAction.address?.type === 'REST'\" role=\"button\" (click)=\"typeToggle('REST')\">REST</a>\n                               </li>\n                               <li class=\"nav-item\">\n                                   <a class=\"nav-link\" [class.active]=\"intervalAction.address?.type === 'MQTT'\" role=\"button\" (click)=\"typeToggle('MQTT')\">MQTT</a>\n                               </li>\n                               <li class=\"nav-item\">\n                                   <a class=\"nav-link\" [class.active]=\"intervalAction.address?.type === 'EMAIL'\" role=\"button\" (click)=\"typeToggle('EMAIL')\">EMAIL</a>\n                               </li>\n                           </ul> -->\n                       </div>\n                       <div *ngIf=\"intervalAction.address.type === addr_type_REST\" class=\"card-header\">\n                            <span class=\"mr-2 text-primary\" i18n>Available and Editable templates >></span>\n                            <span class=\"fa fa-question-circle-o fa-lg mr-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                            data-content=\"custom template will be choosed by default\"></span>\n                            <span class=\"badge mr-2\" role=\"button\" [class.badge-secondary]=\"templateSelected !== template_type_coredata\" [class.badge-primary]=\"templateSelected === template_type_coredata\" (click)=\"templateToggle(template_type_coredata)\" i18n>CoreDataSeviceTemplate</span>\n                            <span class=\"badge mr-2\" role=\"button\" [class.badge-secondary]=\"templateSelected !== template_type_command\" [class.badge-primary]=\"templateSelected === template_type_command\" (click)=\"templateToggle(template_type_command)\" i18n>CommandServiceTemplate</span>\n                            <span class=\"badge mr-2\" role=\"button\" [class.badge-secondary]=\"templateSelected !== template_type_custom\" [class.badge-primary]=\"templateSelected === template_type_custom\" (click)=\"templateToggle(template_type_custom)\" i18n>CustomTemplate</span>\n                        </div>\n                       <div class=\"card-body\">\n                           <div *ngIf=\"intervalAction.address.type === 'REST'\" #REST>\n                            <div [ngSwitch]=\"templateSelected\">\n                                <ng-template [ngSwitchCase]=\"template_type_custom\" #customTemplate>\n                                    <form>\n                                        <div class=\"form-group row\">\n                                            <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required>HttpMethod</label>\n                                            <div class=\"col-md-10\">\n                                                <select type=\"text\" class=\"custom-select\" name=\"httpMethod\" [(ngModel)]=\"intervalAction.address.httpMethod\">\n                                                    <option value=\"GET\">GET</option>\n                                                    <option value=\"POST\">POST</option>\n                                                    <option value=\"PUT\">PUT</option>\n                                                    <option value=\"DELETE\">DELETE</option>\n                                                    <option value=\"PATCH\">PATCH</option>\n                                                    <option value=\"HEAD\">HEAD</option>\n                                                    <option value=\"TRACE\">TRACE</option>\n                                                    <option value=\"CONNECT\">CONNECT</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row has-validation\">\n                                            <label for=\"addressHostREST\" class=\"col-md-2 col-form-label\" required>Host</label>\n                                            <div class=\"col-md-10\">\n                                                <input type=\"text\" class=\"form-control\" id=\"addressHostREST\" [class.is-invalid]=\"!intervalAction.address.host\" [class.is-valid]=\"intervalAction.address.host\" name=\"addressHost\" [(ngModel)]=\"intervalAction.address.host\" required>\n                                                <div id=\"addressHostRESTFeedback\" class=\"invalid-feedback\">\n                                                    <small>the REST address host can't be empty!</small>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row has-validation\">\n                                            <label for=\"addressPortREST\" class=\"col-md-2 col-form-label\" required>Port</label>\n                                            <div class=\"col-md-10\">\n                                                <input type=\"text\" class=\"form-control\" id=\"addressPortREST\" [class.is-invalid]=\"!isPureIntegerType(intervalAction.address.port)\" [class.is-valid]=\"isPureIntegerType(intervalAction.address.port)\" name=\"addressPort\" [(ngModel)]=\"intervalAction.address.port\" required>\n                                                <div id=\"addressPortRESTFeedback\" class=\"invalid-feedback\">\n                                                    <small>the REST address port can't be empty and only pure integer is supported!</small>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required>Path</label>\n                                            <div class=\"col-md-10\">\n                                                <input type=\"text\" class=\"form-control\" id=\"addressPath\" name=\"addressPath\" [(ngModel)]=\"intervalAction.address.path\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label for=\"Content\" class=\"col-md-2 col-form-label\">\n                                                <span class=\"mr-2\" i18n>Content</span>\n                                                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                 data-content=\"the actual content to be sent as the body,such as one string format of JSON\"></span>\n                                            </label>\n                                            <div class=\"col-md-10\">\n                                                <input type=\"text\" class=\"form-control\" id=\"Content\" name=\"Content\" [(ngModel)]=\"intervalAction.content\">\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label for=\"ContentType\" class=\"col-md-2 col-form-label\">\n                                                <span class=\"mr-2\">ContentType</span>\n                                                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                 data-content=\"Indicates which request contentType should be used (i.e. text/html, application/json), the default is application/json if not setup\"></span>\n                                            </label>\n                                            <div class=\"col-md-10\">\n                                                <input type=\"text\" class=\"form-control\" id=\"ContentType\" name=\"ContentType\" [(ngModel)]=\"intervalAction.contentType\">\n                                            </div>\n                                        </div>\n                                    </form>\n                                </ng-template>\n                                <ng-template [ngSwitchCase]=\"template_type_coredata\" #coredataTemplate>\n                                    <form>\n                                        <div class=\"form-group row\">\n                                            <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required>HttpMethod</label>\n                                            <div class=\"col-md-10\">\n                                                <select type=\"text\" class=\"custom-select\" name=\"httpMethod\" [(ngModel)]=\"intervalAction.address.httpMethod\">\n                                                    <option value=\"DELETE\">DELETE</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row has-validation\">\n                                            <label for=\"addressHostREST\" class=\"col-md-2 col-form-label\" required>\n                                                <span class=\"mr-2\">Host</span>\n                                                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                 data-content=\"Both Host and Port fields are editable if you have a different host address !\"></span>\n                                            </label>\n                                            <div class=\"col-md-10\">\n                                                <input type=\"text\" class=\"form-control\" id=\"addressHostREST\" [class.is-invalid]=\"!intervalAction.address.host\" [class.is-valid]=\"intervalAction.address.host\" name=\"addressHost\" [(ngModel)]=\"intervalAction.address.host\" required>\n                                                <div id=\"addressHostRESTFeedback\" class=\"invalid-feedback\">\n                                                    <small>the REST address host can't be empty!</small>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row has-validation\">\n                                            <label for=\"addressPortREST\" class=\"col-md-2 col-form-label\" required>Port</label>\n                                            <div class=\"col-md-10\">\n                                                <input type=\"text\" class=\"form-control\" id=\"addressPortREST\" [class.is-invalid]=\"!isPureIntegerType(intervalAction.address.port)\" [class.is-valid]=\"isPureIntegerType(intervalAction.address.port)\" name=\"addressPort\" [(ngModel)]=\"intervalAction.address.port\" required>\n                                                <div id=\"addressPortRESTFeedback\" class=\"invalid-feedback\">\n                                                    <small>the REST address port can't be empty and only pure integer is supported!</small>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required>\n                                                <span class=\"mr-2\">Path</span>\n                                                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                data-content=\"Remove all old events (and associated readings) based on delimiting age, the parameters delimiting age will be filled up automatically when parameters field is selected!\"></span>\n                                            </label>\n                                            <div class=\"col-md-10\">\n                                                <input type=\"text\" class=\"form-control\" id=\"addressPath\" name=\"addressPath\" [(ngModel)]=\"intervalAction.address.path\" disabled>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label for=\"requestBody\" class=\"col-md-2 col-form-label\" required>Parameter</label>\n                                            <div class=\"col-md-10\">\n                                                <div class=\"input-group\">\n                                                    <div class=\"input-group-prepend\">\n                                                        <span class=\"input-group-text\"><i class=\"fa fa-calendar\"></i></span>\n                                                    </div>\n                                                    <input type=\"text\" class=\"form-control\" name=\"coredataRequestParameter\" [(ngModel)]=\"coredataRequestParameter\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </ng-template>\n                                <ng-template [ngSwitchCase]=\"template_type_command\" #commandTemplate>\n                                    <form>\n                                        <div class=\"form-group row\">\n                                            <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required>\n                                                 <span class=\"mr-2\">HttpMethod</span>\n                                                 <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                 data-content=\"httpMethod field will be filled up automatically when the path field is selected! \"></span>\n                                            </label>\n                                            <div class=\"col-md-10\">\n                                                <input type=\"text\" class=\"form-control\"  name=\"httpMethod\" disabled [(ngModel)]=\"intervalAction.address.httpMethod\" required>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row has-validation\">\n                                            <label for=\"addressHostREST\" class=\"col-md-2 col-form-label\" required>\n                                                <span class=\"mr-2\">Host</span>\n                                                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                 data-content=\"Both Host and Port fields are editable if you have a different host address !\"></span>\n                                            </label>\n                                            <div class=\"col-md-10\">\n                                                <input type=\"text\" class=\"form-control\" id=\"addressHostREST\" [class.is-invalid]=\"!intervalAction.address.host\" [class.is-valid]=\"intervalAction.address.host\" name=\"addressHost\" [(ngModel)]=\"intervalAction.address.host\" required>\n                                                <div id=\"addressHostRESTFeedback\" class=\"invalid-feedback\">\n                                                    <small>the REST address host can't be empty!</small>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row has-validation\">\n                                            <label for=\"addressPortREST\" class=\"col-md-2 col-form-label\" required>Port</label>\n                                            <div class=\"col-md-10\">\n                                                <input type=\"text\" class=\"form-control\" id=\"addressPortREST\" [class.is-invalid]=\"!isPureIntegerType(intervalAction.address.port)\" [class.is-valid]=\"isPureIntegerType(intervalAction.address.port)\" name=\"addressPort\" [(ngModel)]=\"intervalAction.address.port\" required>\n                                                <div id=\"addressPortRESTFeedback\" class=\"invalid-feedback\">\n                                                    <small>the REST address port can't be empty and only pure integer is supported!</small>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required>Path</label>\n                                            <div class=\"col-md-10\">\n                                                <app-device-core-command-combo-list [validate]=\"true\" (cmdMethodEvent)=\"onCmdMethodSelected($event)\" (commandSelectedEvent)=\"onCommandSelected($event)\"></app-device-core-command-combo-list>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\"  *ngIf=\"intervalAction.address.path && this.intervalAction.address.httpMethod\">\n                                            <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required i18n>Parameters</label>\n                                            <div class=\"col-md-10\">\n                                                <div class=\"card\">\n                                                    <div class=\"card-header\">\n                                                        <span>Command Parameters Setting</span>\n                                                    </div>\n                                                    <div class=\"card-body\">\n                                                        <div *ngIf=\"this.intervalAction.address.httpMethod == 'PUT'; else getParameter\">\n                                                            <div *ngIf=\"commandServiceTemplateRequestParameters.length == 0\">\n                                                                no paramters.\n                                                            </div>\n                                                            <div *ngFor=\"let param of commandServiceTemplateRequestParameters\">\n                                                                <div class=\"form-group row\">\n                                                                    <label for=\"{{param.resourceName}}\" class=\"col-md-2 col-form-label\" i18n>{{param.resourceName}}</label>\n                                                                    <div class=\"col-md-10\">\n                                                                        <select *ngIf=\"param.valueType == 'Bool'; else valueTypeIsNotBool\" id=\"cmd-param-{{param.resourceName}}\" name=\"{{param.resourceName}}\" class=\"custom-select\">\n                                                                            <option [ngValue]=\"false\">false</option>\n                                                                            <option [ngValue]=\"true\">true</option>\n                                                                        </select>\n                                                                        <ng-template #valueTypeIsNotBool>\n                                                                            <input type=\"text\" class=\"form-control\" id=\"cmd-param-{{param.resourceName}}\" name=\"{{param.resourceName}}\" placeholder=\"valueType: {{param.valueType}}\">\n                                                                        </ng-template>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <ng-template #getParameter>\n                                                            <div class=\"form-group row\">\n                                                                <label for=\"ds-pushevent\" class=\"col-md-2 col-form-label\">\n                                                                    <span class=\"mr-2\" i18n>pushevent</span>\n                                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                                    data-content=\"true indicates a successful GET will result in an event being pushed to the EdgeX system\"></span>\n                                                                </label>\n                                                                <div class=\"col-md-10\">\n                                                                    <select id=\"ds-pushevent\" name=\"ds-pushevent\" class=\"custom-select\" [(ngModel)]=\"pushEventOfGetCmdParamter\">\n                                                                        <option value=\"true\">true</option>\n                                                                        <option value=\"false\">false</option>\n                                                                    </select>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"form-group row\">\n                                                                <label for=\"ds-returnevent\" class=\"col-md-2 col-form-label\">\n                                                                    <span class=\"mr-2\" i18n>returnevent</span>\n                                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                                                    data-content=\"no indicates there will be no Event returned in the http response\"></span>\n                                                                </label>\n                                                                <div class=\"col-md-10\">\n                                                                    <select id=\"ds-returnevent\" name=\"ds-returnevent\" class=\"custom-select\" [(ngModel)]=\"returnEventOfGetCmdParamter\">\n                                                                        <option value=\"true\">true</option>\n                                                                        <option value=\"false\">false</option>\n                                                                    </select>\n                                                                </div>\n                                                            </div>\n                                                        </ng-template>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </ng-template>\n                            </div>\n                           </div>\n                           <div *ngIf=\"intervalAction.address?.type === addr_type_MQTT\" #MQTT>\n                               <form>\n                                   <div class=\"form-group row has-validation\">\n                                       <label for=\"addressHost\" class=\"col-md-2 col-form-label\" required>Host</label>\n                                       <div class=\"col-md-10\">\n                                           <input type=\"text\" class=\"form-control\" id=\"addressHost\" [class.is-invalid]=\"!intervalAction.address.host\" [class.is-valid]=\"intervalAction.address.host\" name=\"addressHost\" [(ngModel)]=\"intervalAction.address.host\" required>\n                                           <div id=\"addressHostFeedback\" class=\"invalid-feedback\">\n                                               <small>the MQTT host can't be empty!</small>\n                                           </div>\n                                       </div>\n                                   </div>\n                                   <div class=\"form-group row has-validation\">\n                                       <label for=\"addressPort\" class=\"col-md-2 col-form-label\" required>Port</label>\n                                       <div class=\"col-md-10\">\n                                           <input type=\"text\" class=\"form-control\" id=\"addressPort\" [class.is-invalid]=\"!isPureIntegerType(intervalAction.address.port)\" [class.is-valid]=\"isPureIntegerType(intervalAction.address.port)\" name=\"addressPort\" [(ngModel)]=\"intervalAction.address.port\" required>\n                                           <div id=\"addressPortFeedback\" class=\"invalid-feedback\">\n                                               <small>the MQTT port can't be empty and only pure integer is supported!!</small>\n                                           </div>\n                                       </div>\n                                   </div>\n                                   <div class=\"form-group row\">\n                                        <label for=\"Content\" class=\"col-md-2 col-form-label\">\n                                            <span class=\"mr-2\" i18n>Content</span>\n                                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                            data-content=\"the actual content to be sent as the body,such as one string format of JSON\"></span>\n                                        </label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"Content\" name=\"Content\" [(ngModel)]=\"intervalAction.content\">\n                                        </div>\n                                   </div>\n                                   <div class=\"form-group row\">\n                                        <label for=\"ContentType\" class=\"col-md-2 col-form-label\">\n                                            <span class=\"mr-2\">ContentType</span>\n                                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                            data-content=\"Indicates which request contentType should be used (i.e. text/html, application/json), the default is application/json if not setup\"></span>\n                                        </label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"ContentType\" name=\"ContentType\" [(ngModel)]=\"intervalAction.contentType\">\n                                        </div>\n                                   </div>\n                                   <div class=\"form-group row has-validation\">\n                                       <label for=\"addressPublisher\" class=\"col-md-2 col-form-label\" required>Publisher</label>\n                                       <div class=\"col-md-10\">\n                                           <input type=\"text\" class=\"form-control\" id=\"addressPublisher\" [class.is-invalid]=\"!intervalAction.address.publisher\" [class.is-valid]=\"intervalAction.address.publisher\" name=\"addressPublisher\" [(ngModel)]=\"intervalAction.address.publisher\" required>\n                                           <div id=\"addressPublisherFeedback\" class=\"invalid-feedback\">\n                                               <small>the MQTT publisher can't be empty!</small>\n                                           </div>\n                                       </div>\n                                   </div>\n                                   <div class=\"form-group row has-validation\">\n                                       <label for=\"addressTopic\" class=\"col-md-2 col-form-label\" required>Topic</label>\n                                       <div class=\"col-md-10\">\n                                           <input type=\"text\" class=\"form-control\" id=\"addressTopic\" [class.is-invalid]=\"!intervalAction.address.topic\" [class.is-valid]=\"intervalAction.address.topic\" name=\"addressTopic\" [(ngModel)]=\"intervalAction.address.topic\" required>\n                                           <div id=\"addressTopicFeedback\" class=\"invalid-feedback\">\n                                               <small>the MQTT topic can't be empty!</small>\n                                           </div>\n                                       </div>\n                                   </div>\n                                   <div class=\"form-group row\">\n                                       <label for=\"addressQoS\" class=\"col-md-2 col-form-label\" required>QoS</label>\n                                       <div class=\"col-md-10\">\n                                           <input type=\"number\" class=\"form-control\" id=\"addressQoS\" name=\"addressQoS\" [(ngModel)]=\"intervalAction.address.qos\" required>\n                                       </div>\n                                   </div>\n                                   <div class=\"form-group row\">\n                                       <label for=\"addressKeepAlive\" class=\"col-md-2 col-form-label\" required>KeepAlive</label>\n                                       <div class=\"col-md-10\">\n                                           <input type=\"number\" class=\"form-control\" id=\"addressKeepAlive\" name=\"addressKeepAlive\" [(ngModel)]=\"intervalAction.address.keepAlive\">\n                                       </div>\n                                   </div>\n                                   <div class=\"form-group row\">\n                                       <label for=\"addressRetained\" class=\"col-md-2 col-form-label\" required>Retained</label>\n                                       <div class=\"col-md-10\">\n                                           <select type=\"text\" class=\"custom-select\" id=\"addressRetained\" name=\"addressRetained\" [(ngModel)]=\"intervalAction.address.retained\">\n                                               <option [ngValue]=\"false\" selected>false</option>\n                                               <option [ngValue]=\"true\">true</option>\n                                           </select>\n                                       </div>\n                                   </div>\n                                   <div class=\"form-group row\">\n                                       <label for=\"addressAutoReconnect\" class=\"col-md-2 col-form-label\" required>AutoReconnect</label>\n                                       <div class=\"col-md-10\">\n                                           <select type=\"text\" class=\"custom-select\" id=\"addressAutoReconnect\" name=\"addressAutoReconnect\" [(ngModel)]=\"intervalAction.address.autoReconnect\">\n                                               <option [ngValue]=\"true\" selected>true</option>\n                                               <option [ngValue]=\"false\">false</option>\n                                           </select>\n                                       </div>\n                                   </div>\n                                   <div class=\"form-group row\">\n                                       <label for=\"addressConnectTimeout\" class=\"col-md-2 col-form-label\" required>ConnectTimeout</label>\n                                       <div class=\"col-md-10\">\n                                           <input type=\"number\" class=\"form-control\" id=\"addressConnectTimeout\" name=\"addressConnectTimeout\" [(ngModel)]=\"intervalAction.address.connectTimeout\">\n                                       </div>\n                                   </div>\n                               </form>\n                           </div>\n                           <div [style.display]=\"intervalAction.address.type !== addr_type_EMAIL ? 'none' : ''\" #EMAIL>\n                               <form>\n                                   <div class=\"form-group row\">\n                                       <label for=\"emailRecipients\" class=\"col-md-2 col-form-label\">\n                                           <span class=\"mr-2\">EmailRecipients</span>\n                                           <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\"\n                                           data-content=\"Multiple email addresses are separated by commas\"></span>\n                                       </label>\n                                       <div class=\"col-md-10\">\n                                           <input type=\"text\" class=\"form-control\" id=\"emailRecipients\" name=\"emailRecipients\" [(ngModel)]=\"addressEmailRecipients\">\n                                       </div>\n                                   </div>\n                                   <div class=\"form-group row\">\n                                        <label for=\"Content\" class=\"col-md-2 col-form-label\">\n                                            <span class=\"mr-2\" i18n>Content</span>\n                                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                            data-content=\"the actual content to be sent as the body,such as one string format of JSON\"></span>\n                                        </label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"Content\" name=\"Content\" [(ngModel)]=\"intervalAction.content\">\n                                        </div>\n                                   </div>\n                                   <div class=\"form-group row\">\n                                        <label for=\"ContentType\" class=\"col-md-2 col-form-label\">\n                                            <span class=\"mr-2\">ContentType</span>\n                                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                            data-content=\"Indicates which request contentType should be used (i.e. text/html, application/json), the default is application/json if not setup\"></span>\n                                        </label>\n                                        <div class=\"col-md-10\">\n                                            <input type=\"text\" class=\"form-control\" id=\"ContentType\" name=\"ContentType\" [(ngModel)]=\"intervalAction.contentType\">\n                                        </div>\n                                   </div>\n                               </form>\n                           </div>\n                       </div>\n                   </div>\n               </div>\n           </div>\n       </form>\n   </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { SchedulerService } from '../../../services/scheduler.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\nimport { Address } from '../../../contracts/v3/address';\n\nimport { IntervalAction } from '../../../contracts/v3/interval-action';\nimport { Interval } from '../../../contracts/v3/interval';\nimport { IntervalActionResponse } from '../../../contracts/v3/responses/interval-action-response';\nimport { IntervalResponse } from '../../../contracts/v3/responses/interval-response';\nimport { CoreCommand } from '../../../contracts/v3/core-command';\nimport { CoreCommandParameter } from '../../../contracts/v3/core-command';\nimport flatpickr from 'flatpickr';\n\n@Component({\n  selector: 'app-edit-interval-action',\n  templateUrl: './edit-interval-action.component.html',\n  styleUrls: ['./edit-interval-action.component.css']\n})\nexport class EditIntervalActionComponent implements OnInit {\n\n  addr_type_REST: string = 'REST';\n  addr_type_MQTT: string = 'MQTT';\n  addr_type_EMAIL: string = 'EMAIL';\n\n  template_type_coredata = 'coredata';\n  template_type_command = 'command';\n  template_type_custom = 'custom';\n\n  intervalActionOrigin: IntervalAction;\n  intervalAction: IntervalAction;\n  addressEmailRecipients: string = \"\";\n  selectedIntervalDefault?: Interval;\n  templateSelected: string = \"custom\";\n  coredataRequestParameter = '';\n  commandServiceTemplateRequestParameters: CoreCommandParameter[] = [];\n  pushEventOfGetCmdParamter = \"true\";\n  returnEventOfGetCmdParamter = \"true\";\n  calendarStart: any;\n\n  coredataSvcAvailableAPI: string[] = [\n    //one of delete or data clean APIs of core data service\n    \"/api/v3/event/age/\"\n  ];\n\n  constructor(private schedulerSvc:SchedulerService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private errorSvc: ErrorService) {\n      this.intervalAction = {} as IntervalAction;\n      this.intervalActionOrigin = {} as IntervalAction;\n      this.intervalAction.address = {} as Address;\n  }\n\n  ngOnInit(): void {\n    this.renderPopoverComponent();\n    this.route.queryParams.subscribe(params => {\n      if (params['intervalActionName']) {\n        this.schedulerSvc.findIntervalActionByName(params['intervalActionName']).subscribe((resp: IntervalActionResponse)=>{\n          this.intervalAction = JSON.parse(JSON.stringify(resp.action));\n          this.intervalActionOrigin = JSON.parse(JSON.stringify(resp.action));\n\n          this.intervalActionOrigin.adminState = this.intervalActionOrigin.adminState === '' ? \"UNLOCKED\" : this.intervalActionOrigin.adminState;\n          this.intervalAction.adminState = this.intervalAction.adminState === '' ? \"UNLOCKED\" : this.intervalAction.adminState;\n\n          this.addressEmailRecipients  = this.intervalAction.address.recipients?this.intervalAction.address.recipients.toString():'';\n          this.findDefaultSelectedIntervalByName(this.intervalAction.intervalName);\n          setTimeout(() => {\n            this.renderPopoverComponent();\n            this.initDatePickr();\n          }, 300);\n        });\n      }\n    })\n  }\n\n  initDatePickr() {\n    let that = this;\n    this.calendarStart = flatpickr(\"input[name='coredataRequestParameter']\", {\n      dateFormat: \"YmdTHiS\",\n      enableTime: true,\n      enableSeconds: true,\n      time_24hr: true,\n      allowInput: false,\n      onChange: function(selectedDates, dateStr, instance) {\n          that.intervalAction.address.path = that.coredataSvcAvailableAPI[0] + dateStr;\n      },\n    });\n  }\n\n  setActionDefaultProperties() {\n   switch (this.intervalAction.address.type) {\n      case this.addr_type_REST:\n        this.intervalAction.address.httpMethod = 'GET';\n        break\n      case this.addr_type_MQTT:\n        this.intervalAction.address.retained = false;\n        this.intervalAction.address.autoReconnect = true;\n        break\n      default:\n   }\n  }\n\n  findDefaultSelectedIntervalByName(name: string) {\n    this.schedulerSvc.findIntervalByName(name).subscribe((resp: IntervalResponse)=>{\n      this.selectedIntervalDefault = resp.interval;\n    });\n  }\n\n  renderPopoverComponent() {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n  }\n\n  renderCoredataDefaultTemplate() {\n    this.intervalAction.address.httpMethod = 'DELETE';\n    this.intervalAction.address.host = 'edgex-core-data';\n    this.intervalAction.address.port = 59880;\n    this.intervalAction.address.path = this.coredataSvcAvailableAPI[0];\n    setTimeout(() => {\n      this.renderPopoverComponent();\n      this.initDatePickr();\n    }, 300);\n  }\n\n  templateToggle(template: string) {\n    this.intervalAction = JSON.parse(JSON.stringify(this.intervalActionOrigin));\n    this.intervalAction.address.type = this.addr_type_REST;\n    this.templateSelected = template;\n    switch (this.templateSelected) {\n      case this.template_type_coredata:\n        this.renderCoredataDefaultTemplate();\n        break;\n      case this.template_type_command:\n        this.intervalAction.address.path = '';\n        this.intervalAction.address.httpMethod = '';\n        setTimeout(() => {\n          this.renderPopoverComponent();\n        }, 300);\n        break;\n      case this.template_type_custom:\n        setTimeout(() => {\n          this.renderPopoverComponent();\n        }, 300);\n    }\n  }\n\n  typeToggle(type: string) {\n    this.intervalAction = JSON.parse(JSON.stringify(this.intervalActionOrigin));\n    this.intervalAction.address.type = type;\n    this.templateSelected = 'custom';\n    setTimeout(() => {\n      this.renderPopoverComponent();\n    }, 300);\n    // this.setActionDefaultProperties();\n  }\n\n  onCmdMethodSelected(method: string) {\n    this.intervalAction.address.httpMethod = method;\n    setTimeout(() => {\n      this.renderPopoverComponent();\n    }, 500);\n  }\n\n  onCommandSelected(cmd: CoreCommand) {\n    this.intervalAction.address.path = cmd.path;\n    this.commandServiceTemplateRequestParameters = cmd.parameters;\n  }\n\n  onSingleIntervalSelected(interval: Interval) {\n    this.intervalAction.intervalName = interval.name;\n  }\n\n  isPureIntegerType(value: any): boolean {\n    if (!isNaN(value) && (parseFloat(value) === parseInt(value))) {\n      return true\n    }\n    return false\n  }\n\n  validate(): boolean {\n    let result = true;\n    let basic =  this.intervalAction.name && this.intervalAction.intervalName;\n    switch (this.intervalAction.address.type) {\n      case this.addr_type_REST:\n        if (basic && this.intervalAction.address.host &&\n          this.isPureIntegerType(this.intervalAction.address.port) &&\n          this.intervalAction.address.path &&\n          this.intervalAction.address.httpMethod) {\n            result = false\n        }\n        break\n      case this.addr_type_MQTT:\n        if (basic && this.intervalAction.address.host &&\n          this.isPureIntegerType(this.intervalAction.address.port) &&\n          // this.intervalAction.address.port && // if the value of port is 0 will not be passed\n          this.intervalAction.address.publisher &&\n          this.intervalAction.address.topic) {\n            result = false\n        }\n        break\n      case this.addr_type_EMAIL:\n        if (basic) {\n          result = false\n        }\n    }\n    return result\n  }\n\n  getAllCmdTemplateParametersValue(): string {\n    if (this.intervalAction.address.type !== this.addr_type_REST ||\n      this.templateSelected !== this.template_type_command) {\n      return '';\n    }\n    if (this.intervalAction.address.httpMethod == 'GET') return '';\n    let params: any = {};\n    this.commandServiceTemplateRequestParameters?.forEach(p => {\n      if ($(`#cmd-param-${p.resourceName}`).val().trim() !== \"\") {\n        params[p.resourceName] = $(`#cmd-param-${p.resourceName}`).val().trim();\n      }\n    });\n    return JSON.stringify(params)\n  }\n\n  resolveCommandTemplateParameterSuffix() {\n    //path value example: /api/v3/device/name/Random-Integer-Device/Int16Array?ds-pushevent=false&ds-returnevent=true\n    if (this.intervalAction.address.path.indexOf('ds-pushevent') !== -1 ||\n        this.intervalAction.address.path.indexOf('ds-returnevent') !== -1) {\n        let path = this.intervalAction.address.path.split('?');\n        this.intervalAction.address.path = path[0];\n        let parametersStr = path[1];\n        let parameters = parametersStr.split('&');\n        parameters.forEach((paramStr) => {\n          let paramKV = paramStr.split('=');\n          if (paramKV[0] === 'ds-pushevent') {\n            this.pushEventOfGetCmdParamter = paramKV[1]\n          } else if (paramKV[0] === 'ds-returnevent') {\n            this.returnEventOfGetCmdParamter = paramKV[1]\n          }\n        })\n\n    }\n  }\n\n  resetPathParameterSuffix() {\n    if (this.intervalAction.address.path.indexOf('ds-pushevent') !== -1 ||\n        this.intervalAction.address.path.indexOf('ds-returnevent') !== -1) {\n        this.intervalAction.address.path = this.intervalAction.address.path.split('?')[0];\n    }\n    this.intervalAction.address.path = `${this.intervalAction.address.path}?ds-pushevent=${this.pushEventOfGetCmdParamter}&ds-returnevent=${this.returnEventOfGetCmdParamter}`;\n  }\n\n  save() {\n    this.intervalAction.address.recipients = this.addressEmailRecipients.split(',');\n    this.intervalAction.address.port = Number(this.intervalAction.address.port);\n\n    if (this.intervalAction.address.type === this.addr_type_REST &&\n      this.templateSelected === this.template_type_command) {\n        if (this.intervalAction.address.httpMethod === 'GET') {\n          this.resetPathParameterSuffix()\n        } else if (this.intervalAction.address.httpMethod === 'PUT') {\n          this.intervalAction.content = this.getAllCmdTemplateParametersValue();\n        }\n    }\n\n    this.schedulerSvc.updateIntervalAction(this.intervalAction).subscribe((resp: any)=>{\n      if(this.errorSvc.handleErrorForAPI(resp)) {\n        return\n      }\n      this.msgSvc.success('Update interval action',`name: ${this.intervalAction.name}`);\n      this.router.navigate(['../interval-action-list'],{ relativeTo: this.route });\n    });\n  }\n}\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\n import { Injectable } from '@angular/core';\n import { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\n import { Observable, of } from 'rxjs';\n import { SchedulerService } from '../../services/scheduler.service';\n import { mergeMap, take ,catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchedulerAliveGuard  {\n  constructor(private router: Router, private schedulerSvc: SchedulerService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.checkAvailable(route,\n      state);\n  }\n\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.canActivate(route,state)\n  }\n\n  checkAvailable(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.schedulerSvc.ping().pipe(\n      take(1),\n      catchError((error)=>{\n        return this.router.navigate(['/svc-unavailable'],{ \n          queryParams: {'svcName':'scheduler','routerPath':`/${state.url.split('/')[1]}`}\n        })\n      }),\n      mergeMap(() => {\n        return of(true)\n      })\n    )\n  }\n  \n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SchedulerComponent } from './scheduler.component';\nimport { IntervalCenterComponent } from './interval/interval-center/interval-center.component';\nimport { IntervalListComponent } from './interval/interval-list/interval-list.component';\nimport { AddIntervalComponent } from './interval/add-interval/add-interval.component';\nimport { EditIntervalComponent } from './interval/edit-interval/edit-interval.component';\nimport { IntervalActionCenterComponent } from './intervalaction/interval-action-center/interval-action-center.component';\nimport { IntervalActionListComponent } from './intervalaction/interval-action-list/interval-action-list.component';\nimport { AddIntervalActionComponent } from './intervalaction/add-interval-action/add-interval-action.component';\nimport { EditIntervalActionComponent } from './intervalaction/edit-interval-action/edit-interval-action.component';\nimport { AuthGuard } from '../guards/auth/guard/auth.guard';\nimport { SchedulerAliveGuard } from '../guards/health/scheduler-alive.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SchedulerComponent,\n    canActivate: [AuthGuard, SchedulerAliveGuard],\n    canActivateChild: [SchedulerAliveGuard],\n    children: [\n      {\n        path: '',\n        redirectTo: 'interval-center',\n        pathMatch: 'full'\n      },\n      {\n        path: 'interval-center',\n        component: IntervalCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'interval-list',\n            pathMatch: 'full'\n          },\n          {\n            path: 'interval-list',\n            component: IntervalListComponent\n          },\n          {\n            path: 'add-interval',\n            component: AddIntervalComponent\n          },\n          {\n            path: 'edit-interval',\n            component: EditIntervalComponent\n          }\n        ]\n      },\n      {\n        path: 'interval-action-center',\n        component: IntervalActionCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'interval-action-list',\n            pathMatch: 'full'\n          },\n          {\n            path: 'interval-action-list',\n            component: IntervalActionListComponent\n          },\n          {\n            path: 'add-interval-action',\n            component: AddIntervalActionComponent\n          },\n          {\n            path: 'edit-interval-action',\n            component: EditIntervalActionComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SchedulerRoutingModule { }\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { SchedulerRoutingModule } from './scheduler-routing.module';\nimport { SchedulerComponent } from './scheduler.component';\nimport { AddIntervalComponent } from './interval/add-interval/add-interval.component';\nimport { EditIntervalComponent } from './interval/edit-interval/edit-interval.component';\nimport { IntervalListComponent } from './interval/interval-list/interval-list.component';\nimport { IntervalActionListComponent } from './intervalaction/interval-action-list/interval-action-list.component';\nimport { AddIntervalActionComponent } from './intervalaction/add-interval-action/add-interval-action.component';\nimport { EditIntervalActionComponent } from './intervalaction/edit-interval-action/edit-interval-action.component';\nimport { IntervalCenterComponent } from './interval/interval-center/interval-center.component';\nimport { IntervalActionCenterComponent } from './intervalaction/interval-action-center/interval-action-center.component';\nimport { IntervalComboListComponent } from './interval/interval-combo-list/interval-combo-list.component';\nimport { CommandModule } from '../command/command.module';\n\n@NgModule({\n  declarations: [SchedulerComponent, AddIntervalComponent, EditIntervalComponent, IntervalListComponent, IntervalActionListComponent, AddIntervalActionComponent, EditIntervalActionComponent, IntervalCenterComponent, IntervalActionCenterComponent, IntervalComboListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    CommandModule,\n    SchedulerRoutingModule,\n    \n  ]\n})\nexport class SchedulerModule { }\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { ErrorService } from './error.service';\n\nimport { DeviceCoreCommandResponse, MultiDeviceCoreCommandsResponse } from '../contracts/v3/responses/device-core-command-response';\nimport { EventResponse } from '../contracts/v3/responses/event-response';\nimport { BaseResponse } from '../contracts/v3/common/base-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommandService {\n\n  endpoint: string = \"/core-command\";\n  version: string = \"/api/v3\";\n  urlPrefix: string = `${this.endpoint}${this.version}`;\n\n  endpointHealthUrl: string = \"/ping\";\n  versionUrl: string = \"/version\";\n\n  configUrl: string = \"/config\";\n\n  deviceCoreCommandListUrl: string = `${this.urlPrefix}/device/all`;\n  commandsByDeviceIdUrl: string = `${this.urlPrefix}/device/`; //deprecated\n  commandsByDeviceNameUrl: string = `${this.urlPrefix}/device/name/`; //deprecated\n  issueCmdByDeviceNameAndCmdNameUrl: string = `${this.urlPrefix}/device/name/`;\n\n  httpPostOrPutJSONOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient, private errorSvc: ErrorService) { }\n\n  getConfig(): Observable<any> {\n    let url = `${this.urlPrefix}${this.configUrl}`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findCommnadsByDeviceId(deviceId: string): Observable<any> {\n    let url = `${this.commandsByDeviceIdUrl}${deviceId}`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  allDeviceCoreCommandsPagination(offset: number, limit: number): Observable<MultiDeviceCoreCommandsResponse> {\n    let url = `${this.deviceCoreCommandListUrl}?offset=${offset}&limit=${limit}`;\n    return this.http.get<MultiDeviceCoreCommandsResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findDeviceAssociatedCommnadsByDeviceName(name: string): Observable<DeviceCoreCommandResponse> {\n    let url = `${this.commandsByDeviceNameUrl}${name}`;\n    return this.http.get<DeviceCoreCommandResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findAllDeviceCommnads(): Observable<any> {\n    let url = `${this.urlPrefix}/device`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  issueGetBinaryCmd(deviceId: string, commandId: string): Observable<any> {\n    let url = `${this.commandsByDeviceIdUrl}${deviceId}/command/${commandId}`;\n    return this.http.request('GET', url, {\n      responseType: 'arraybuffer'\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  issueGetCmd(deviceName: string, commandName: string): Observable<EventResponse> {\n    let url = `${this.issueCmdByDeviceNameAndCmdNameUrl}${deviceName}/${commandName}?ds-pushevent=true&ds-returnevent=true`;\n    return this.http.get<EventResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  issueSetCmd(deviceName: string, commandName: string, params?: any): Observable<BaseResponse> {\n    let url = `${this.issueCmdByDeviceNameAndCmdNameUrl}${deviceName}/${commandName}`;\n    return this.http.put<BaseResponse>(url, JSON.stringify(params),this.httpPostOrPutJSONOptions).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n}\n"],"names":["SchedulerComponent","constructor","ngOnInit","static","this","t","core","Xpm","selectors","decls","vars","consts","i18n_0","$localize","i0","IntervalCenterComponent","template","rf","ctx","_r4","ctx_r3","refresh","ctx_r5","edit","ctx_r6","deleteConfirm","ctx_r0","intervalSelected","length","$event","_r8","ctx_r7","selectAll","ctx_r1","isCheckedAll","interval_r9","_r11","$implicit","ctx_r10","selectOne","ctx_r2","isChecked","name","id","start","end","interval","runOnce","IntervalListComponent","schedulerSvc","msgSvc","route","router","errSvc","enableSelectAll","singleIntervalSelectedEvent","EventEmitter","toolbars","intervalList","pagination","pageLimit","pageOffset","queryParams","subscribe","params","intervalName","findIntervalByName","resp","push","findIntervalsPagination","findAllIntervalsPagination","data","handleErrorForAPI","intervals","success","resetPagination","onSingleIntervalSelectedEmitter","emit","singleIntervalSelected","isSingleChecked","selectSingleInterval","event","target","checked","forEach","checkedAll","findIndex","found","splice","navigate","relativeTo","$","modal","deleteIntervals","i","deleteIntervalByName","item","index","onPageSelected","setPagination","prePage","nextPage","n","i1","i2","i3","i4","inputs","outputs","IntervalListComponent_div_6_Template","IntervalListComponent_input_12_Template","IntervalListComponent_tr_26_Template","AddIntervalComponent","popover","trigger","initDatePickr","calendarStart","flatpickr","dateFormat","enableTime","enableSeconds","time_24hr","allowInput","calendarEnd","submit","addInterval","ngOnDestroy","_r3","ctx_r4","EditIntervalComponent","param","setTimeout","update","updateInterval","EditIntervalComponent_form_9_Template","IntervalActionCenterComponent","intervalAction_r1","_c32","address","type","IntervalActionListComponent","intervalActionList","intervalActionSelected","findIntervalActionsPagination","findAllIntervalActionsPagination","actions","action","actionSelected","intervalAction","intervalActionName","deleteIntervalActions","deleteIntervalActionByName","IntervalActionListComponent_tr_43_Template","_r2","close","IntervalComboListComponent","visible","validate","intervalSelectedEvent","selectedInterval","onSingleIntervalSelected","stopPropagation","toggle","stopImmediatePropagation","IntervalComboListComponent_div_0_Template","_r5","templateToggle","templateSelected","_r16","ctx_r15","httpMethod","ctx_r17","host","ctx_r18","port","ctx_r19","path","ctx_r20","content","ctx_r21","contentType","isPureIntegerType","_r23","ctx_r22","ctx_r24","ctx_r25","ctx_r26","ctx_r27","coredataRequestParameter","ctx_r12","param_r34","resourceName","valueType","AddIntervalActionComponent_div_63_ng_template_7_div_31_div_9_div_2_select_5_Template","AddIntervalActionComponent_div_63_ng_template_7_div_31_div_9_div_2_ng_template_6_Template","_r36","AddIntervalActionComponent_div_63_ng_template_7_div_31_div_9_div_1_Template","AddIntervalActionComponent_div_63_ng_template_7_div_31_div_9_div_2_Template","ctx_r29","commandServiceTemplateRequestParameters","_r41","ctx_r40","pushEventOfGetCmdParamter","ctx_r42","returnEventOfGetCmdParamter","ctx_r31","AddIntervalActionComponent_div_63_ng_template_7_div_31_div_9_Template","AddIntervalActionComponent_div_63_ng_template_7_div_31_ng_template_10_Template","ctx_r28","_r30","_r44","ctx_r43","ctx_r45","ctx_r46","ctx_r47","onCmdMethodSelected","ctx_r48","onCommandSelected","AddIntervalActionComponent_div_63_ng_template_7_div_31_Template","ctx_r14","AddIntervalActionComponent_div_63_ng_template_3_Template","AddIntervalActionComponent_div_63_ng_template_5_Template","AddIntervalActionComponent_div_63_ng_template_7_Template","AddIntervalActionComponent","errorSvc","addr_type_REST","addr_type_MQTT","addr_type_EMAIL","template_type_coredata","template_type_command","template_type_custom","addressEmailRecipients","coredataSvcAvailableAPI","adminState","retained","autoReconnect","renderPopoverComponent","renderCoredataDefaultTemplate","that","onChange","selectedDates","dateStr","instance","typeToggle","method","cmd","parameters","value","isNaN","parseFloat","parseInt","result","basic","publisher","topic","getAllCmdTemplateParametersValue","p","val","trim","JSON","stringify","resetPathParameterSuffix","indexOf","split","recipients","Number","addIntervalAction","AddIntervalActionComponent_div_61_Template","AddIntervalActionComponent_div_63_Template","qos","keepAlive","connectTimeout","_r7","selectedIntervalDefault","_r9","ctx_r8","ctx_r11","_r20","ctx_r23","_r27","ctx_r30","ctx_r16","param_r38","EditIntervalActionComponent_div_7_div_47_ng_template_7_div_31_div_9_div_2_select_5_Template","EditIntervalActionComponent_div_7_div_47_ng_template_7_div_31_div_9_div_2_ng_template_6_Template","_r40","EditIntervalActionComponent_div_7_div_47_ng_template_7_div_31_div_9_div_1_Template","EditIntervalActionComponent_div_7_div_47_ng_template_7_div_31_div_9_div_2_Template","ctx_r33","_r45","ctx_r44","ctx_r35","EditIntervalActionComponent_div_7_div_47_ng_template_7_div_31_div_9_Template","EditIntervalActionComponent_div_7_div_47_ng_template_7_div_31_ng_template_10_Template","ctx_r32","_r34","_r48","ctx_r49","ctx_r50","ctx_r51","ctx_r52","EditIntervalActionComponent_div_7_div_47_ng_template_7_div_31_Template","EditIntervalActionComponent_div_7_div_47_ng_template_3_Template","EditIntervalActionComponent_div_7_div_47_ng_template_5_Template","EditIntervalActionComponent_div_7_div_47_ng_template_7_Template","_r55","ctx_r54","ctx_r56","ctx_r57","ctx_r58","ctx_r59","ctx_r60","ctx_r61","ctx_r62","ctx_r63","ctx_r64","ctx_r65","_r67","ctx_r66","EditIntervalActionComponent_div_7_div_14_Template","ctx_r68","ctx_r69","ctx_r70","ctx_r71","ctx_r72","ctx_r73","ctx_r74","EditIntervalActionComponent_div_7_div_45_Template","EditIntervalActionComponent_div_7_div_47_Template","EditIntervalActionComponent_div_7_div_48_Template","ctx_r75","ctx_r76","ctx_r77","EditIntervalActionComponent","intervalActionOrigin","findIntervalActionByName","parse","toString","findDefaultSelectedIntervalByName","setActionDefaultProperties","resolveCommandTemplateParameterSuffix","paramStr","paramKV","save","updateIntervalAction","EditIntervalActionComponent_div_7_Template","SchedulerAliveGuard","canActivate","state","checkAvailable","canActivateChild","ping","pipe","take","catchError","error","svcName","routerPath","url","mergeMap","of","Yz7","factory","ɵfac","providedIn","routes","component","AuthGuard","children","redirectTo","pathMatch","SchedulerRoutingModule","oAB","cJS","RouterModule","forChild","SchedulerModule","CommonModule","FormsModule","CommandModule","CommandService","http","endpoint","version","urlPrefix","endpointHealthUrl","versionUrl","configUrl","deviceCoreCommandListUrl","commandsByDeviceIdUrl","commandsByDeviceNameUrl","issueCmdByDeviceNameAndCmdNameUrl","httpPostOrPutJSONOptions","headers","HttpHeaders","getConfig","get","handleError","findCommnadsByDeviceId","deviceId","allDeviceCoreCommandsPagination","offset","limit","findDeviceAssociatedCommnadsByDeviceName","findAllDeviceCommnads","issueGetBinaryCmd","commandId","request","responseType","issueGetCmd","deviceName","commandName","issueSetCmd","put","_angular_core__WEBPACK_IMPORTED_MODULE_3__"],"sourceRoot":"webpack:///"}