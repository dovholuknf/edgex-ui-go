{"version":3,"file":"369.476914ba33bb6fbd.js","mappings":"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","sources":["./src/app/rule-engine/rule-engine.component.ts","./src/app/rule-engine/rule-engine.component.html","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js","./src/app/rule-engine/rules/sinks/sink-base-properties/sink-base-properties.component.html","./src/app/rule-engine/rules/sinks/sink-base-properties/sink-base-properties.component.ts","./src/app/rule-engine/rules/sinks/edgex-sink/edgex-sink-optional/edgex-sink-optional.component.html","./src/app/rule-engine/rules/sinks/edgex-sink/edgex-sink-optional/edgex-sink-optional.component.ts","./src/app/rule-engine/rules/sinks/edgex-sink/edgex-sink.component.ts","./src/app/rule-engine/rules/sinks/edgex-sink/edgex-sink.component.html","./src/app/command/command-service-template/command-service-template.component.html","./src/app/command/command-service-template/command-service-template.component.ts","./src/app/rule-engine/rules/sinks/rest-sink/rest-sink.component.html","./src/app/rule-engine/rules/sinks/rest-sink/rest-sink.component.ts","./src/app/rule-engine/rules/sinks/mqtt-sink/mqtt-sink.component.ts","./src/app/rule-engine/rules/sinks/mqtt-sink/mqtt-sink.component.html","./src/app/rule-engine/rules/sinks/log-sink/log-sink.component.ts","./src/app/rule-engine/rules/sinks/log-sink/log-sink.component.html","./src/app/rule-engine/rules/sinks/sink-list/sink-list.component.html","./src/app/rule-engine/rules/sinks/sink-list/sink-list.component.ts","./src/app/rule-engine/rules/rule-advanced-options/rule-advanced-options.component.html","./src/app/rule-engine/rules/rule-advanced-options/rule-advanced-options.component.ts","./src/app/rule-engine/rules/add-rules/add-rules.component.html","./src/app/rule-engine/rules/add-rules/add-rules.component.ts","./src/app/rule-engine/rules/edit-rules/edit-rules.component.html","./src/app/rule-engine/rules/edit-rules/edit-rules.component.ts","./src/app/rule-engine/rules/rules-center/rules-center.component.ts","./src/app/rule-engine/rules/rules-center/rules-center.component.html","./src/app/rule-engine/rules/rules-list/rules-list.component.html","./src/app/rule-engine/rules/rules-list/rules-list.component.ts","./src/app/rule-engine/stream/add-stream/add-stream.component.html","./src/app/rule-engine/stream/add-stream/add-stream.component.ts","./src/app/rule-engine/stream/edit-stream/edit-stream.component.html","./src/app/rule-engine/stream/edit-stream/edit-stream.component.ts","./src/app/rule-engine/stream/stream-center/stream-center.component.ts","./src/app/rule-engine/stream/stream-center/stream-center.component.html","./src/app/rule-engine/stream/stream-list/stream-list.component.html","./src/app/rule-engine/stream/stream-list/stream-list.component.ts","./src/app/guards/health/rule-engine-alive.guard.ts","./src/app/rule-engine/rule-engine-routing.module.ts","./src/app/rule-engine/rule-engine.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rule-engine',\n  templateUrl: './rule-engine.component.html',\n  styleUrls: ['./rule-engine.component.css']\n})\nexport class RuleEngineComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n      <ul class=\"nav nav-tabs card-header-tabs font-weight-bold\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link \" routerLink=\"./stream-center\" routerLinkActive=\"active\" i18n>Stream</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"./rules-center\" routerLinkActive=\"active\" i18n>Rules</a>\n          </li>\n      </ul>\n    </div>\n    <div class=\"card-body\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header\" role=\"button\" data-toggle=\"collapse\" data-target=\"#collapse-sink-base\" aria-expanded=\"false\" aria-controls=\"collapse-sink-base\" (click)=\"collapseToggle()\">\n        <i class=\"fa fa-tags text-primary mr-2\"></i>\n        <span class=\"text-primary\" i18n>Sink Advanced Options</span>\n        <span class=\"text-primary ml-2\">\n            <i role=\"button\" aria-disabled=\"true\" class=\"fa fa-angle-double-down fa-lg\" *ngIf=\"!collapseToggleStatus\" data-toggle=\"collapse\" data-target=\"#collapse-sink-base\" aria-expanded=\"false\" aria-controls=\"collapse-sink-base\"></i>\n            <i role=\"button\" aria-disabled=\"true\" class=\"fa fa-angle-double-up fa-lg\"  *ngIf=\"collapseToggleStatus\" data-toggle=\"collapse\" data-target=\"#collapse-sink-base\" aria-expanded=\"false\" aria-controls=\"collapse-sink-base\"></i>\n        </span>\n    </div>\n    <div class=\"card-body collapse\" id=\"collapse-sink-base\">\n        <form [formGroup]=\"sinkBasePropertiesForm\">\n            <div class=\"form-group row\">\n                <label class=\"col col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">concurrency</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Specify how many instances of the sink will be run. If the value is bigger than 1, the order of the messages may not be retained.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <input type=\"number\" class=\"form-control\" name=\"concurrency\" formControlName=\"concurrency\">\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label class=\"col col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">bufferLength</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Specify how many messages can be buffered in memory. If the buffered messages exceed the limit, the sink will block message receiving until the buffered messages have been sent out so that the buffered size is less than the limit.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <input type=\"number\" class=\"form-control\" name=\"bufferLength\" formControlName=\"bufferLength\">\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">retryInterval</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Specify how many milliseconds will the sink retry to send data out if the previous send failed. If the specified value &lt;= 0, then it will not retry.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <input type=\"number\" class=\"form-control\" name=\"retryInterval\" formControlName=\"retryInterval\">\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">retryCount</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Specify how many will the sink retry to send data out if the previous send failed. If the specified value &lt;= 0, then it will not retry.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <input type=\"number\" class=\"form-control\" name=\"retryCount\" formControlName=\"retryCount\">\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">cacheLength</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Specify how many messages can be cached. The cached messages will be resent to external system until the data sent out successfully. The cached message will be sent in order except in runAsync or concurrent mode. The cached message will be saved to disk in fixed intervals.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <input type=\"number\" class=\"form-control\" name=\"cacheLength\" formControlName=\"cacheLength\">\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">cacheSaveInterval</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Specify the interval to save cached message to the disk. Notice that, if the rule is closed in plan, all the cached messages will be saved at close. A larger value can reduce the saving overhead but may lose more cache messages when the system is interrupted in error.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <input type=\"number\" class=\"form-control\" name=\"cacheSaveInterval\" formControlName=\"cacheSaveInterval\">\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">runAsync</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Whether the sink will run asynchronously for better performance. If it is true, the sink result order is not promised.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <select class=\"custom-select\" name=\"runAsync\" formControlName=\"runAsync\">\n                        <option [ngValue]=\"false\">false</option>\n                        <option [ngValue]=\"true\">true</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">omitIfEmpty</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='If the configuration item is set to true, when SELECT result is empty, then the result will not feed to sink operator.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <select class=\"custom-select\" name=\"omitIfEmpty\" formControlName=\"omitIfEmpty\">\n                        <option [ngValue]=\"false\">false</option>\n                        <option [ngValue]=\"true\">true</option>\n                    </select>\n                </div>\n            </div>\n        </form>\n    </div>\n </div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, Input, Output, EventEmitter, AfterViewInit, OnChanges } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { SinkBaseProperties } from '../../../../contracts/kuiper/sink-base-properties';\n\n@Component({\n  selector: 'app-sink-base-properties',\n  templateUrl: './sink-base-properties.component.html',\n  styleUrls: ['./sink-base-properties.component.css']\n})\nexport class SinkBasePropertiesComponent implements AfterViewInit, OnChanges {\n\n  collapseToggleStatus: boolean = false; //down-open-true, up-close-false\n\n  /* sendSingle, dataTemplate will be ignored.\n  * although this two properties are treated as common properties, see https://github.com/lf-edge/ekuiper/blob/master/docs/en_US/rules/overview.md\n  * but the frequency used by user is very high, after discussed with kuiper team.\n  * especial the dataTemplate property which is treated as http request boy and mqqt payload.\n  * maybe kuiper team will redesign their struct of the sink object.\n  * so will not render them here, will show them in each one sink type.\n  */\n  sinkBasePropertiesForm = new UntypedFormGroup({\n    concurrency: new UntypedFormControl(1),\n    bufferLength: new UntypedFormControl(1024),\n    runAsync: new UntypedFormControl(false),\n    retryInterval: new UntypedFormControl(1000),\n    retryCount: new UntypedFormControl(0),\n    cacheLength: new UntypedFormControl(1024),\n    cacheSaveInterval: new UntypedFormControl(1000),\n    omitIfEmpty: new UntypedFormControl(false)\n  });\n\n  //be treated as advanced options/properties\n  @Input() sinkBaseProperties: SinkBaseProperties;\n  @Output() sinkBasePropertiesChange = new EventEmitter<SinkBaseProperties>();\n\n  constructor() {\n    this.sinkBaseProperties = {} as SinkBaseProperties;\n  }\n\n  ngOnChanges(): void {\n    //remove below two properties avoiding binding back to parent component\n    delete this.sinkBaseProperties.sendSingle\n    delete this.sinkBaseProperties.dataTemplate\n     let obj: any = {}\n     for (const [k,v]of Object.entries(this.sinkBaseProperties)) {\n       if (this.sinkBasePropertiesForm.value.hasOwnProperty(k) && v) {\n         obj[k] = v\n       }\n     }\n    this.sinkBasePropertiesForm.patchValue(obj)\n  }\n\n  ngAfterViewInit(): void {\n    this.sinkBasePropertiesForm.valueChanges.pipe(debounceTime(400), distinctUntilChanged()).subscribe(() => {\n      Object.assign(this.sinkBaseProperties,this.sinkBasePropertiesForm.value)\n      this.sinkBasePropertiesChange.emit(this.sinkBaseProperties)\n    })\n  }\n\n  collapseToggle() {\n    if (this.collapseToggleStatus) {\n      this.collapseToggleStatus = false //close\n      return\n    }\n    this.collapseToggleStatus = true //open\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header\" role=\"button\" data-toggle=\"collapse\" data-target=\"#collapse-edgex-sink-opts\" aria-expanded=\"false\" aria-controls=\"collapse-edgex-sink-opts\" (click)=\"collapseToggle()\">\n        <i class=\"fa fa-tags text-primary mr-2\"></i>\n        <span class=\"text-primary\">EdgeX Sink Options Setting</span>\n        <span class=\"text-primary ml-2\">\n            <i role=\"button\" aria-disabled=\"true\" class=\"fa fa-angle-double-down fa-lg\" *ngIf=\"!collapseToggleStatus\" data-toggle=\"collapse\" data-target=\"#collapse-edgex-sink-opts\" aria-expanded=\"false\" aria-controls=\"collapse-edgex-sink-opts\"></i>\n            <i role=\"button\" aria-disabled=\"true\" class=\"fa fa-angle-double-up fa-lg\"  *ngIf=\"collapseToggleStatus\" data-toggle=\"collapse\" data-target=\"#collapse-edgex-sink-opts\" aria-expanded=\"false\" aria-controls=\"collapse-edgex-sink-opts\"></i>\n        </span>\n    </div>\n    <div class=\"card-body collapse\" id=\"collapse-edgex-sink-opts\">\n      <form>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">ClientId</label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"ClientId\" [(ngModel)]=\"optional.ClientId\">\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Username</label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"Username\" [(ngModel)]=\"optional.Username\">\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Password</label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"Password\" [(ngModel)]=\"optional.Password\">\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Qos</label>\n            <div class=\"col-sm-9\">\n                <select class=\"custom-select\"  name=\"Qos\" [(ngModel)]=\"optional.Qos\">\n                <option [value]='0'>0</option>\n                <option [value]='1'>1</option>\n                <option [value]='2'>2</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">KeepAlive</label>\n            <div class=\"col-sm-9\">\n                <input type=\"number\" class=\"form-control\" name=\"KeepAlive\" [(ngModel)]=\"optional.KeepAlive\">\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Retained</label>\n            <div class=\"col-sm-9\">\n                <select class=\"custom-select\"  name=\"Retained\" [(ngModel)]=\"optional.Retained\">\n                    <option [value]='false'>false</option>\n                    <option [value]='true'>true</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">AutoReconnect</label>\n            <div class=\"col-sm-9\">\n                <select class=\"custom-select\"  name=\"AutoReconnect\" [(ngModel)]=\"optional.AutoReconnect\">\n                    <option [value]='false'>false</option>\n                    <option [value]='true'>true</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">ConnectTimeout</label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"ConnectTimeout\" [(ngModel)]=\"optional.ConnectTimeout\">\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">CleanSession</label>\n            <div class=\"col-sm-9\">\n                <select class=\"custom-select\"  name=\"CleanSession\" [(ngModel)]=\"optional.CleanSession\">\n                    <option [value]='false'>false</option>\n                    <option [value]='true'>true</option>\n                </select>\n            </div>\n        </div>\n\n        <!--security optional-->\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">SkipCertVerify</label>\n            <div class=\"col-sm-9\">\n                <select class=\"custom-select\"  name=\"SkipCertVerify\" [(ngModel)]=\"optional.SkipCertVerify\">\n                    <option [value]='true'>true</option>\n                    <option [value]='false'>false</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">CertFile</label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"CertFile\" [(ngModel)]=\"optional.CertFile\">\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">KeyFile</label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"KeyFile\" [(ngModel)]=\"optional.KeyFile\">\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">CertPEMBlock</label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"CertPEMBlock\" [(ngModel)]=\"optional.CertPEMBlock\">\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">KeyPEMBlock</label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"KeyPEMBlock\" [(ngModel)]=\"optional.KeyPEMBlock\">\n            </div>\n        </div>\n      </form>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { EdgeXSinkOptions } from '../../../../../contracts/kuiper/sink';\n\n@Component({\n  selector: 'app-edgex-sink-optional',\n  templateUrl: './edgex-sink-optional.component.html',\n  styleUrls: ['./edgex-sink-optional.component.css']\n})\nexport class EdgexSinkOptionalComponent implements OnInit, OnChanges {\n\n  collapseToggleStatus: boolean = false; //down-open-true, up-close-false\n\n  private _optional: EdgeXSinkOptions;\n  @Input() \n  get optional(): EdgeXSinkOptions {return this._optional};\n  set optional(opts: EdgeXSinkOptions ) {Object.assign(this._optional, opts)}\n  @Output() optionalChange = new EventEmitter<EdgeXSinkOptions>();\n\n  constructor() {\n    this._optional = {\n      Qos: '0',\n      Retained: 'false',\n      SkipCertVerify: 'true',\n      AutoReconnect: 'true',\n      CleanSession: 'true'\n    } as EdgeXSinkOptions;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnChanges(): void {\n     this.optionalChange.emit(this.optional) \n  }\n\n  collapseToggle() {\n    if (this.collapseToggleStatus) {\n      this.collapseToggleStatus = false //close\n      return\n    }\n    this.collapseToggleStatus = true //open\n  }\n}\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Output, Input, EventEmitter } from '@angular/core';\nimport { EdgeXSink } from '../../../../contracts/kuiper/sink';\nimport { SinkBaseProperties } from '../../../../contracts/kuiper/sink-base-properties';\n\n@Component({\n  selector: 'app-edgex-sink',\n  templateUrl: './edgex-sink.component.html',\n  styleUrls: ['./edgex-sink.component.css']\n})\nexport class EdgexSinkComponent implements OnInit, OnChanges {\n\n  sinkBaseProperties: SinkBaseProperties = {} as SinkBaseProperties\n\n  private _edgeXSink: EdgeXSink\n  @Input() \n  get edgeXSink(): EdgeXSink {return this._edgeXSink};\n  set edgeXSink(sink: EdgeXSink) {\n    Object.assign(this._edgeXSink, sink)\n  }\n  @Output() edgeXSinkChange = new EventEmitter<EdgeXSink>();\n\n  constructor() {\n    this._edgeXSink = {\n      type: 'redis',\n      protocol: 'redis',\n      host: 'edgex-redis',\n      port: 6379,\n      contentType: 'application/json',\n      messageType: 'event',\n      sendSingle: false\n    } as EdgeXSink\n  }\n\n  ngOnInit(): void {\n    this.renderPopoverComponent()\n    Object.assign(this.sinkBaseProperties, this.edgeXSink)\n  }\n\n  ngOnChanges(): void {\n    this.edgeXSinkChange.emit(this.edgeXSink);\n  }\n\n  renderPopoverComponent() {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n  }\n\n  onSinkBasePropertiesChange(sinkBaseProperties: SinkBaseProperties) {\n    Object.assign(this.edgeXSink, sinkBaseProperties)\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n \n<div class=\"card\">\n    <div class=\"card-header\">\n      <i class=\"fa fa-tags text-danger mr-2\"></i>\n      <span class=\"font-weight-bold\">EdgeX Sink</span>\n    </div>\n    <div class=\"card-body\">\n        <form>\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                <span class=\"mr-2\">Type</span>\n                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                data-content='the type of EdgeX message bus'></span>\n              </label>\n              <div class=\"col-sm-9\">\n                <select class=\"custom-select\" name=\"type\" [(ngModel)]=\"edgeXSink.type\">\n                  <option value=\"redis\">redis</option>\n                  <option value=\"zero\">zero</option>\n                  <option value=\"mqtt\">mqtt</option>\n                </select>\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Protocol</label>\n              <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"protocol\" [(ngModel)]=\"edgeXSink.protocol\">\n              </div>\n          </div>\n      \n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Host</label>\n              <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"host\" [(ngModel)]=\"edgeXSink.host\">\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Port</label>\n              <div class=\"col-sm-9\">\n                <input type=\"number\" class=\"form-control\" name=\"port\" [(ngModel)]=\"edgeXSink.port\">\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                <span class=\"mr-2\">Topic</span>\n                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                      data-content='The topic to be published. The topic is static across all messages. To use dynamic topic, leave this empty and specify the topicPrefix property. Only one of the topic and topicPrefix properties can be specified. If both are not specified, then use default topic value application.'></span>\n              </label>\n              <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"topic\" [(ngModel)]=\"edgeXSink.topic\">\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                <span class=\"mr-2\">TopicPrefix</span>\n                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                data-content='The prefix of a dynamic topic to be published. The topic will become a concatenation of $topicPrefix/$profileName/$deviceName/$sourceName.'></span>\n              </label>\n              <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"topicPrefix\" [(ngModel)]=\"edgeXSink.topicPrefix\">\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">ContentType</label>\n              <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"contentType\" [(ngModel)]=\"edgeXSink.contentType\">\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                <span class=\"mr-2\">MessageType</span>\n                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                data-content='The EdgeX message model type. To publish the message as an event like EdgeX application service, use event. Otherwise, to publish the message as an event request like EdgeX device service or core data service, use request. If not specified, then use the default value event.'></span>\n              </label>\n              <div class=\"col-sm-9\">\n                  <select class=\"custom-select\" name=\"messageType\" [(ngModel)]=\"edgeXSink.messageType\">\n                      <option value=\"event\">event</option>\n                      <option value=\"request\">request</option>\n                  </select>\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                <span class=\"mr-2\">Metadata</span>\n                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                data-content='The property is a field name that allows user to specify a field name of SQL select clause, the field name should use meta(*) AS xxx to select all of EdgeX metadata from message.'></span>\n              </label>\n              <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"metadata\" [(ngModel)]=\"edgeXSink.metadata\">\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">ProfileName</label>\n              <div class=\"col-sm-9\">\n                <app-device-profile-combo-list \n                [singleSelectionMode]=\"true\"\n                [(singleProfileSelected)]=\"edgeXSink.profileName\"\n                ></app-device-profile-combo-list>\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">DeviceName</label>\n              <div class=\"col-sm-9\">\n                <app-device-combo-list \n                [singleSelectionMode]=\"true\"\n                [(singleDeviceSelected)]=\"edgeXSink.deviceName\"></app-device-combo-list>\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">SourceName</label>\n              <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"deviceName\" [(ngModel)]=\"edgeXSink.sourceName\">\n              </div>\n          </div>\n\n          <!--some common properties of each one sink is show here, because they are used more frequently, \n            especial the dataTemplate property is treated as request body of http request or paylod of mqtt-->\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                  <span class=\"mr-2\">SendSingle</span>\n                  <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                  data-content='The output messages are received as an array. This is indicate whether to send the results one by one. If false, the output message will be {\"result\":\"${the string of received message}\"}. For example, {\"result\":\"[{\\\"count\\\":30},\"\\\"count\\\":20}]\"}. Otherwise, the result message will be sent one by one with the actual field name. For the same example as above, it will send {\"count\":30}, then send {\"count\":20} to the RESTful endpoint.Default to false.'></span>\n              </label>\n              <div class=\"col-sm-9\">\n                  <select class=\"custom-select\" name=\"sendSingle\" [(ngModel)]=\"edgeXSink.sendSingle\">\n                      <option [ngValue]=\"false\">false</option>\n                      <option [ngValue]=\"true\">true</option>\n                  </select>\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                  <span class=\"mr-2\">DataTemplate</span>\n                  <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                  data-content='The golang template format string to specify the output data format. The input of the template is the sink message which is always an array of map. If no data template is specified, the raw input will be the data.'></span>\n              </label>\n              <div class=\"col-sm-9\">\n                  <input type=\"text\" class=\"form-control\" name=\"dataTemplate\" [(ngModel)]=\"edgeXSink.dataTemplate\">\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                <span class=\"mr-2\">EdgeX Sink Options</span>\n                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                data-content='EdgeX Message bus connection optional'></span>\n              </label>\n              <div class=\"col-sm-9\">\n                  <app-edgex-sink-optional [(optional)]=\"edgeXSink.optional\"></app-edgex-sink-optional>\n              </div>\n          </div>\n\n          <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Advanced Options</label>\n              <div class=\"col-sm-9\">\n                <app-sink-base-properties [sinkBaseProperties]=\"sinkBaseProperties\"  (sinkBasePropertiesChange)=\"onSinkBasePropertiesChange($event)\"></app-sink-base-properties>\n              </div>\n          </div>\n        </form>\n    </div>\n</div>","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div *ngIf=\"notCommandPathMsgShow\"  class=\"alert alert-danger\" role=\"alert\">\n     <i class=\"fa fa-warning\"></i>\n     <span i18n>\n        Invalid command service url, please don't use this template for custom http request, or select one new valid command path if you insist on using the template!\n     </span>\n</div>\n\n <form [formGroup]=\"profileForm\">\n    <div class=\"form-group row\">\n        <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required>\n             <span class=\"mr-2\">HttpMethod</span>\n             <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n             data-content=\"httpMethod field will be filled up automatically when the path field is selected! \"></span>\n        </label>\n        <div class=\"col-md-10\">\n            <input type=\"text\" class=\"form-control\"  name=\"httpMethod\" formControlName=\"httpMethod\" readonly=\"true\" [(ngModel)]=\"cmdSvcInfo.httpMethod\" required>\n        </div>\n    </div>\n    <div class=\"form-group row has-validation\">\n        <label for=\"addressHostREST\" class=\"col-md-2 col-form-label\" required>\n            <span class=\"mr-2\">Host</span>\n            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n             data-content=\"Both Host and Port fields are editable if you have a different host address !\"></span>\n        </label>\n        <div class=\"col-md-10\">\n            <input type=\"text\" class=\"form-control\" id=\"addressHostREST\" [class.is-invalid]=\"!cmdSvcInfo.host\" [class.is-valid]=\"cmdSvcInfo.host\" name=\"addressHost\" formControlName=\"host\" [(ngModel)]=\"cmdSvcInfo.host\" required>\n            <div id=\"addressHostRESTFeedback\" class=\"invalid-feedback\">\n                <small i18n>the REST address host can't be empty!</small>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group row has-validation\">\n        <label for=\"addressPortREST\" class=\"col-md-2 col-form-label\" required>Port</label>\n        <div class=\"col-md-10\">\n            <input type=\"number\" class=\"form-control\" id=\"addressPortREST\" [class.is-invalid]=\"!cmdSvcInfo.port\" [class.is-valid]=\"cmdSvcInfo.port\" name=\"addressPort\" formControlName=\"port\" [(ngModel)]=\"cmdSvcInfo.port\" required>\n            <div id=\"addressPortRESTFeedback\" class=\"invalid-feedback\">\n                <small i18n>the REST address port can't be empty and only pure integer is supported!</small>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required>Path</label>\n        <div class=\"col-md-10\">\n            <app-device-core-command-combo-list\n            [validate]=\"true\"\n            [deviceName]=\"deviceName\"\n            [commandName]=\"commandName\"\n            [httpMethod]=\"cmdSvcInfo.httpMethod\"\n            [commandPath]=\"cmdSvcInfo.path\"\n            (cmdMethodEvent)=\"onCmdMethodSelected($event)\"\n            (commandSelectedEvent)=\"onCommandSelected($event)\"></app-device-core-command-combo-list>\n        </div>\n    </div>\n    <div class=\"form-group row\"  *ngIf=\"cmdSvcInfo.path && cmdSvcInfo.httpMethod && cmdSvcInfo.parametersOfPutCommand.length !== 0\">\n        <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required>Parameters</label>\n        <div class=\"col-md-10\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <span i18n>Command Parameters Setting</span>\n                </div>\n                <div class=\"card-body\">\n                    <div *ngIf=\"cmdSvcInfo.httpMethod == 'PUT'; else getParameter\">\n                        <div *ngIf=\"cmdSvcInfo.parametersOfPutCommand.length == 0\">\n                            <span i18n>no paramters.</span>\n                        </div>\n                        <div *ngFor=\"let param of cmdSvcInfo.parametersOfPutCommand; let last = last\">\n                            <form>\n                                <div class=\"form-group row\">\n                                    <label for=\"{{param.resourceName}}\" class=\"col-md-2 col-form-label\" i18n>{{param.resourceName}}</label>\n                                    <div class=\"col-md-10\">\n                                        <select *ngIf=\"param.valueType == 'Bool'; else valueTypeIsNotBool\" (change)=\"onValueOfPutParamsChange($event)\" id=\"cmd-param-{{param.resourceName}}\" name=\"{{param.resourceName}}\" class=\"custom-select\">\n                                            <option [ngValue]=\"false\">false</option>\n                                            <option [ngValue]=\"true\">true</option>\n                                        </select>\n                                        <ng-template #valueTypeIsNotBool>\n                                            <input type=\"text\" class=\"form-control\" (change)=\"onValueOfPutParamsChange($event)\" id=\"cmd-param-{{param.resourceName}}\" name=\"{{param.resourceName}}\" placeholder=\"valueType: {{param.valueType}}\">\n                                        </ng-template>\n                                    </div>\n                                </div>\n                            </form>\n                            <ng-container *ngIf=\"last\">\n                                {{ cmdParametersValueRender() }}\n                             </ng-container>\n                        </div>\n                    </div>\n                    <ng-template #getParameter>\n                        <div class=\"form-group row\">\n                            <label for=\"ds-pushevent\" class=\"col-md-2 col-form-label\">\n                                <span class=\"mr-2\" i18n>pushevent</span>\n                                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                data-content=\"true indicates a successful GET will result in an event being pushed to the EdgeX system\"></span>\n                            </label>\n                            <div class=\"col-md-10\">\n                                <select id=\"ds-pushevent\" name=\"ds-pushevent\" formControlName=\"pushEventOfGetCmdParamter\"  class=\"custom-select\" [(ngModel)]=\"cmdSvcInfo.pushEventOfGetCmdParamter\">\n                                    <option value=\"true\">true</option>\n                                    <option value=\"false\">false</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label for=\"ds-returnevent\" class=\"col-md-2 col-form-label\">\n                                <span class=\"mr-2\" i18n>returnevent</span>\n                                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\"\n                                data-content=\"no indicates there will be no Event returned in the http response\"></span>\n                            </label>\n                            <div class=\"col-md-10\">\n                                <select id=\"ds-returnevent\" name=\"ds-returnevent\" formControlName=\"returnEventOfGetCmdParamter\" class=\"custom-select\" [(ngModel)]=\"cmdSvcInfo.returnEventOfGetCmdParamter\">\n                                    <option value=\"true\">true</option>\n                                    <option value=\"false\">false</option>\n                                </select>\n                            </div>\n                        </div>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormControl } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { CoreCommandParameter, CoreCommand } from '../../contracts/v3/core-command';\nimport { CommandServiceInfo } from './interfaces/command-service-info';\nimport { MetadataService } from '../../services/metadata.service';\nimport { CommandService } from '../../services/command.service';\nimport { DeviceCoreCommandResponse } from '../../contracts/v3/responses/device-core-command-response';\n\ndeclare type Parameter = {\n  [key: string]: any\n}\n\n@Component({\n  selector: 'app-command-service-template',\n  templateUrl: './command-service-template.component.html',\n  styleUrls: ['./command-service-template.component.css']\n})\nexport class CommandServiceTemplateComponent implements OnInit, AfterViewInit {\n\n  //command path example: /api/v3/device/name/Random-Integer-Device/Int16\n  cmdURLFixedPrefix: string = '/api/v3/device/name/'\n  notCommandPathMsgShow: boolean = false\n  deviceName: string = ''\n  commandName: string =  ''\n  parameter: Parameter = {} as Parameter\n\n  private _url: string = ''\n  @Input()\n  get url(): string {return this._url}\n  set url(url: string) {\n    this._url = url\n    if (this._url) {\n      this.urlParser(url)\n    }\n  }\n\n  private _httpMethod: string = ''\n  @Input()\n  get httpMethod(): string {return this._httpMethod}\n  set httpMethod(method: string) {\n    this._httpMethod = method\n    this.cmdSvcInfo.httpMethod = this._httpMethod\n  }\n\n  private  _requestBodyJSONStr: string = ''\n  @Input()\n  get requestBodyJSONStr(): string {return this._requestBodyJSONStr}\n  set requestBodyJSONStr(bodyData: string) {\n    this._requestBodyJSONStr = bodyData\n  }\n\n  @Input() cmdSvcInfo: CommandServiceInfo\n  @Output() cmdSvcInfoChange = new EventEmitter<CommandServiceInfo>()\n\n  profileForm = new UntypedFormGroup({\n    host: new UntypedFormControl(''),\n    port: new UntypedFormControl(''),\n    path: new UntypedFormControl(''),\n    httpMethod: new UntypedFormControl(''),\n    pushEventOfGetCmdParamter: new UntypedFormControl(''),\n    returnEventOfGetCmdParamter: new UntypedFormControl(''),\n  });\n\n  constructor(private metedataSvc: MetadataService, private cmdSvc: CommandService) {\n    this.cmdSvcInfo = {\n      host: 'edgex-core-command',\n      port: 59882,\n      path: '',\n      pushEventOfGetCmdParamter: 'true',\n      returnEventOfGetCmdParamter: 'true',\n      parametersOfPutCommand: [] as CoreCommandParameter[],\n    } as CommandServiceInfo\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.profileForm.valueChanges.pipe(debounceTime(400), distinctUntilChanged()).subscribe(() => {\n      this.cmdSvcInfoChange.emit(this.cmdSvcInfo)\n    })\n    this.renderPopoverComponent()\n  }\n\n  urlParser(url: string) {\n    let u: URL = {} as URL\n    try {\n      u = new URL(url)\n    } catch (error) {\n      this.notCommandPathMsgShow = true\n      return\n    }\n\n    if (u.pathname.startsWith(this.cmdURLFixedPrefix)) {\n      let deviceNameAndCmdArray =  u.pathname.substring(this.cmdURLFixedPrefix.length).split('/')\n      if ( deviceNameAndCmdArray.length === 2) {\n        this.deviceName = deviceNameAndCmdArray[0]\n        this.commandName = deviceNameAndCmdArray[1]\n        this.getCommandParameterByDeviceAndCommandName(this.deviceName,this.commandName)\n\n        this.cmdSvcInfo.path = u.pathname\n        this.cmdSvcInfo.host = u.hostname\n        this.cmdSvcInfo.port = Number(u.port)\n        this.cmdSvcInfo.pushEventOfGetCmdParamter = u.searchParams.get('ds-pushevent') || 'true'\n        this.cmdSvcInfo.returnEventOfGetCmdParamter = u.searchParams.get('ds-returnevent') || 'true'\n\n        return\n      }\n    }\n    this.notCommandPathMsgShow = true\n  }\n\n  getCommandParameterByDeviceAndCommandName(deviceName: string, cmdName: string) {\n    this.cmdSvc.findDeviceAssociatedCommnadsByDeviceName(deviceName).subscribe((resp: DeviceCoreCommandResponse) => {\n      resp.deviceCoreCommand.coreCommands.forEach(coreCmd => {\n        if (coreCmd.name === cmdName) {\n          this.cmdSvcInfo.parametersOfPutCommand = coreCmd.parameters\n        }\n      })\n    })\n  }\n\n  cmdParametersValueRender() {\n    let cmdParamsKVObject: any = {}\n    try {\n      cmdParamsKVObject = JSON.parse(this.requestBodyJSONStr)\n    } catch (error) {\n      return\n    }\n    for (const [k,v] of Object.entries(cmdParamsKVObject)) {\n      this.cmdSvcInfo.parametersOfPutCommand.forEach(cmd => {\n        if (cmd.resourceName === k) {\n          $(`#cmd-param-${k}`).val(v)\n        }\n      })\n    }\n  }\n\n  onValueOfPutParamsChange(event: any) {\n    this.cmdSvcInfoChange.emit(this.cmdSvcInfo)\n  }\n\n  renderPopoverComponent() {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n  }\n\n  onCmdMethodSelected(method: string) {\n    this.cmdSvcInfo.httpMethod = method;\n    this.cmdSvcInfoChange.emit(this.cmdSvcInfo)\n    setTimeout(() => {\n      this.renderPopoverComponent();\n    }, 500);\n  }\n\n  onCommandSelected(cmd: CoreCommand) {\n    this.cmdSvcInfo.path = cmd.path;\n    this.cmdSvcInfo.parametersOfPutCommand = cmd.parameters;\n  }\n\n  requestBodyAssemble(): string {\n    let params: any = {};\n    this.cmdSvcInfo.parametersOfPutCommand.forEach(p => {\n      if (!p  || !$(`#cmd-param-${p.resourceName}`).val()) {\n        return\n      }\n      if ($(`#cmd-param-${p.resourceName}`).val().trim() !== \"\") {\n        params[p.resourceName] = $(`#cmd-param-${p.resourceName}`).val().trim();\n      }\n    });\n    return JSON.stringify(params)\n  }\n\n  resetPathParameterSuffix() {\n    if (this.cmdSvcInfo.path.indexOf('ds-pushevent') !== -1 ||\n        this.cmdSvcInfo.path.indexOf('ds-returnevent') !== -1) {\n        this.cmdSvcInfo.path = this.cmdSvcInfo.path.split('?')[0];\n    }\n    this.cmdSvcInfo.path = `${this.cmdSvcInfo.path}?ds-pushevent=${this.cmdSvcInfo.pushEventOfGetCmdParamter}&ds-returnevent=${this.cmdSvcInfo.returnEventOfGetCmdParamter}`;\n  }\n\n  getHttpMethod(): string {\n    return this.cmdSvcInfo.httpMethod\n  }\n\n  getRequestBodyJSONStr(): string {\n    return this.requestBodyAssemble()\n  }\n\n  getUrl(): string {\n    if (this.cmdSvcInfo.httpMethod === 'GET') {\n      this.resetPathParameterSuffix()\n    }\n    return `http://${this.cmdSvcInfo.host}:${this.cmdSvcInfo.port}${this.cmdSvcInfo.path}`\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-tags text-danger mr-2\"></i>\n        <span class=\"font-weight-bold\">REST Sink</span>\n    </div>\n    <div class=\"card-header\">\n        <span role=\"button\" class=\"badge badge-secondary mr-2\" [class.badge-info]=\"templateTypeSelected === SVC_TYPE_COMMAND\" (click)=\"templateTypeToggle(SVC_TYPE_COMMAND)\">\n            <i class=\"fa fa-square-o mr-1\" [class.fa-check-square]=\"templateTypeSelected === SVC_TYPE_COMMAND\"></i>\n            <span>EdgeXCommandServiceTemplate</span>\n        </span>\n        <span role=\"button\" class=\"badge badge-secondary mr-2\" [class.badge-info]=\"templateTypeSelected === SVC_TYPE_CUSTOM\" (click)=\"templateTypeToggle(SVC_TYPE_CUSTOM)\">\n            <i class=\"fa fa-square-o mr-1\" [class.fa-check-square]=\"templateTypeSelected === SVC_TYPE_CUSTOM\"></i>\n            <span>CustomHttpServiceTemplate</span>\n        </span>\n    </div>\n    <div class=\"card-body\">\n        <div *ngIf=\"templateTypeSelected === SVC_TYPE_COMMAND\">\n            <app-command-service-template \n            [url]=\"restSink.url\"\n            [httpMethod]=\"restSink.method\"\n            [requestBodyJSONStr]=\"restSink.dataTemplate?restSink.dataTemplate:''\"\n            (cmdSvcInfoChange)=\"onCmdSvcTemplateInfoChange($event)\"></app-command-service-template>\n        </div>\n        <div *ngIf=\"templateTypeSelected === SVC_TYPE_CUSTOM\">\n            <form>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Method</label>\n                    <div class=\"col-sm-9\">\n                        <select class=\"custom-select\"  name=\"method\" [(ngModel)]=\"restSink.method\">\n                            <option value=\"GET\">GET</option>\n                            <option value=\"POST\">POST</option>\n                            <option value=\"PUT\">PUT</option>\n                            <option value=\"DELETE\">DELETE</option>\n                            <option value=\"PATCH\">PATCH</option>\n                            <option value=\"HEAD\">HEAD</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-group row  has-validation\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">URL</label>\n                    <div class=\"col-sm-9\">\n                        <input type=\"text\" class=\"form-control\" name=\"url\" [class.is-invalid]=\"!restSink.url\" [class.is-valid]=\"restSink.url\"  [(ngModel)]=\"restSink.url\">\n                        <div id=\"ruleName\" class=\"invalid-feedback\">\n                            <small i18n>the url can't be empty!</small>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">BodyType</label>\n                    <div class=\"col-sm-9\">\n                        <select class=\"custom-select\"  name=\"bodyType\" [(ngModel)]=\"restSink.bodyType\">\n                            <option value=\"none\">none</option>\n                            <option value=\"json\">json</option>\n                            <option value=\"text\">text</option>\n                            <option value=\"html\">html</option>\n                            <option value=\"xml\">xml</option>\n                            <option value=\"javascript\">javascript</option>\n                            <option value=\"form\">form</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Headers</label>\n                    <div class=\"col-sm-9\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <p class=\"badge badge-secondary font-weight-bold\">\n                                    <span class=\"fa fa-plus-circle mr-2\"></span>\n                                    <span class=\"user-select-none\" role=\"button\" (click)=\"addRequestHeader()\" i18n>Add Headers KV</span>\n                                </p>\n                                <div *ngFor=\"let header of requestHeaderList; let i=index\">\n                                    <form class=\"form-inline mb-1\">\n                                        <div class=\"input-group mb-1\">\n                                            <div class=\"input-group-prepend\">\n                                              <span class=\"input-group-text\">Key</span>\n                                            </div>\n                                            <input type=\"text\" class=\"form-control\" name=\"headerKey\" [(ngModel)]=\"header.key\"  (ngModelChange)=\"requestHeaderChange($event)\" style=\"width: 200px;min-width: 200px;\">\n                                        </div>\n                                        <div class=\"input-group mx-2\">\n                                            <i class=\"fa fa-long-arrow-right\"></i> \n                                        </div>\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                              <span class=\"input-group-text\">Value</span>\n                                            </div>\n                                            <input type=\"text\" class=\"form-control\" name=\"headerValue\" [(ngModel)]=\"header.value\" (ngModelChange)=\"requestHeaderChange($event)\" style=\"width: 200px; min-width: 200px;\">\n                                        </div>\n                                        <div class=\"input-group ml-2\">\n                                            <button class=\"btn btn-danger btn-sm\" (click)=\"removeRequestHeader(i)\"> <i class=\"fa fa-trash\"></i> </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                        <span class=\"mr-2\">timeout</span>\n                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                        data-content='The timeout (milliseconds) for a HTTP request, defaults to 5000 ms'></span>\n                    </label>\n                    <div class=\"col-sm-9\">\n                        <input type=\"number\" class=\"form-control\" name=\"timeout\" [(ngModel)]=\"restSink.timeout\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                        <span class=\"mr-2\">DebugResp</span>\n                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                        data-content='Control if print the response information into the console. If set it to true, then print response; If set to false, then skip print log. The default is false.'></span>\n                    </label>\n                    <div class=\"col-sm-9\">\n                        <select class=\"custom-select\"  name=\"debugResp\" [(ngModel)]=\"restSink.debugResp\">\n                            <option [ngValue]=\"false\">false</option>\n                            <option [ngValue]=\"true\">true</option>\n                        </select>\n                    </div>\n                </div>\n    \n                <!--some common properties of each one sink is show here, because they are used more frequently, \n                    especial the dataTemplate property is treated as request body of http request or paylod of mqtt-->\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                        <span class=\"mr-2\">sendSingle</span>\n                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                        data-content='The output messages are received as an array. This is indicate whether to send the results one by one. If false, the output message will be {\"result\":\"${the string of received message}\"}. For example, {\"result\":\"[{\\\"count\\\":30},\"\\\"count\\\":20}]\"}. Otherwise, the result message will be sent one by one with the actual field name. For the same example as above, it will send {\"count\":30}, then send {\"count\":20} to the RESTful endpoint.Default to false.'></span>\n                    </label>\n                    <div class=\"col-sm-9\">\n                        <select class=\"custom-select\" name=\"sendSingle\" [(ngModel)]=\"restSink.sendSingle\">\n                            <option [ngValue]=\"false\">false</option>\n                            <option [ngValue]=\"true\">true</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                        <span class=\"mr-2\">dataTemplate</span>\n                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                        data-content='here be treated as http post or put RequestBody,The golang template format string to specify the output data format. The input of the template is the sink message which is always an array of map. If no data template is specified, the raw input will be the data.'></span>\n                    </label>\n                    <div class=\"col-sm-9\">\n                        <input type=\"text\" class=\"form-control\" name=\"dataTemplate\" [(ngModel)]=\"restSink.dataTemplate\">\n                    </div>\n                </div>\n\n                <!-- security section -->\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">InsecureSkipVerify</label>\n                    <div class=\"col-sm-9\">\n                        <select class=\"custom-select\"  name=\"insecureSkipVerify\" [(ngModel)]=\"restSink.insecureSkipVerify\">\n                            <option [ngValue]=\"true\">true</option>\n                            <option [ngValue]=\"false\">false</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">CertificationPath</label>\n                    <div class=\"col-sm-9\">\n                        <input type=\"text\" class=\"form-control\" name=\"certificationPath\" [(ngModel)]=\"restSink.certificationPath\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">PrivateKeyPath</label>\n                    <div class=\"col-sm-9\">\n                        <input type=\"text\" class=\"form-control\" name=\"privateKeyPath\" [(ngModel)]=\"restSink.privateKeyPath\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">RootCaPath</label>\n                    <div class=\"col-sm-9\">\n                        <input type=\"text\" class=\"form-control\" name=\"rootCaPath\" [(ngModel)]=\"restSink.rootCaPath\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Advanced Options</label>\n                    <div class=\"col-sm-9\">\n                      <app-sink-base-properties [sinkBaseProperties]=\"sinkBaseProperties\"  (sinkBasePropertiesChange)=\"onSinkBasePropertiesChange($event)\"></app-sink-base-properties>\n                    </div>\n                </div>\n            </form>\n        </div>\n       \n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter, AfterViewInit, ViewChild} from '@angular/core';\nimport { RESTSink } from '../../../../contracts/kuiper/sink';\nimport { SinkBaseProperties } from '../../../../contracts/kuiper/sink-base-properties';\nimport { CommandServiceTemplateComponent }  from '../../../../command/command-service-template/command-service-template.component';\n\ndeclare type RequestHeader = {\n  [key: string]: any;\n};\n\n@Component({\n  selector: 'app-rest-sink',\n  templateUrl: './rest-sink.component.html',\n  styleUrls: ['./rest-sink.component.css']\n})\nexport class RestSinkComponent implements OnInit, OnChanges, AfterViewInit {\n\n  SVC_TYPE_COMMAND = \"command\" // EdgeX command service\n  SVC_TYPE_CUSTOM = \"custom\" // others http service\n  templateTypeSelected: string = this.SVC_TYPE_COMMAND\n\n  sinkBaseProperties: SinkBaseProperties = {} as SinkBaseProperties\n\n  private _restSink: RESTSink;\n  @Input() \n  get restSink(): RESTSink {return this._restSink};\n  set restSink(sink: RESTSink) {\n    Object.assign(this._restSink,sink)\n  }\n  @Output() restSinkChange = new EventEmitter<RESTSink>();\n\n  requestHeaderList: RequestHeader[] = [];\n\n  @ViewChild(CommandServiceTemplateComponent)\n  private cmdSvcTemplate!:CommandServiceTemplateComponent\n \n  constructor() {\n    this._restSink = {\n      method: 'GET',\n      bodyType: 'json',\n      debugResp: false,\n      insecureSkipVerify: true,\n      timeout: 5000,\n      sendSingle: false,\n      dataTemplate:''\n    } as RESTSink;\n  }\n\n  ngOnInit(): void {\n    Object.assign(this.sinkBaseProperties, this.restSink)\n    if(this.restSink.headers) {\n      for(const [k,v] of Object.entries(this.restSink.headers)) {\n        this.requestHeaderList.push({key: k, value: v} as RequestHeader)\n      }\n    }\n    this.renderPopoverComponent();\n  }\n\n  ngOnChanges(): void {\n    this.restSinkChange.emit(this.restSink)\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  renderPopoverComponent() {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n  }\n\n  templateTypeToggle(templateType: string) {\n    this.templateTypeSelected = templateType\n    window.setTimeout(()=>{this.renderPopoverComponent()},1000)\n  }\n\n  requestHeaderChange($event: any) {\n    this.headersResovler()\n  }\n\n  headersResovler() {\n    let heards: RequestHeader = {};\n    this.requestHeaderList.forEach((header) => {\n      heards[`${header.key}`] = `${header.value}`\n    })\n    this.restSink.headers = heards;\n    this.restSinkChange.emit(this.restSink);\n  }\n\n  addRequestHeader() {\n    this.requestHeaderList.push({key:  '', value: ''})\n  }\n  \n  removeRequestHeader(index: number, header?: RequestHeader) {\n    this.requestHeaderList.splice(index,1)\n    this.headersResovler();\n  }\n\n  onSinkBasePropertiesChange(sinkBaseProperties: SinkBaseProperties) {\n    Object.assign(this.restSink, sinkBaseProperties)\n  }\n\n  onCmdSvcTemplateInfoChange(event: any) {\n    this.getValuesSettingAllOfCommandTemplate()\n  }\n\n  getValuesSettingAllOfCommandTemplate() {\n    this.restSink.method = this.cmdSvcTemplate.getHttpMethod()\n    this.restSink.url = this.cmdSvcTemplate.getUrl()\n    this.restSink.dataTemplate = this.cmdSvcTemplate.getRequestBodyJSONStr()\n  }\n}\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter} from '@angular/core';\nimport { MQTTSink } from  '../../../../contracts/kuiper/sink';\nimport { SinkBaseProperties } from '../../../../contracts/kuiper/sink-base-properties';\n\n@Component({\n  selector: 'app-mqtt-sink',\n  templateUrl: './mqtt-sink.component.html',\n  styleUrls: ['./mqtt-sink.component.css']\n})\nexport class MqttSinkComponent implements OnInit, OnChanges {\n\n  sinkBaseProperties: SinkBaseProperties = {} as SinkBaseProperties\n\n  private _mqttSink: MQTTSink;\n  @Input() \n  get mqttSink(): MQTTSink {return this._mqttSink};\n  set mqttSink(sink: MQTTSink) {\n    Object.assign(this._mqttSink,sink)\n  }\n  @Output() mqttSinkChange = new EventEmitter<MQTTSink>();\n\n  constructor() {\n    this._mqttSink = {\n      server: 'tcp://127.0.0.1:1883',\n      protocolVersion: '3.1',\n      qos: 0,\n      insecureSkipVerify: true,\n      retained: false,\n      sendSingle: false\n    } as MQTTSink;\n  }\n\n  ngOnInit(): void {\n    this.renderPopoverComponent()\n    Object.assign(this.sinkBaseProperties, this.mqttSink)\n  }\n\n  ngOnChanges(): void {\n    this.mqttSinkChange.emit(this.mqttSink); \n  }\n\n  renderPopoverComponent() {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n  }\n\n  onSinkBasePropertiesChange(sinkBaseProperties: SinkBaseProperties) {\n    Object.assign(this.mqttSink, sinkBaseProperties)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-tags text-danger mr-2\"></i>\n        <span class=\"font-weight-bold\">MQTT Sink</span>\n    </div>\n    <div class=\"card-body\">\n        <form>\n            <div class=\"form-group row  has-validation\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Server</label>\n                <div class=\"col-sm-9\">\n                    <input type=\"text\" class=\"form-control\" name=\"server\"  [class.is-invalid]=\"!mqttSink.server\" [class.is-valid]=\"mqttSink.server\" [(ngModel)]=\"mqttSink.server\">\n                    <div id=\"ruleName\" class=\"invalid-feedback\">\n                        <small i18n>the mqtt server address can't be empty!</small>\n                     </div>\n                </div>\n            </div>\n            <div class=\"form-group row  has-validation\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Topic</label>\n                <div class=\"col-sm-9\">\n                    <input type=\"text\" class=\"form-control\" name=\"topic\" [class.is-invalid]=\"!mqttSink.topic\" [class.is-valid]=\"mqttSink.topic\" [(ngModel)]=\"mqttSink.topic\">\n                    <div id=\"ruleName\" class=\"invalid-feedback\">\n                        <small i18n>the topic can't be empty!</small>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">ClientId</label>\n                <div class=\"col-sm-9\">\n                    <input type=\"text\" class=\"form-control\" name=\"clientId\" [(ngModel)]=\"mqttSink.clientId\">\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">ProtocolVersion</label>\n                <div class=\"col-sm-9\">\n                    <select class=\"custom-select\"  name=\"protocolVersion\" [(ngModel)]=\"mqttSink.protocolVersion\">\n                        <option value=\"3.1\">3.1</option>\n                        <option value=\"3.1.1\">3.1.1</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Qos</label>\n                <div class=\"col-sm-9\">\n                  <select class=\"custom-select\"  name=\"qos\" [(ngModel)]=\"mqttSink.qos\">\n                      <option [ngValue]=0>0</option>\n                      <option [ngValue]=1>1</option>\n                      <option [ngValue]=2>2</option>\n                  </select>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\" i18n>Username</label>\n                <div class=\"col-sm-9\">\n                    <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"mqttSink.username\">\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\" i18n>Password</label>\n                <div class=\"col-sm-9\">\n                  <input type=\"text\" class=\"form-control\" name=\"password\" [(ngModel)]=\"mqttSink.password\">\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Retained</label>\n                <div class=\"col-sm-9\">\n                    <select class=\"custom-select\"  name=\"retained\" [(ngModel)]=\"mqttSink.retained\">\n                        <option [ngValue]=\"false\">false</option>\n                        <option [ngValue]=\"true\">true</option>\n                    </select>\n                </div>\n            </div>\n\n            <!--some common properties of each one sink is show here, because they are used more frequently, \n                especial the dataTemplate property is treated as request body of http request or paylod of mqtt-->\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">sendSingle</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='The output messages are received as an array. This is indicate whether to send the results one by one. If false, the output message will be {\"result\":\"${the string of received message}\"}. For example, {\"result\":\"[{\\\"count\\\":30},\"\\\"count\\\":20}]\"}. Otherwise, the result message will be sent one by one with the actual field name. For the same example as above, it will send {\"count\":30}, then send {\"count\":20} to the RESTful endpoint.Default to false.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <select class=\"custom-select\" name=\"sendSingle\" [(ngModel)]=\"mqttSink.sendSingle\">\n                        <option [ngValue]=\"false\">false</option>\n                        <option [ngValue]=\"true\">true</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">dataTemplate</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='here is treated as mqtt payload, The golang template format string to specify the output data format. The input of the template is the sink message which is always an array of map. If no data template is specified, the raw input will be the data.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <input type=\"text\" class=\"form-control\" name=\"dataTemplate\" [(ngModel)]=\"mqttSink.dataTemplate\">\n                </div>\n            </div>\n\n\n            <!-- security section -->\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">InsecureSkipVerify</label>\n                <div class=\"col-sm-9\">\n                    <select class=\"custom-select\"  name=\"insecureSkipVerify\" [(ngModel)]=\"mqttSink.insecureSkipVerify\">\n                        <option [ngValue]=\"true\">true</option>\n                        <option [ngValue]=\"false\">false</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">CertificationPath</label>\n                <div class=\"col-sm-9\">\n                  <input type=\"text\" class=\"form-control\" name=\"certificationPath\" [(ngModel)]=\"mqttSink.certificationPath\">\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">PrivateKeyPath</label>\n                <div class=\"col-sm-9\">\n                  <input type=\"text\" class=\"form-control\" name=\"privateKeyPath\" [(ngModel)]=\"mqttSink.privateKeyPath\">\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">RootCaPath</label>\n                <div class=\"col-sm-9\">\n                  <input type=\"text\" class=\"form-control\" name=\"rootCaPath\" [(ngModel)]=\"mqttSink.rootCaPath\">\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Advanced Options</label>\n                <div class=\"col-sm-9\">\n                  <app-sink-base-properties [sinkBaseProperties]=\"sinkBaseProperties\"  (sinkBasePropertiesChange)=\"onSinkBasePropertiesChange($event)\"></app-sink-base-properties>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Output, Input, EventEmitter, SimpleChanges} from '@angular/core';\nimport { LogSink } from '../../../../contracts/kuiper/sink';\nimport { SinkBaseProperties } from '../../../../contracts/kuiper/sink-base-properties';\n\n@Component({\n  selector: 'app-log-sink',\n  templateUrl: './log-sink.component.html',\n  styleUrls: ['./log-sink.component.css']\n})\nexport class LogSinkComponent implements OnInit, OnChanges {\n\n  sinkBaseProperties: SinkBaseProperties = {} as SinkBaseProperties\n\n  private _logSink: LogSink\n  @Input() \n  get logSink(): LogSink {return this._logSink};\n  set logSink(sink: LogSink) {\n    Object.assign(this._logSink, sink)\n  }\n  @Output() logSinkChange = new EventEmitter<LogSink>();\n\n\n  constructor() { \n    this._logSink = { sendSingle: false} as LogSink\n  }\n\n  ngOnInit(): void {\n    Object.assign(this.sinkBaseProperties, this.logSink)\n    this.renderPopoverComponent()\n  }\n\n  ngOnChanges(): void {\n    this.logSinkChange.emit(this.logSink)\n  }\n\n  renderPopoverComponent() {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n  }\n\n  onSinkBasePropertiesChange(sinkBaseProperties: SinkBaseProperties) {\n    Object.assign(this.logSink, sinkBaseProperties)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-tags text-danger mr-2\"></i>\n        <span class=\"font-weight-bold\">Log Sink</span>\n    </div>\n    <div class=\"card-body\">\n        <p class=\"text-info mb-2\">\n            <i class=\"fa fa-info-circle mr-1\"></i>\n            The action is used for print output message into log file, the log file is at $eKuiper_install/log/stream.log by default.<br>\n            No properties can be specified for the action.\n        </p>\n\n        <!--some common properties of each one sink is show here, because they are used more frequently, \n        especial the dataTemplate property is treated as request body of http request or paylod of mqtt-->\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                <span class=\"mr-2\">sendSingle</span>\n                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                data-content='The output messages are received as an array. This is indicate whether to send the results one by one. If false, the output message will be {\"result\":\"${the string of received message}\"}. For example, {\"result\":\"[{\\\"count\\\":30},\"\\\"count\\\":20}]\"}. Otherwise, the result message will be sent one by one with the actual field name. For the same example as above, it will send {\"count\":30}, then send {\"count\":20} to the RESTful endpoint.Default to false.'></span>\n            </label>\n            <div class=\"col-sm-9\">\n                <select class=\"custom-select\" name=\"sendSingle\" [(ngModel)]=\"logSink.sendSingle\">\n                    <option [ngValue]=\"false\">false</option>\n                    <option [ngValue]=\"true\">true</option>\n                </select>\n            </div>\n        </div>\n\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                <span class=\"mr-2\">dataTemplate</span>\n                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                data-content='here is treated as mqtt payload, The golang template format string to specify the output data format. The input of the template is the sink message which is always an array of map. If no data template is specified, the raw input will be the data.'></span>\n            </label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" name=\"dataTemplate\" [(ngModel)]=\"logSink.dataTemplate\">\n            </div>\n        </div>\n        <form>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">Advanced Options</label>\n                <div class=\"col-sm-9\">\n                    <app-sink-base-properties [sinkBaseProperties]=\"sinkBaseProperties\"  (sinkBasePropertiesChange)=\"onSinkBasePropertiesChange($event)\"></app-sink-base-properties>\n                </div>\n             </div>\n        </form>\n    </div>\n</div>","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div *ngIf=\"!sinkAddOrEditStatus\">\n    <p class=\"badge badge-secondary font-weight-bold\">\n        <span (click)=\"addSinkTransfer()\">\n            <span class=\"fa fa-plus-circle mr-1\"></span>\n            <span class=\"user-select-none\" role=\"button\" i18n>Add Sink</span>\n        </span>\n    </p>\n    <ul class=\"list-group\">\n        <li *ngFor=\"let sink of ruleActions;let i=index;\" class=\"list-group-item list-group-item-action \" [class.list-group-item-light]=\"i !== selectedSinkIndex\" [class.list-group-item-secondary]=\"i === selectedSinkIndex\" >\n            <span class=\"text-dark mr-2\">{{getSinkTypeOfAction(sink)}}</span>\n            <span class=\"float-right\">\n              <span role=\"button\" class=\"badge badge-info mr-2\" (click)=\"editSinkTransfer(sink,i)\"><i class=\"fa fa-edit\"></i></span>\n              <span role=\"button\" class=\"badge badge-danger\" (click)=\"deleteSink(sink,i)\"><i class=\"fa fa-trash\"></i></span>\n            </span>\n        </li>\n    </ul>\n</div>\n\n<div class=\"card\" *ngIf=\"sinkAddOrEditStatus\">\n    <div class=\"card-header p-2\">\n        <span *ngIf=\"sinkAddOrEditOperation === sinkOperation_ADD\">\n            <i class=\"fa fa-plus mr-2 text-info\"></i>\n            <span class=\"font-weight-bold\">Add Sink</span>\n            <span *ngIf=\"sinkAddOrEditOperation === sinkOperation_EDIT\" class=\"font-weight-bold\">Edit Sink</span>\n        </span>\n        <span *ngIf=\"sinkAddOrEditOperation === sinkOperation_EDIT\">\n            <i class=\"fa fa-edit mr-2 text-info\"></i>\n            <span class=\"font-weight-bold\">Edit Sink</span>\n        </span>\n        <span class=\"float-right\">\n            <button *ngIf=\"sinkAddOrEditOperation === sinkOperation_ADD\" class=\"btn btn-success btn-sm mr-2\" [disabled]=\"!validate()\" (click)=\"addOneNewSink()\">Add</button>\n            <button *ngIf=\"sinkAddOrEditOperation === sinkOperation_EDIT\" class=\"btn btn-success btn-sm mr-2\" [disabled]=\"!validate()\" (click)=\"updateSink()\">Update</button>\n            <button class=\"btn btn-secondary btn-sm\" (click)=\"cancel()\">Cancel</button>\n        </span>\n    </div>\n    <div class=\"card-body\">\n        <form class=\"mb-2\">\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\" i18n>Sink Type</label>\n                <div class=\"col-sm-9\">\n                    <select class=\"custom-select\" name=\"SinkType\" [class.is-invalid]=\"!selectedSinkType\" [(ngModel)]=\"selectedSinkType\">\n                        <option value=\"{{EdgeX_SINK}}\">{{EdgeX_SINK}}</option>\n                        <option value=\"{{MQTT_SINK}}\">{{MQTT_SINK}}</option>\n                        <option value=\"{{REST_SINK}}\">{{REST_SINK}}</option>\n                        <option value=\"{{LOG_SINK}}\">{{LOG_SINK}}</option>\n                    </select>\n                    <div id=\"validationSinkTypeFeedback\" class=\"invalid-feedback\">\n                        <small i18n>please select a valid Sink Type !</small>\n                    </div>\n                </div>\n            </div>\n        </form>\n        <div [ngSwitch]=\"selectedSinkType\">\n            <div *ngSwitchCase=\"EdgeX_SINK\">\n                <app-edgex-sink [(edgeXSink)]=\"edgeXSink\"></app-edgex-sink>\n            </div>\n            <div *ngSwitchCase=\"MQTT_SINK\">\n                <app-mqtt-sink [(mqttSink)]=\"mqttSink\"></app-mqtt-sink>\n            </div>\n            <div *ngSwitchCase=\"REST_SINK\">\n                <app-rest-sink [(restSink)]=\"restSink\"></app-rest-sink>\n            </div>\n            <div  *ngSwitchCase=\"LOG_SINK\">\n                <app-log-sink [(logSink)]=\"logSink\"></app-log-sink>\n            </div>\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { Sink, EdgeXSink, MQTTSink, RESTSink, NopSink, LogSink} from '../../../../contracts/kuiper/sink';\n\n\n@Component({\n  selector: 'app-sink-list',\n  templateUrl: './sink-list.component.html',\n  styleUrls: ['./sink-list.component.css']\n})\nexport class SinkListComponent implements OnInit, OnChanges{\n\n  // log: Send the result to log file.\n  // mqtt: Send the result to an MQTT broker.\n  // edgex: Send the result to EdgeX message bus.\n  // rest: Send the result to a Rest HTTP server.\n  // nop: Send the result to a nop operation.\n\n  EdgeX_SINK = \"edgex\";\n  MQTT_SINK = \"mqtt\";\n  REST_SINK = \"rest\";\n  LOG_SINK = \"log\";\n  NOP_SINK = \"nop\";\n\n  private _ruleActions: Sink[];\n  @Input() \n  get ruleActions(): Sink[] {return this._ruleActions};\n  set ruleActions(sinks: Sink[]) {\n    if (!sinks) {return}\n    this._ruleActions = sinks\n  }\n  @Output() ruleActionsChange = new EventEmitter<Sink[]>();\n\n  edgeXSink: EdgeXSink = {} as EdgeXSink;\n  mqttSink: MQTTSink = {} as MQTTSink;\n  restSink: RESTSink = {} as RESTSink;\n  nopSink: NopSink = {} as NopSink;\n  logSink: LogSink = {} as LogSink;\n\n  selectedSinkIndex: number = -1;\n  selectedSinkType: string = '';\n  sinkAddOrEditStatus: boolean = false;\n  sinkOperation_ADD = 'add';\n  sinkOperation_EDIT = 'edit';\n  sinkAddOrEditOperation: string = ''; //add,edit\n\n  updateTimestamp: string = '';\n\n  constructor() { \n    this._ruleActions = [];\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n      this.ruleActionsChange.emit(this.ruleActions)\n  }\n\n  resetSinksConcreteAll() {\n    this.edgeXSink = {} as EdgeXSink;\n    this.mqttSink = {} as MQTTSink;\n    this.restSink = {} as RESTSink;\n    this.nopSink = {} as NopSink;\n    this.logSink = {} as LogSink;\n  }\n\n  getSinkTypeOfAction(sink: Sink): string {\n    let sinkTypes = Object.keys(sink);\n    if (sinkTypes.length === 0)  {\n      return '';\n    }\n    return sinkTypes[0]\n  }\n\n  getSinkByType(sinkType: string): Sink {\n    let sink: Sink = {} as Sink;\n    switch (sinkType) {\n      case this.EdgeX_SINK:\n        sink.edgex = this.edgeXSink\n        break \n      \n      case this.MQTT_SINK:\n        sink.mqtt = this.mqttSink\n        break \n      \n      case this.REST_SINK:\n        sink.rest = this.restSink\n        break \n\n      case this.LOG_SINK:\n        sink.log = this.logSink\n        break \n\n      default:\n        sink.nop = this.nopSink\n        break \n    }\n    return sink\n  }\n\n  sinkConcreteExtractor(sink: Sink){\n    let sinkType = this.getSinkTypeOfAction(sink);\n    this.selectedSinkType = sinkType;\n    switch (sinkType) {\n      case this.EdgeX_SINK:\n        this.edgeXSink = sink.edgex as EdgeXSink\n        break;\n      \n      case this.MQTT_SINK:\n        this.mqttSink = sink.mqtt as MQTTSink\n        break;\n      \n      case this.REST_SINK:\n        this.restSink = sink.rest as RESTSink\n        break;\n\n      case this.LOG_SINK:\n        this.logSink = sink.log as LogSink\n        break;\n\n      default:\n        this.nopSink = sink.nop as NopSink\n        break;\n    }\n  }\n\n  addSinkTransfer() {\n    this.sinkAddOrEditStatus = true;\n    this.sinkAddOrEditOperation = this.sinkOperation_ADD;\n\n    //init for adding one new sink\n    this.selectedSinkIndex = -1;\n    this.selectedSinkType = '';\n    this.resetSinksConcreteAll();\n  }\n\n  //high light background of one sink which is going on editing, but need to remove the bg when executing delete or add operation.\n  // the condition is (index === selectedSinkIndex)\n  editSinkTransfer(sink: Sink, index: number) {\n    this.sinkAddOrEditStatus = true;\n    this.sinkAddOrEditOperation = this.sinkOperation_EDIT;\n    this.selectedSinkIndex = index;\n    this.sinkConcreteExtractor(sink);\n    this.selectedSinkType = this.getSinkTypeOfAction(sink)\n  }\n\n  addOneNewSink() {\n    this.ruleActions.push(this.getSinkByType(this.selectedSinkType));\n    this.sinkAddOrEditStatus = false;\n  }\n\n  updateSink() {\n    this.ruleActions.splice(this.selectedSinkIndex,1, this.getSinkByType(this.selectedSinkType));\n    this.sinkAddOrEditStatus = false;\n  }\n\n  deleteSink(sink: Sink,index: number){\n    this.ruleActions.splice(index,1);\n    this.selectedSinkIndex = -1; // remove background color of edited status if one sink is deleted.\n  }\n\n  cancel() {\n    this.sinkAddOrEditStatus = false;\n  }\n\n  validate(): boolean {\n    if (!this.selectedSinkType) {\n      return false\n    }\n    \n    switch (this.selectedSinkType) {\n      case this.MQTT_SINK:\n        if (!this.mqttSink.server || !this.mqttSink.topic) {\n          return false\n        }\n        break;\n      case this.REST_SINK:\n        if (!this.restSink.url) {\n          return false\n        }\n        break;\n    }\n\n    return true\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\" role=\"button\" data-toggle=\"collapse\" data-target=\"#clllapse-rule-opts\" aria-expanded=\"false\" aria-controls=\"clllapse-rule-opts\" (click)=\"collapseToggle($event)\">\n        <i class=\"fa fa-tags text-primary mr-2\"></i>\n        <span class=\"font-weight-bold text-primary\">Rule Advanced Options</span>\n        <span class=\"text-primary ml-2\">\n            <i aria-disabled=\"true\" class=\"fa fa-angle-double-down fa-lg\" *ngIf=\"!collapseToggleStatus\" data-toggle=\"collapse\" data-target=\"#clllapse-rule-opts\" aria-expanded=\"false\" aria-controls=\"clllapse-rule-opts\"></i>\n            <i aria-disabled=\"true\" class=\"fa fa-angle-double-up fa-lg\"  *ngIf=\"collapseToggleStatus\" data-toggle=\"collapse\" data-target=\"#clllapse-rule-opts\" aria-expanded=\"false\" aria-controls=\"clllapse-rule-opts\"></i>\n        </span>\n    </div>\n    <div class=\"card-body collapse\" id=\"clllapse-rule-opts\">\n        <form>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">IsEventTime</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Whether to use event time or processing time as the timestamp for an event. If event time is used, the timestamp will be extracted from the payload. The timestamp filed must be specified by the stream definition.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <select class=\"custom-select\" name=\"isEventTime\" [(ngModel)]=\"ruleOptions.isEventTime\">\n                        <option [ngValue]=\"false\">false</option>\n                        <option [ngValue]=\"true\">true</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">Qos</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Specify the qos of the stream. The options are 0: At most once; 1: At least once and 2: Exactly once. If qos is bigger than 0, the checkpoint mechanism will be activated to save states periodically so that the rule can be resumed from errors.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <select class=\"custom-select\"  name=\"SkipCertVerify\" [(ngModel)]=\"ruleOptions.qos\">\n                        <option [ngValue]=0>0</option>\n                        <option [ngValue]=1>1</option>\n                        <option [ngValue]=2>2</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">LateTolerance</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='When working with event-time windowing, it can happen that elements arrive late. LateTolerance can specify by how much time(unit is millisecond) elements can be late before they are dropped. By default, the value is 0 which means late elements are dropped.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <input type=\"number\" class=\"form-control\" name=\"lateTolerance\" [(ngModel)]=\"ruleOptions.lateTolerance\">\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">Concurrency</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='A rule is processed by several phases of plans according to the sql statement. This option will specify how many instances will be run for each plan. If the value is bigger than 1, the order of the messages may not be retained.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <input type=\"number\" class=\"form-control\" name=\"concurrency\" [(ngModel)]=\"ruleOptions.concurrency\">\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">BufferLength</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Specify how many messages can be buffered in memory for each plan. If the buffered messages exceed the limit, the plan will block message receiving until the buffered messages have been sent out so that the buffered size is less than the limit. A bigger value will accommodate more throughput but will also take up more memory footprint.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <input type=\"number\" class=\"form-control\" name=\"bufferLength\" [(ngModel)]=\"ruleOptions.bufferLength\">\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                <span class=\"mr-2\">CheckpointInterval</span>\n                <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                data-content='Specify the time interval in milliseconds to trigger a checkpoint. This is only effective when qos is bigger than 0.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <input type=\"number\" class=\"form-control\" name=\"checkpointInterval\" [(ngModel)]=\"ruleOptions.checkpointInterval\">\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">SendMetaToSink</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Specify whether the meta data of an event will be sent to the sink. If true, the sink can get te meta data information.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <select class=\"custom-select\" name=\"sendMetaToSink\" [(ngModel)]=\"ruleOptions.sendMetaToSink\">\n                        <option [ngValue]=\"false\">false</option>\n                        <option [ngValue]=\"true\">true</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\">\n                    <span class=\"mr-2\">SendError</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Whether to send the error to sink. If true, any runtime error will be sent through the whole rule into sinks. Otherwise, the error will only be printed out in the log.'></span>\n                </label>\n                <div class=\"col-sm-9\">\n                    <select class=\"custom-select\" name=\"sendError\" [(ngModel)]=\"ruleOptions.sendError\">\n                        <option [ngValue]=\"false\">false</option>\n                        <option [ngValue]=\"true\">true</option>\n                    </select>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { RuleOptions } from '../../../contracts/kuiper/rule-options';\n\n@Component({\n  selector: 'app-rule-advanced-options',\n  templateUrl: './rule-advanced-options.component.html',\n  styleUrls: ['./rule-advanced-options.component.css']\n})\nexport class RuleAdvancedOptionsComponent implements OnInit, OnChanges {\n\n  collapseToggleStatus: boolean = false; //down-open-true, up-close-false\n\n  private _ruleOptions: RuleOptions;\n  @Input() \n  get ruleOptions(): RuleOptions {return this._ruleOptions}\n  set ruleOptions(opts: RuleOptions){Object.assign(this._ruleOptions, opts)}\n  @Output() ruleOptionsChange = new EventEmitter<RuleOptions>();\n\n  constructor() { \n    this._ruleOptions = {\n        isEventTime: false,\n        sendMetaToSink: false,\n        sendError: true,\n        qos: 0\n    } as RuleOptions\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n     this.ruleOptionsChange.emit(this.ruleOptions) \n  }\n\n  collapseToggle(event: any) {\n    if (this.collapseToggleStatus) {\n      this.collapseToggleStatus = false //close\n      return\n    }\n    this.collapseToggleStatus = true //open\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n <!-- <button class=\"btn btn-success btn-sm float-right\" (click)=\"submit()\">\n    <i class=\"fa fa-save mr-1\"></i> \n    <span i18n>Submit</span>\n</button>\n <app-wizard-stepper [stepItems]=\"stepItems\" [(data)]=\"rule\"></app-wizard-stepper> -->\n\n <!-- <div class=\"card\">\n     <div class=\"card-header\">Add Wizard</div>\n     <div class=\"card-body py-0\">\n        <div class=\"row\">\n            <div class=\"col-md-3 bg-light pt-2\">\n                <ul class=\"list-group \">\n                    <li class=\"list-group-item list-group-item-action border-0 bg-transparent\">An item</li>\n                    <li class=\"list-group-item list-group-item-action border-0 \">A second item</li>\n                    <li class=\"list-group-item list-group-item-action border-0 bg-transparent\">A third item</li>\n                    <li class=\"list-group-item list-group-item-action border-0 bg-transparent\">A fourth item</li>\n                    <li class=\"list-group-item list-group-item-action border-0\">And a fifth one</li>\n                </ul>\n            </div>\n            <div class=\"col-md-9 mt-2\">\n                <app-sink-list [(ruleActions)]=\"ruleActions\"></app-sink-list>\n            </div>\n        </div>\n     </div>\n </div> -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-plus mr-1 text-danger\"></i>\n        <span class=\"font-weight-bold\" i18n>Add Rule</span>\n        <button class=\"btn btn-success btn-sm float-right\" [disabled]=\"!validate()\" (click)=\"submit()\">\n            <i class=\"fa fa-save mr-1\"></i> \n            <span i18n>Submit</span>\n        </button>\n    </div>\n   \n    <div class=\"card-body p-0\">\n        <form class=\"px-5 py-4\">\n            <div class=\"form-group row has-validation\">\n                <label for=\"ruleName\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Name</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='The identification of the rule. The rule name cannot be duplicated in the same Kuiper instance.'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" id=\"ruleName\" [class.is-invalid]=\"!rule.id\" [class.is-valid]=\"rule.id\" name=\"ruleId\" [(ngModel)]=\"rule.id\">\n                    <div id=\"ruleName\" class=\"invalid-feedback\">\n                        <small i18n>the rule name can't be empty!</small>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row has-validation\">\n                <label for=\"ruleSql\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>RuleSQL</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='The sql query to run for the rule.The Table name must be your stream name.For example \"SELECT EdgexStream.temperature, EdgexStream.temp FROM EdgexStream where EdgexStream.temperature > EdgexStream.temp \".'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <div class=\"card\">\n                        <div class=\"card-header p-2\" [class.border]=\"!sqlEditor.getValue()\" [class.border-danger]=\"!sqlEditor.getValue()\"> \n                            <i class=\"fa fa-code text-info mr-2 font-weight-bolder\"></i>\n                            <span class=\"font-weight-bold\" i18n>SQL Editor</span>\n                            <span *ngIf=\"!sqlEditor.getValue()\" class=\"text-danger float-right\">\n                                <i class=\"fa fa-warning mr-2\"></i>\n                                <span i18n>SQL can't be empty!</span>\n                            </span>\n                        </div>\n                        <div class=\"card-header bg-secondary py-2\">\n                            <span class=\"text-light\">\n                                <i role=\"button\" class=\"fa fa-indent fa-lg mr-3\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"formatter\" (click)=\"formatSql()\"></i>\n                            </span>\n                        </div>\n                        <div class=\"card-body p-0\">\n                            <textarea id=\"sql-editor\" name=\"sql-editor\"></textarea>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row has-validation\">\n                <label for=\"ruleActions\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Action</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                    data-content='where the sql result data sent to'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <div class=\"card\">\n                        <div class=\"card-header\" [class.border]=\"!rule.actions || rule.actions.length === 0\" [class.border-danger]=\"!rule.actions || rule.actions.length === 0\">\n                            <i class=\"fa fa-plus mr-2 text-info\"></i>\n                            <span class=\"font-weight-bold\" i18n>Add Action</span>\n                            <span *ngIf=\"!rule.actions || rule.actions.length === 0\" class=\"text-danger float-right\">\n                                <i class=\"fa fa-warning mr-2\"></i>\n                                <span i18n>at least one rule action required!</span>\n                            </span>\n                        </div>\n                        <div class=\"card-body\">\n                           <app-sink-list [(ruleActions)]=\"rule.actions\"></app-sink-list>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- advanced options-->\n            <div class=\"form-group row has-validation\">\n                <label for=\"ruleSql\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Options</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                    data-content='Advanced Options'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <app-rule-advanced-options [(ruleOptions)]=\"rule.options\"></app-rule-advanced-options>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router'\n\nimport { Rule } from '../../../contracts/kuiper/rule';\nimport { RuleEngineService } from 'src/app/services/rule-engine.service';\nimport { MessageService } from '../../../message/message.service';\n\n@Component({\n  selector: 'app-add-rules',\n  templateUrl: './add-rules.component.html',\n  styleUrls: ['./add-rules.component.css']\n})\n\nexport class AddRulesComponent implements OnInit {\n\n  rule: Rule;\n  ruleSql: string = '';\n  sqlEditor: any;\n  \n  SQL_CUSTOM_KEYWORDS = ['CONCAT','concat'];\n\n  constructor(private ruleSvc: RuleEngineService,\n    private msgSvc: MessageService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) { \n    this.rule = {} as Rule\n  }\n\n  ngOnInit(): void {\n    this.sqlEditorRender();\n    $(function() {\n      $('[data-toggle=\"tooltip\"]').tooltip()\n    });\n    this.renderPopoverComponent();\n  }\n\n  renderPopoverComponent() {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n  }\n\n  sqlEditorRender() {\n    let sqlEditorTextarea = document.getElementById('sql-editor');\n    this.SQL_CUSTOM_KEYWORDS.forEach((word) => {\n      CodeMirror.resolveMode('text/x-pgsql').keywords[word] = true;\n    })\n    this.sqlEditor = CodeMirror.fromTextArea(sqlEditorTextarea, {\n      mode: 'text/x-pgsql',\n      tabSize: 4,\n      theme: \"gruvbox-dark\",\n      lineNumbers: true,\n      lineWrapping: true,\n      gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\n      autofocus: true,\n      matchBrackets: true,\n      styleActiveLine: true,\n      cursorHeight: 0.85\n    });\n    this.sqlEditor.setSize('auto', '500px');\n    this.sqlEditor.on('drop', (instance: any, event: any) => {\n    });\n\n    this.sqlEditor.on('paste', (instance: any, event: any) => {\n    });\n\n    this.sqlEditor.on('keyup', (instance: any, event: any) => {\n      if (event.keyCode >= 65 && event.keyCode <= 90) {\n        instance.showHint({completeSingle:false})\n      }\n    });\n  }\n\n  //sql-fomatter has a bug when a false value in sql string, true vaule is ok, holding on until the bug is fixed. but if set l=postgresql will works.\n  formatSql() {\n    let streamSql: string= '';\n    streamSql = this.sqlEditor.getValue();\n    this.sqlEditor.setValue(sqlFormatter.format(streamSql,{language: 'postgresql'}));\n  }\n\n  validate(): boolean {\n    if (!this.rule.id || \n      !this.sqlEditor.getValue() || \n      !this.rule.actions || this.rule.actions.length === 0) {\n      return false\n    }\n    return true\n  }\n\n  submit() {\n    this.rule.sql = this.sqlEditor.getValue() \n    this.ruleSvc.addRule(this.rule).subscribe(() => {\n      this.msgSvc.success('Add rule',`Name: ${this.rule.id}`)\n      this.router.navigate(['../rules-list'], { relativeTo: this.route })\n    })\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-plus mr-1 text-danger\"></i>\n        <span class=\"font-weight-bold\" i18n>Edit Rule</span>\n        <button class=\"btn btn-success btn-sm float-right\" [disabled]=\"!validate()\" (click)=\"update()\">\n            <i class=\"fa fa-save mr-1\"></i> \n            <span i18n>Update</span>\n        </button>\n    </div>\n   \n    <div class=\"card-body p-0\">\n        <form class=\"px-5 py-4\">\n            <div class=\"form-group row has-validation\">\n                <label for=\"ruleName\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Name</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='The identification of the rule. The rule name cannot be duplicated in the same Kuiper instance.'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" id=\"ruleName\" [class.is-invalid]=\"!rule.id\" [class.is-valid]=\"rule.id\" name=\"ruleId\" [(ngModel)]=\"rule.id\">\n                    <div id=\"ruleName\" class=\"invalid-feedback\">\n                        <small i18n>the rule name can't be empty!</small>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row has-validation\">\n                <label for=\"ruleSql\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>RuleSQL</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='The sql query to run for the rule.The Table name must be your stream name.For example \"SELECT EdgexStream.temperature, EdgexStream.temp FROM EdgexStream where EdgexStream.temperature > EdgexStream.temp \".'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <div class=\"card\">\n                        <div class=\"card-header p-2\" [class.border]=\"!sqlEditor.getValue()\" [class.border-danger]=\"!sqlEditor.getValue()\"> \n                            <i class=\"fa fa-code text-info mr-2 font-weight-bolder\"></i>\n                            <span class=\"font-weight-bold\" i18n>SQL Editor</span>\n                            <span *ngIf=\"!sqlEditor.getValue()\" class=\"text-danger float-right\">\n                                <i class=\"fa fa-warning mr-2\"></i>\n                                <span>SQL can't be empty!</span>\n                            </span>\n                        </div>\n                        <div class=\"card-header bg-secondary py-2\">\n                            <span class=\"text-light\">\n                                <i role=\"button\" class=\"fa fa-indent fa-lg mr-3\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"formatter\" (click)=\"formatSql()\"></i>\n                            </span>\n                        </div>\n                        <div class=\"card-body p-0\">\n                            <textarea id=\"sql-editor\" name=\"sql-editor\"></textarea>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row has-validation\">\n                <label for=\"ruleActions\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Action</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                    data-content='where the sql result data sent to'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <div class=\"card\">\n                        <div class=\"card-header\" [class.border]=\"!rule.actions || rule.actions.length === 0\" [class.border-danger]=\"!rule.actions || rule.actions.length === 0\">\n                            <i class=\"fa fa-plus mr-2 text-info\"></i>\n                            <span class=\"font-weight-bold\" i18n>Add Action</span>\n                            <span *ngIf=\"!rule.actions || rule.actions.length === 0\" class=\"text-danger float-right\">\n                                <i class=\"fa fa-warning mr-2\"></i>\n                                <span i18n>at least one rule action required!</span>\n                            </span>\n                        </div>\n                        <div class=\"card-body\">\n                           <app-sink-list [(ruleActions)]=\"rule.actions\"></app-sink-list>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- advanced options-->\n            <div class=\"form-group row has-validation\">\n                <label for=\"ruleSql\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Options</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                    data-content='Advanced Options'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <app-rule-advanced-options [(ruleOptions)]=\"rule.options\"></app-rule-advanced-options>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { Rule } from 'src/app/contracts/kuiper/rule';\nimport { RuleEngineService } from 'src/app/services/rule-engine.service';\n\nimport { MessageService } from '../../../message/message.service';\n\n@Component({\n  selector: 'app-edit-rules',\n  templateUrl: './edit-rules.component.html',\n  styleUrls: ['./edit-rules.component.css']\n})\n\nexport class EditRulesComponent implements OnInit {\n  rule: Rule;\n  ruleSql: string = '';\n  sqlEditor: any;\n  \n  SQL_CUSTOM_KEYWORDS = ['CONCAT','concat'];\n\n  constructor(private ruleSvc: RuleEngineService,\n    private msgSvc: MessageService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) { \n    this.rule = {} as Rule\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      if(params['ruleID']) {\n        this.getRuleByID(params['ruleID'])\n      }\n    })\n    this.sqlEditorRender();\n    $(function() {\n      $('[data-toggle=\"tooltip\"]').tooltip()\n    });\n    this.renderPopoverComponent();\n  }\n\n  getRuleByID(ruleID: string) {\n    this.ruleSvc.findRuleById(ruleID).subscribe((data: Rule) => {\n      this.rule = data\n      this.sqlEditor.setValue(this.rule.sql)\n    })\n  }\n\n  renderPopoverComponent() {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n  }\n\n  sqlEditorRender() {\n    let sqlEditorTextarea = document.getElementById('sql-editor');\n    this.SQL_CUSTOM_KEYWORDS.forEach((word) => {\n      CodeMirror.resolveMode('text/x-pgsql').keywords[word] = true;\n    })\n    this.sqlEditor = CodeMirror.fromTextArea(sqlEditorTextarea, {\n      mode: 'text/x-pgsql',\n      tabSize: 4,\n      theme: \"gruvbox-dark\",\n      lineNumbers: true,\n      lineWrapping: true,\n      gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\n      autofocus: true,\n      matchBrackets: true,\n      styleActiveLine: true,\n      cursorHeight: 0.85\n    });\n    this.sqlEditor.setSize('auto', '500px');\n    this.sqlEditor.on('drop', (instance: any, event: any) => {\n    });\n\n    this.sqlEditor.on('paste', (instance: any, event: any) => {\n    });\n\n    this.sqlEditor.on('keyup', (instance: any, event: any) => {\n      if (event.keyCode >= 65 && event.keyCode <= 90) {\n        instance.showHint({completeSingle:false})\n      }\n    });\n  }\n\n  //sql-fomatter has a bug when a false value in sql string, true vaule is ok, holding on until the bug is fixed. but if set l=postgresql will works.\n  formatSql() {\n    let streamSql: string= '';\n    streamSql = this.sqlEditor.getValue();\n    this.sqlEditor.setValue(sqlFormatter.format(streamSql,{language: 'postgresql'}));\n  }\n\n  validate(): boolean {\n    if (!this.rule.id || \n      !this.sqlEditor.getValue() || \n      !this.rule.actions || this.rule.actions.length === 0) {\n      return false\n    }\n    return true\n  }\n\n  update() {\n    this.rule.sql = this.sqlEditor.getValue()\n    this.ruleSvc.updateRule(this.rule).subscribe(() => {\n      this.msgSvc.success('update',`name: ${this.rule.id}`)\n      this.router.navigate(['../rules-list'], { relativeTo: this.route })\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rules-center',\n  templateUrl: './rules-center.component.html',\n  styleUrls: ['./rules-center.component.css']\n})\nexport class RulesCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n * Copyright © 2022 Intel Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-list text-danger mr-2\"></i>\n        <span class=\"font-weight-bold\" i18n>Rule List</span>\n    </div>\n    <div class=\"card-header p-2\">\n        <div class=\"btn-group btn-group-sm\" role=\"group\">\n            <button class=\"btn btn-primary\" (click)=\"refresh()\">\n                <i class=\"fa fa-refresh mr-1\"></i>\n                <span i18n>Refresh</span>\n            </button>\n            <button type=\"button\" class=\"btn btn-info\"  routerLink=\"../add-rules\">\n                <i class=\"fa fa-plus mr-1\"></i><span i18n>Add</span>\n            </button>\n            <button type=\"button\" class=\"btn btn-success\" (click)=\"edit()\" [disabled]=\"selectedRules.length !== 1\">\n                <i class=\"fa fa-edit mr-1\"></i><span i18n>Edit</span>\n            </button>\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteConfirm()\" [disabled]=\"selectedRules.length === 0\">\n                <i class=\"fa fa-trash mr-1\"></i><span i18n>Delete</span>\n            </button>\n        </div>\n    </div>\n    <div class=\"card-body p-0\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-hover text-truncate\">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\"><input type=\"checkbox\" role=\"button\" [checked]=\"isCheckedAll()\" (click)=\"selectAll($event)\"></th>\n                      <th scope=\"col\" i18n>ID</th>\n                      <th scope=\"col\" i18n>Status</th>\n                      <th scope=\"col\" class=\"text-center\" i18n>Status Metrics</th>\n                      <th scope=\"col\" i18n>Operaion</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let rule of rulesList;\" [class.table-active]=\"isChecked(rule.id)\">\n                        <td> <input type=\"checkbox\" role=\"button\"  [checked]=\"isChecked(rule.id)\" (click)=\"selectOne($event,rule)\"></td>\n                        <td class=\"user-select-all\">{{rule.id}}</td>\n                        <td>\n                            <span *ngIf=\"operationStatus\">\n                                <div class=\"spinner-border spinner-border-sm text-secondary\" role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                </div>\n                            </span>\n                            <span *ngIf=\"!operationStatus\">\n                                {{rule.status}}\n                            </span>\n                        </td>\n                        <td class=\"text-center\">\n                            <i role=\"button\" class=\"fa fa-line-chart text-primary\" [class.text-info]=\"statusMetricsRuleID === rule.id\" (click)=\"statusMetrics(rule.id)\"></i>\n                        </td>\n                        <td>\n                            <span *ngIf=\"operationStatus\">\n                                <div class=\"spinner-border spinner-border-sm mr-1 text-success\" role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                </div>\n                                <div class=\"spinner-border spinner-border-sm mr-1 text-info\" role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                </div>\n                                <div class=\"spinner-border spinner-border-sm mr-1 text-danger\" role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                </div>\n                            </span>\n                            <span *ngIf=\"!operationStatus\">\n                                <span role=\"button\" class=\"badge badge-success mr-1\" (click)=\"execute(rule.id, 'start')\" i18n>start</span>\n                                <span role=\"button\" class=\"badge badge-info mr-1\" (click)=\"execute(rule.id, 'restart')\" i18n>restart</span>\n                                <span role=\"button\" class=\"badge badge-danger mr-1\" (click)=\"execute(rule.id, 'stop')\" i18n>stop</span>\n                            </span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n\n<div class=\"card mt-3\" *ngIf=\"ruleStatusMetrics && statusMetricsRuleID\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-line-chart mr-2 text-info\"></i>\n        <span class=\"mr-2 font-weight-bold\">{{ statusMetricsRuleID }}</span><span i18n>Status Metrics</span>\n        <span class=\"badge badge-primary mx-2\" role=\"button\" (click)=\"statusMetricsRefresh(statusMetricsRuleID)\">\n            <i class=\"fa fa-refresh mr-1\"></i>\n            <span i18n>refresh</span>\n        </span>\n\n        <span class=\"align-bottom\" role=\"button\">\n            <i class=\"fa fa-window-close fa-lg text-danger float-right mt-1\" (click)=\"statusMetricsShowClose()\"></i>\n        </span>\n    </div>\n    <div class=\"card-body\">\n        <pre class=\"p-2\">{{ruleStatusMetrics}}</pre>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning mr-1\"></i>\n                    <span i18n>Warning</span>\n                </h5>\n            </div>\n            <div class=\"modal-body\" i18n>\n                The data will be permanently erased!!! Are you sure to execute delete operation？\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" i18n>Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\" i18n>Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n * Copyright © 2022 Intel Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Rule } from 'src/app/contracts/kuiper/rule';\nimport { RuleEngineService } from '../../../services/rule-engine.service';\nimport { MessageService } from '../../../message/message.service';\n\n@Component({\n  selector: 'app-rules-list',\n  templateUrl: './rules-list.component.html',\n  styleUrls: ['./rules-list.component.css']\n})\nexport class RulesListComponent implements OnInit {\n\n  rulesList: Rule[] = [];\n  selectedRules: Rule[] = [];\n\n  ruleStatusMetrics: string = '';\n  statusMetricsRuleID: string  = '';\n\n  operationStatus: boolean = false;\n\n  constructor(\n    private ruleSvc: RuleEngineService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n        this.getRulesList()\n    });\n  }\n\n  getRulesList() {\n    this.ruleSvc.allRules().subscribe((data: Rule[]) => { this.rulesList = data });\n  }\n\n  refresh() {\n    this.ruleSvc.allRules().subscribe((data: Rule[]) => {\n      this.rulesList = data;\n      this.msgSvc.success('refresh');\n    });\n  }\n\n  edit() {\n    this.router.navigate(['../edit-rules'], {\n      relativeTo: this.route,\n      queryParams: { 'ruleID': this.selectedRules[0].id }\n    })\n  }\n\n  statusMetrics(id: string){\n    this.statusMetricsRuleID = '';\n    this.ruleStatusMetrics = '';\n    this.ruleSvc.getRuleStatusMetricsById(id).subscribe((data) => {\n      this.statusMetricsRuleID = id;\n      let obj: {}\n      try {\n        obj = JSON.parse(data)\n      } catch (e) {\n        this.ruleStatusMetrics = data\n        return\n      }\n      this.ruleStatusMetrics = JSON.stringify(obj, null, 3);\n    });\n  }\n\n  statusMetricsShowClose() {\n    this.statusMetricsRuleID = '';\n    this.ruleStatusMetrics = '';\n  }\n\n  statusMetricsRefresh(id: string) {\n    this.statusMetrics(id)\n  }\n\n  deleteConfirm() {\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n\n  delete() {\n    this.selectedRules.forEach((ruleSelected,i) => {\n      this.ruleSvc.deleteOneRuleById(ruleSelected.id).subscribe(() => {\n        this.selectedRules.splice(i,1);\n        this.rulesList.forEach((rule: Rule, index) => {\n          if (rule.id === ruleSelected.id) {\n            this.rulesList.splice(index, 1);\n            this.msgSvc.success('remove rule ', ` Id: ${ruleSelected.id}`);\n          }\n        });\n      })\n    });\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  isCheckedAll(): boolean {\n    let checkedAll = true;\n    if (this.rulesList && this.rulesList.length === 0) {\n      checkedAll = false\n    }\n    this.rulesList.forEach(rule => {\n      if (this.selectedRules.findIndex(ruleSelected => ruleSelected.id === rule.id) === -1) {\n        checkedAll = false\n      }\n    });\n    return checkedAll\n  }\n\n  selectAll(event: any) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.rulesList.forEach(rule => {\n        if (this.selectedRules.findIndex(ruleSelected => ruleSelected.id === rule.id) !== -1) {\n            return\n        }\n        this.selectedRules.push(rule);\n      });\n    } else {\n      this.rulesList.forEach(rule => {\n        let found = this.selectedRules.findIndex(ruleSelected => ruleSelected.id === rule.id);\n        if (found !== -1) {\n          this.selectedRules.splice(found,1)\n        }\n      });\n    }\n  }\n\n  isChecked(id: string): boolean {\n    return this.selectedRules.findIndex(rule => rule.id === id) >= 0;\n  }\n\n  selectOne(event: any, rule: Rule) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.selectedRules.push(rule);\n      return\n    }\n    let found = this.selectedRules.findIndex(ruleSelected => ruleSelected.id === rule.id);\n    if (found !== -1) {\n      this.selectedRules.splice(found,1)\n    }\n  }\n\n  execute(ruleID: string, command: string) {\n    this.operationStatus = true\n    this.ruleSvc.executeRuleCommand(ruleID, command).subscribe({\n      next: () => {\n        this.operationStatus = false;\n        this.msgSvc.success(`${command} ${ruleID}`);\n        this.getRulesList();\n      },\n      error: () => this.operationStatus = false\n    })\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"alert alert-warning\" *ngIf=\"streamIsNullMsg\" role=\"alert\">\n    <i class=\"fa fa-warning mr-2\"></i>\n    <span i18n>Stream can't be empty!</span> \n</div>\n<div class=\"card\">\n    <div class=\"card-header p-2\">\n        <span class=\"\">\n            <span class=\"text-danger font-weight-bold fa fa-code mr-2\"></span>\n            <span class=\"mr-3 font-weight-bold\" i18n>Add Stream</span> \n        </span>\n        <button type=\"button\" class=\"btn btn-success btn-sm float-right\" (click)=\"submit()\">\n            <i class=\"fa fa-save mr-1\"></i>\n            <span i18n>Submit</span> \n        </button>\n    </div>\n    <div class=\"card-header\">\n        <span role=\"button\" class=\"badge badge-secondary mr-2\" [class.badge-info]=\"templateTypeSelected === EDGEX\" (click)=\"templateTypeToggle(EDGEX)\">\n            <i class=\"fa fa-square-o mr-1\" [class.fa-check-square]=\"templateTypeSelected === EDGEX\"></i>\n            <span>EdgeXStreamTemplate</span>\n        </span>\n        <span role=\"button\" class=\"badge badge-secondary mr-2\" [class.badge-info]=\"templateTypeSelected === CUSTOM\" (click)=\"templateTypeToggle(CUSTOM)\">\n            <i class=\"fa fa-square-o mr-1\" [class.fa-check-square]=\"templateTypeSelected === CUSTOM\"></i>\n            <span>CustomStreamTemplate</span>\n        </span>\n    </div>\n    <div class=\"card-body p-0\">\n        <div class=\"card-header bg-secondary py-2\">\n            <span class=\"text-light\">\n                <i role=\"button\" class=\"fa fa-indent fa-lg mr-3\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"formatter\" (click)=\"formatSql()\"></i>\n            </span>\n        </div>\n        <textarea id=\"sql-editor\" name=\"sql-editor\"></textarea>\n    </div>\n</div>\n\n  \n\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { RuleEngineService } from 'src/app/services/rule-engine.service';\n\nimport { MessageService } from '../../../message/message.service';\n\n@Component({\n  selector: 'app-add-stream',\n  templateUrl: './add-stream.component.html',\n  styleUrls: ['./add-stream.component.css']\n})\nexport class AddStreamComponent implements OnInit {\n\n  EDGEX: string = \"edgex\";\n  CUSTOM: string  =  \"custom\";\n  SQL_CUSTOM_KEYWORDS = ['STREAM','stream'];\n\n  sqlEditor: any;\n  templateTypeSelected: string = this.EDGEX;\n  edgexStreamDataTemplate: string = 'CREATE STREAM EdgeXStream () WITH ( FORMAT = \"JSON\", TYPE = \"edgex\" )';\n  customStreamDataTemplate: string = 'CREATE STREAM demo ( field1 bigint, field2 float ) WITH ( DATASOURCE = \"\", KEY = \"\", FORMAT = \"JSON\", CONF_KEY = \"\", TYPE = \"edgex\", STRICT_VALIDATION = \"true\", TIMESTAMP = \"\", TIMESTAMP_FORMAT = \"\", RETAIN_SIZE = \"0\", SHARED = \"false\" )';\n\n  streamIsNullMsg: boolean = false;\n\n  constructor(private ruleSvc: RuleEngineService,\n    private msgSvc: MessageService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.sqlEditorRender();\n    $(function() {\n      $('[data-toggle=\"tooltip\"]').tooltip()\n    })\n  }\n\n  templateTypeToggle(template: string) {\n    this.templateTypeSelected = template;\n    if (template === this.EDGEX) {\n      this.sqlEditor.setValue(this.edgexStreamDataTemplate);\n    } else {\n      this.sqlEditor.setValue(this.customStreamDataTemplate);\n      this.formatSql()\n    }\n  }\n\n  sqlEditorRender() {\n    let sqlEditorTextarea = document.getElementById('sql-editor');\n    this.SQL_CUSTOM_KEYWORDS.forEach((word) => {\n      CodeMirror.resolveMode('text/x-pgsql').keywords[word] = true;\n    })\n    this.sqlEditor = CodeMirror.fromTextArea(sqlEditorTextarea, {\n      mode: 'text/x-pgsql',\n      tabSize: 4,\n      theme: \"gruvbox-dark\",\n      lineNumbers: true,\n      lineWrapping: true,\n      gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\n      autofocus: true,\n      matchBrackets: true,\n      styleActiveLine: true,\n      cursorHeight: 0.85,\n      hint: CodeMirror.hint.sql\n    });\n    this.sqlEditor.setSize('auto', '500px');\n    this.sqlEditor.on('drop', (instance: any, event: any) => {\n    });\n\n    this.sqlEditor.on('paste', (instance: any, event: any) => {\n    });\n\n    this.sqlEditor.on('keyup', (instance: any, event: any) => {\n      if (event.keyCode >= 65 && event.keyCode <= 90) {\n        instance.showHint({completeSingle:false})\n      }\n    });\n    this.sqlEditor.setValue(this.edgexStreamDataTemplate)\n  }\n\n  //sql-fomatter has a bug when a false value in sql string, true vaule is ok, holding on until the bug is fixed. but if set l=postgresql will works.\n  formatSql() {\n    let streamSql: string= '';\n    streamSql = this.sqlEditor.getValue();\n    this.sqlEditor.setValue(sqlFormatter.format(streamSql,{language: 'postgresql'}));\n  }\n\n  documentShow() {\n    $(\"#stream-document\").modal('show');\n  }\n\n  submit() {\n    let sql = this.sqlEditor.getValue() as string;\n    if (!sql.trim()) {\n      this.streamIsNullMsg = true;\n      window.setTimeout(()=>{this.streamIsNullMsg = false},2000);\n      return\n    }\n    \n    this.ruleSvc.addStream(JSON.stringify({'sql': sql})).subscribe(() => {\n      this.msgSvc.success('Add Stream');\n      this.router.navigate(['../stream-list'], { relativeTo: this.route })\n    });\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"alert alert-warning\" *ngIf=\"streamIsNullMsg\" role=\"alert\">\n    <i class=\"fa fa-warning mr-2\"></i>\n    <span i18n>Stream can't be empty!</span> \n</div>\n<div class=\"card\">\n    <div class=\"card-header p-2\">\n        <span>\n            <span class=\"text-danger font-weight-bold fa fa-code mr-2\"></span>\n            <span class=\"mr-2\" i18n>Edit Stream</span><span class=\"font-weight-bold\">{{streamName}}</span> \n        </span>\n        <span class=\"float-right\">\n            <button type=\"button\" class=\"btn btn-success btn-sm\"  [disabled]=\"!streamStringFormatObj\" (click)=\"submit()\">\n                <i class=\"fa fa-save mr-1\"></i>\n                <span i18n>Submit</span> \n            </button>\n        </span>\n    </div>\n    <div class=\"card-body p-0\">\n        <div class=\"card-header bg-secondary py-2\">\n            <span class=\"text-light\">\n                <i role=\"button\" class=\"fa fa-indent fa-lg mr-3\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"formatter\" (click)=\"formatSql()\"></i>\n            </span>\n        </div>\n        <textarea id=\"sql-editor\" name=\"sql-editor\"></textarea>\n    </div>\n</div>\n\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Stream } from 'src/app/contracts/kuiper/stream';\nimport { StreamFields } from '../../../contracts/kuiper/stream-fields';\nimport { MessageService } from 'src/app/message/message.service';\nimport { RuleEngineService } from 'src/app/services/rule-engine.service';\n\n@Component({\n  selector: 'app-edit-stream',\n  templateUrl: './edit-stream.component.html',\n  styleUrls: ['./edit-stream.component.css']\n})\nexport class EditStreamComponent implements OnInit {\n\n  SQL_CUSTOM_KEYWORDS = ['STREAM','stream'];\n\n  sqlEditor: any;\n  streamJSONFormatObj?: Stream;\n  streamName: string = '';\n  streamStringFormatObj: string = '';\n  streamIsNullMsg: boolean = false;\n  \n  constructor(\n    private ruleSvc: RuleEngineService,\n    private msgSvc: MessageService,\n    private router: Router,\n    private route: ActivatedRoute) { \n    }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      if (params['streamName']) {\n        this.streamName = params['streamName'];\n        this.getStreamByNameOrID();\n      }\n    });\n\n    this.sqlEditorRender();\n\n    $(function() {\n      $('[data-toggle=\"tooltip\"]').tooltip()\n    });\n  }\n\n  getStreamByNameOrID(){\n    this.ruleSvc.findStreamByName(this.streamName).subscribe((data: Stream) => {\n      this.streamJSONFormatObj = data;\n      this.dataFormatJSONToStringConvertor();\n      this.sqlEditor.setValue(this.streamStringFormatObj);\n      this.formatSql();\n    })\n  }\n\n  //stream data string format example:\n  //CREATE STREAM  my_stream (id bigint, name string, score float) WITH ( datasource = \"topic/temperature\", FORMAT = \"json\", KEY = \"id\");\n  dataFormatJSONToStringConvertor() {\n    if (!this.streamJSONFormatObj) {\n      return\n    }\n\n    //StreamFields\n    let fieldsKVFormatArray: string[] = [];\n    this.streamJSONFormatObj?.StreamFields?.forEach((field: StreamFields, index) => {\n      fieldsKVFormatArray.push(`${field.Name} ${field.FieldType}`)\n    })\n\n    //StreamOption\n    let streamOptKVFormatArray: string[] = [];\n    for (const [k,v] of Object.entries(this.streamJSONFormatObj!.Options)) {\n      streamOptKVFormatArray.push(`${k} = \"${v}\"`)\n    }\n    \n    //Stream artifacts\n    this.streamStringFormatObj = `CREATE STREAM ${this.streamJSONFormatObj?.Name} ( ${fieldsKVFormatArray.join(', ')} ) WITH ( ${streamOptKVFormatArray.join(', ')} )`\n  }\n\n  sqlEditorRender() {\n    let sqlEditorTextarea = document.getElementById('sql-editor');\n    this.SQL_CUSTOM_KEYWORDS.forEach((word) => {\n      CodeMirror.resolveMode('text/x-pgsql').keywords[word] = true;\n    })\n    this.sqlEditor = CodeMirror.fromTextArea(sqlEditorTextarea, {\n      mode: 'text/x-pgsql',\n      tabSize: 4,\n      theme: \"gruvbox-dark\",\n      lineNumbers: true,\n      lineWrapping: true,\n      gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\n      autofocus: true,\n      matchBrackets: true,\n      styleActiveLine: true,\n      cursorHeight: 0.85,\n      hint: CodeMirror.hint.sql\n    });\n    this.sqlEditor.setSize('auto', '500px');\n    this.sqlEditor.on('drop', (instance: any, event: any) => {\n    });\n\n    this.sqlEditor.on('paste', (instance: any, event: any) => {\n    });\n\n    this.sqlEditor.on('keyup', (instance: any, event: any) => {\n      if (event.keyCode >= 65 && event.keyCode <= 90) {\n        instance.showHint({completeSingle:false})\n      }\n    });\n  }\n\n  //sql-fomatter has a bug when a false value in sql string, true vaule is ok, holding on until the bug is fixed. but if set l=postgresql will works.\n  formatSql() {\n    let streamSql: string= '';\n    streamSql = this.sqlEditor.getValue();\n    this.sqlEditor.setValue(sqlFormatter.format(streamSql,{language: 'postgresql'}));\n  }\n\n  submit() {\n    let streamSql = this.sqlEditor.getValue() as string;\n    if (!streamSql.trim()) {\n      this.streamIsNullMsg = true;\n      window.setTimeout(()=>{this.streamIsNullMsg = false},2000);\n      return\n    }\n    this.ruleSvc.updateStream(JSON.stringify({'sql': streamSql}),this.streamName).subscribe(() => {\n      this.msgSvc.success('Update Stream');\n      this.router.navigate(['../stream-list'], { relativeTo: this.route })\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stream-center',\n  templateUrl: './stream-center.component.html',\n  styleUrls: ['./stream-center.component.css']\n})\nexport class StreamCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-list mr-2 text-danger\"></i>\n        <span i18n>Stream List</span>\n    </div>\n    <div class=\"card-header p-2\">\n        <div class=\"btn-group btn-group-sm\" role=\"group\">\n            <button class=\"btn btn-primary btn-sm\" (click)=\"refresh()\">\n                <i class=\"fa fa-refresh mr-1\"></i>\n                <span i18n>Refresh</span>\n            </button>\n            <button class=\"btn btn-success btn-sm\" (click)=\"add()\">\n                <i class=\"fa fa-plus-circle mr-1\"></i>\n                <span i18n>Add</span>\n            </button>\n        </div>\n    </div>\n    <div class=\"card-body p-0\">\n        <ul class=\"list-group p-0 border-0\">\n            <li *ngFor=\"let stream of streamList\" class=\"list-group-item list-group-item-action list-group-item-light border-top-0 border-left-0  border-right-0\">\n                <div class=\"media\">\n                    <div class=\"align-self-center mr-3\">\n                        <i class=\"fa fa-tags fa-2x text-secondary\"></i>  \n                    </div>\n                    <div class=\"media-body\">\n                        <div class=\"mt-0 mb-1\">\n                            <h5 class=\"d-inline mr-3 align-middle text-dark\">{{stream}}</h5>\n                        </div>\n                        <div>\n                            <span class=\"float-right\">\n                                <span class=\"badge badge-info mr-2\" role=\"button\" (click)=\"edit(stream)\">\n                                    <i class=\"fa fa-edit mr-1\"></i>\n                                    <span i18n>Edit</span>\n                                </span>\n                                <span class=\"badge badge-danger\" role=\"button\" (click)=\"deleteConfirm(stream)\">\n                                    <i class=\"fa fa-trash mr-1\"></i> \n                                    <span i18n>Delete</span>\n                                </span>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning mr-1\"></i>\n                    <span i18n>Warning</span>\n                </h5>  \n            </div>\n            <div class=\"modal-body\" i18n>\n                The data will be permanently erased!!! Are you sure to execute delete operation？\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" i18n>Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\" i18n>Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { RuleEngineService } from '../../../services/rule-engine.service';\nimport { MessageService } from '../../../message/message.service';\n\n@Component({\n  selector: 'app-stream-list',\n  templateUrl: './stream-list.component.html',\n  styleUrls: ['./stream-list.component.css']\n})\nexport class StreamListComponent implements OnInit {\n\n  streamList: string[] = [];\n  selectedStream: string = '';\n\n  constructor(\n    private ruleSvc: RuleEngineService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n\n  ngOnInit(): void {\n    this.getStreamList()\n  }\n\n  getStreamList() {\n    this.ruleSvc.allStreams().subscribe((data: string[]) => {\n      this.streamList = data; \n    });\n  }\n\n  refresh() {\n    this.ruleSvc.allStreams().subscribe((data: string[]) => {\n      this.streamList = data;\n      this.msgSvc.success('refresh');\n    });\n  }\n  \n  add() {\n    this.router.navigate(['../add-stream'], {relativeTo: this.route});\n  }\n\n  edit(streamName: string) {\n    this.router.navigate(['../edit-stream'], {\n      relativeTo: this.route,\n      queryParams: {\n        'streamName': streamName\n      }\n    });\n  }\n\n  deleteConfirm(streamName: string) {\n    this.selectedStream = streamName;\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n\n  delete() {\n      $(\"#deleteConfirmDialog\").modal('hide');\n      this.ruleSvc.deleteOneStreamById(this.selectedStream).subscribe(() => {\n        this.msgSvc.success('delete', `name: ${this.selectedStream}`);\n        this.streamList.forEach((stream, i) => {\n          if (stream === this.selectedStream) {\n            this.streamList.splice(i,1)\n          }\n        })\n      });\n  }\n}\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\n import { Injectable } from '@angular/core';\n import { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\n import { Observable, of } from 'rxjs';\n import { RuleEngineService } from '../../services/rule-engine.service';\n import { mergeMap, take ,catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RuleEngineAliveGuard  {\n  constructor(private router: Router, private ruleSvc: RuleEngineService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.checkAvailable(route,\n      state);\n  }\n\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.canActivate(route,state)\n  }\n\n  checkAvailable(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.ruleSvc.ping().pipe(\n      take(1),\n      catchError((error)=>{\n        return this.router.navigate(['/svc-unavailable'],{ \n          queryParams: {'svcName':'rule engine','routerPath':`/${state.url.split('/')[1]}`}\n        })\n      }),\n      mergeMap(() => {\n        return of(true)\n      })\n    )\n  }\n  \n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RuleEngineComponent } from './rule-engine.component';\nimport { AddRulesComponent } from './rules/add-rules/add-rules.component';\nimport { EditRulesComponent } from './rules/edit-rules/edit-rules.component';\nimport { RulesCenterComponent } from './rules/rules-center/rules-center.component';\nimport { RulesListComponent } from './rules/rules-list/rules-list.component';\nimport { AddStreamComponent } from './stream/add-stream/add-stream.component';\nimport { EditStreamComponent } from './stream/edit-stream/edit-stream.component';\nimport { StreamCenterComponent } from './stream/stream-center/stream-center.component';\nimport { StreamListComponent } from './stream/stream-list/stream-list.component';\nimport { AuthGuard } from '../guards/auth/guard/auth.guard';\nimport { RuleEngineAliveGuard } from '../guards/health/rule-engine-alive.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RuleEngineComponent,\n    canActivate: [AuthGuard, RuleEngineAliveGuard],\n    canActivateChild: [RuleEngineAliveGuard],\n    children: [\n      {\n        path: '',\n        redirectTo: 'stream-center',\n        pathMatch: 'full',\n      },\n      {\n        path: 'stream-center',\n        component: StreamCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'stream-list',\n            pathMatch: 'full',\n          },\n          {\n            path: 'stream-list',\n            component: StreamListComponent,\n          },\n          {\n            path: 'add-stream',\n            component: AddStreamComponent,\n          },\n          {\n            path: 'edit-stream',\n            component: EditStreamComponent,\n          }\n        ]\n      },\n      {\n        path: 'rules-center',\n        component: RulesCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'rules-list',\n            pathMatch: 'full',\n          },\n          {\n            path: 'rules-list',\n            component: RulesListComponent,\n          },\n          {\n            path: 'add-rules',\n            component: AddRulesComponent,\n          },\n          {\n            path: 'edit-rules',\n            component: EditRulesComponent,\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RuleEngineRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { RuleEngineRoutingModule } from './rule-engine-routing.module';\nimport { StreamListComponent } from './stream/stream-list/stream-list.component';\nimport { StreamCenterComponent } from './stream/stream-center/stream-center.component';\nimport { AddStreamComponent } from './stream/add-stream/add-stream.component';\nimport { EditStreamComponent } from './stream/edit-stream/edit-stream.component';\nimport { RuleEngineComponent } from './rule-engine.component';\nimport { RulesListComponent } from './rules/rules-list/rules-list.component';\nimport { RulesCenterComponent } from './rules/rules-center/rules-center.component';\nimport { AddRulesComponent } from './rules/add-rules/add-rules.component';\nimport { EditRulesComponent } from './rules/edit-rules/edit-rules.component';\nimport { CommandModule } from '../command/command.module';\nimport { EdgexSinkComponent } from './rules/sinks/edgex-sink/edgex-sink.component';\nimport { RestSinkComponent } from './rules/sinks/rest-sink/rest-sink.component';\nimport { MqttSinkComponent } from './rules/sinks/mqtt-sink/mqtt-sink.component';\nimport { NopSinkComponent } from './rules/sinks/nop-sink/nop-sink.component';\nimport { SinkListComponent } from './rules/sinks/sink-list/sink-list.component';\nimport { RuleAdvancedOptionsComponent } from './rules/rule-advanced-options/rule-advanced-options.component';\nimport { MetadataModule } from '../metadata/metadata.module';\nimport { SinkBasePropertiesComponent } from './rules/sinks/sink-base-properties/sink-base-properties.component';\nimport { EdgexSinkOptionalComponent } from './rules/sinks/edgex-sink/edgex-sink-optional/edgex-sink-optional.component';\nimport { LogSinkComponent } from './rules/sinks/log-sink/log-sink.component';\n\n@NgModule({\n  declarations: [RuleEngineComponent, StreamListComponent, StreamCenterComponent, \n    AddStreamComponent, EditStreamComponent, RulesListComponent, RulesCenterComponent, \n    AddRulesComponent, EditRulesComponent, EdgexSinkComponent, RestSinkComponent, \n    MqttSinkComponent, NopSinkComponent, SinkListComponent, \n   RuleAdvancedOptionsComponent, SinkBasePropertiesComponent, EdgexSinkOptionalComponent, LogSinkComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    \n    RuleEngineRoutingModule,\n    CommandModule,\n    MetadataModule\n  ]\n})\nexport class RuleEngineModule { }\n"],"names":["RuleEngineComponent","constructor","ngOnInit","static","this","t","core","Xpm","selectors","decls","vars","consts","i18n_0","$localize","i0","Action","Subscription","scheduler","work","super","schedule","state","delay","intervalProvider","setInterval","handler","timeout","args","delegate","clearInterval","handle","undefined","dateTimestampProvider","now","Date","Scheduler","schedulerActionCtor","asyncScheduler","AsyncScheduler","SchedulerAction","actions","_active","flush","action","push","error","execute","shift","unsubscribe","AsyncAction","pending","_a","closed","id","recycleAsyncId","requestAsyncId","_id","bind","_scheduler","Error","_execute","_delay","errorValue","errored","e","arrRemove","debounceTime","dueTime","operate","source","subscriber","activeTask","lastValue","lastTime","emit","value","next","emitWhenIdle","targetTime","add","subscribe","createOperatorSubscriber","complete","SinkBasePropertiesComponent","collapseToggleStatus","sinkBasePropertiesForm","UntypedFormGroup","concurrency","UntypedFormControl","bufferLength","runAsync","retryInterval","retryCount","cacheLength","cacheSaveInterval","omitIfEmpty","sinkBasePropertiesChange","EventEmitter","sinkBaseProperties","ngOnChanges","sendSingle","dataTemplate","obj","k","v","Object","entries","hasOwnProperty","patchValue","ngAfterViewInit","valueChanges","pipe","distinctUntilChanged","assign","collapseToggle","inputs","outputs","features","ctx","SinkBasePropertiesComponent_i_6_Template","SinkBasePropertiesComponent_i_7_Template","EdgexSinkOptionalComponent","optional","_optional","opts","optionalChange","Qos","Retained","SkipCertVerify","AutoReconnect","CleanSession","template","rf","EdgexSinkOptionalComponent_i_6_Template","EdgexSinkOptionalComponent_i_7_Template","$event","ClientId","Username","Password","KeepAlive","ConnectTimeout","CertFile","KeyFile","CertPEMBlock","KeyPEMBlock","EdgexSinkComponent","edgeXSink","_edgeXSink","sink","edgeXSinkChange","type","protocol","host","port","contentType","messageType","renderPopoverComponent","$","popover","trigger","onSinkBasePropertiesChange","topic","topicPrefix","metadata","profileName","deviceName","sourceName","_r14","ctx_r13","onValueOfPutParamsChange","param_r7","resourceName","_r17","ctx_r16","valueType","ctx_r12","cmdParametersValueRender","CommandServiceTemplateComponent_div_32_div_9_div_2_select_6_Template","CommandServiceTemplateComponent_div_32_div_9_div_2_ng_template_7_Template","CommandServiceTemplateComponent_div_32_div_9_div_2_ng_container_9_Template","_r10","last_r8","CommandServiceTemplateComponent_div_32_div_9_div_1_Template","CommandServiceTemplateComponent_div_32_div_9_div_2_Template","ctx_r2","cmdSvcInfo","parametersOfPutCommand","length","_r20","ctx_r19","pushEventOfGetCmdParamter","ctx_r21","returnEventOfGetCmdParamter","ctx_r4","CommandServiceTemplateComponent_div_32_div_9_Template","CommandServiceTemplateComponent_div_32_ng_template_10_Template","ctx_r1","httpMethod","_r3","CommandServiceTemplateComponent","url","_url","urlParser","_httpMethod","method","requestBodyJSONStr","_requestBodyJSONStr","bodyData","metedataSvc","cmdSvc","cmdURLFixedPrefix","notCommandPathMsgShow","commandName","parameter","cmdSvcInfoChange","profileForm","path","u","URL","pathname","startsWith","deviceNameAndCmdArray","substring","split","getCommandParameterByDeviceAndCommandName","hostname","Number","searchParams","get","cmdName","findDeviceAssociatedCommnadsByDeviceName","resp","deviceCoreCommand","coreCommands","forEach","coreCmd","name","parameters","cmdParamsKVObject","JSON","parse","cmd","val","event","onCmdMethodSelected","setTimeout","onCommandSelected","requestBodyAssemble","params","p","trim","stringify","resetPathParameterSuffix","indexOf","getHttpMethod","getRequestBodyJSONStr","getUrl","i1","i2","CommandServiceTemplateComponent_div_0_Template","CommandServiceTemplateComponent_div_32_Template","onCmdSvcTemplateInfoChange","ctx_r0","restSink","header_r5","_r8","$implicit","key","ctx_r9","requestHeaderChange","ctx_r11","i_r6","index","removeRequestHeader","ctx_r15","bodyType","ctx_r17","addRequestHeader","RestSinkComponent_div_16_div_56_Template","ctx_r18","debugResp","ctx_r20","ctx_r22","insecureSkipVerify","ctx_r23","certificationPath","ctx_r24","privateKeyPath","ctx_r25","rootCaPath","ctx_r26","requestHeaderList","RestSinkComponent","_restSink","SVC_TYPE_COMMAND","SVC_TYPE_CUSTOM","templateTypeSelected","restSinkChange","headers","templateTypeToggle","templateType","window","headersResovler","heards","header","splice","getValuesSettingAllOfCommandTemplate","cmdSvcTemplate","viewQuery","RestSinkComponent_div_15_Template","RestSinkComponent_div_16_Template","MqttSinkComponent","mqttSink","_mqttSink","mqttSinkChange","server","protocolVersion","qos","retained","clientId","username","password","LogSinkComponent","logSink","_logSink","logSinkChange","restoredCtx","_r6","sink_r3","i_r4","ctx_r5","editSinkTransfer","ctx_r7","deleteSink","selectedSinkIndex","getSinkTypeOfAction","_r9","ctx_r8","addSinkTransfer","SinkListComponent_div_0_li_7_Template","ruleActions","SinkListComponent_div_1_span_2_span_4_Template","ctx_r10","sinkAddOrEditOperation","sinkOperation_EDIT","addOneNewSink","validate","_r22","updateSink","_r24","ctx_r14","_r26","_r28","ctx_r27","_r30","ctx_r29","SinkListComponent_div_1_span_2_Template","SinkListComponent_div_1_span_3_Template","SinkListComponent_div_1_button_5_Template","SinkListComponent_div_1_button_6_Template","_r32","ctx_r31","cancel","ctx_r33","selectedSinkType","SinkListComponent_div_1_div_28_Template","SinkListComponent_div_1_div_29_Template","SinkListComponent_div_1_div_30_Template","SinkListComponent_div_1_div_31_Template","sinkOperation_ADD","EdgeX_SINK","MQTT_SINK","REST_SINK","LOG_SINK","SinkListComponent","_ruleActions","sinks","NOP_SINK","ruleActionsChange","nopSink","sinkAddOrEditStatus","updateTimestamp","resetSinksConcreteAll","sinkTypes","keys","getSinkByType","sinkType","edgex","mqtt","rest","log","nop","sinkConcreteExtractor","SinkListComponent_div_0_Template","SinkListComponent_div_1_Template","RuleAdvancedOptionsComponent","ruleOptions","_ruleOptions","ruleOptionsChange","isEventTime","sendMetaToSink","sendError","RuleAdvancedOptionsComponent_i_6_Template","RuleAdvancedOptionsComponent_i_7_Template","lateTolerance","checkpointInterval","AddRulesComponent","ruleSvc","msgSvc","router","route","ruleSql","SQL_CUSTOM_KEYWORDS","rule","sqlEditorRender","tooltip","sqlEditorTextarea","document","getElementById","word","CodeMirror","resolveMode","keywords","sqlEditor","fromTextArea","mode","tabSize","theme","lineNumbers","lineWrapping","gutters","autofocus","matchBrackets","styleActiveLine","cursorHeight","setSize","on","instance","keyCode","showHint","completeSingle","formatSql","streamSql","getValue","setValue","sqlFormatter","format","language","submit","sql","addRule","success","navigate","relativeTo","i3","AddRulesComponent_span_32_Template","AddRulesComponent_span_49_Template","options","EditRulesComponent","queryParams","ruleID","getRuleByID","findRuleById","data","update","updateRule","EditRulesComponent_span_32_Template","EditRulesComponent_span_49_Template","RulesCenterComponent","rule_r2","status","_r16","selectOne","RulesListComponent_tr_39_span_6_Template","RulesListComponent_tr_39_span_7_Template","statusMetrics","RulesListComponent_tr_39_span_11_Template","RulesListComponent_tr_39_span_12_Template","isChecked","operationStatus","statusMetricsRuleID","_r19","statusMetricsRefresh","statusMetricsShowClose","ruleStatusMetrics","RulesListComponent","rulesList","selectedRules","getRulesList","allRules","refresh","edit","getRuleStatusMetricsById","deleteConfirm","modal","delete","ruleSelected","i","deleteOneRuleById","isCheckedAll","checkedAll","findIndex","selectAll","target","checked","found","command","executeRuleCommand","RulesListComponent_tr_39_Template","RulesListComponent_div_40_Template","AddStreamComponent","EDGEX","CUSTOM","edgexStreamDataTemplate","customStreamDataTemplate","streamIsNullMsg","hint","documentShow","addStream","AddStreamComponent_div_0_Template","EditStreamComponent","streamName","streamStringFormatObj","getStreamByNameOrID","findStreamByName","streamJSONFormatObj","dataFormatJSONToStringConvertor","fieldsKVFormatArray","StreamFields","field","Name","FieldType","streamOptKVFormatArray","Options","join","updateStream","EditStreamComponent_div_0_Template","StreamCenterComponent","stream_r1","StreamListComponent","streamList","selectedStream","getStreamList","allStreams","deleteOneStreamById","stream","StreamListComponent_li_17_Template","RuleEngineAliveGuard","canActivate","checkAvailable","canActivateChild","ping","take","catchError","svcName","routerPath","mergeMap","of","Yz7","factory","ɵfac","providedIn","routes","component","AuthGuard","children","redirectTo","pathMatch","RuleEngineRoutingModule","oAB","cJS","RouterModule","forChild","RuleEngineModule","CommonModule","FormsModule","ReactiveFormsModule","CommandModule","MetadataModule"],"sourceRoot":"webpack:///"}