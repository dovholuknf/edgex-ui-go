{"version":3,"file":"326.104cecb2862c45f0.js","mappings":"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","sources":["./src/app/metadata/device/device-combo-list/device-combo-list.component.html","./src/app/metadata/device/device-combo-list/device-combo-list.component.ts","./src/app/metadata/profile/device-profile-combo-list/device-profile-combo-list.component.html","./src/app/metadata/profile/device-profile-combo-list/device-profile-combo-list.component.ts"],"sourcesContent":["<!--\n*******************************************************************************\n * Copyright Â© 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"combo-shielder\" *ngIf=\"visible\" (click)=\"close($event)\"></div>\n<div class=\"combo\">\n    <div class=\"input-group has-validation\" (mousedown)=\"toggle($event)\">\n        <input type=\"text\" class=\"form-control\" name=\"deviceNamesSelected\" disabled [(ngModel)]=\"deviceNamesSelectedStr\">\n        <div class=\"input-group-append\">\n            <span class=\"input-group-text\" role=\"button\"><i class=\"fa fa-chevron-down\"></i></span>\n        </div> \n    </div>\n    <div *ngIf=\"visible\" class=\"combo-body shadow rounded\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <i class=\"fa fa-list text-danger mr-2\"></i> \n                <span i18n>Device List</span>\n            </div>\n            <div class=\"card-body p-0\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-hover text-truncate\">\n                        <thead class=\"thead-light\">\n                            <tr>\n                              <th scope=\"col\"><input *ngIf=\"!singleSelectionMode\" type=\"checkbox\" role=\"button\" [checked]=\"isCheckedAll()\" (click)=\"onSelectAll($event)\"></th>\n                              <th scope=\"col\" i18n>ID</th>\n                              <th scope=\"col\" i18n>Name</th>\n                              <th scope=\"col\" i18n>Description</th>\n                              <th scope=\"col\" i18n>Labels</th>\n                              <th scope=\"col\" i18n>AdminState</th>\n                              <th scope=\"col\" i18n>OperatingState</th>\n                              <th scope=\"col\" i18n>AssociatedProfile</th>\n                              <th scope=\"col\" i18n>AssociatedService</th>\n                              <!-- <th scope=\"col\">Created</th>\n                              <th scope=\"col\">Modified</th> -->\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let device of deviceList\" [class.table-active]=\"isChecked(device.name)\">\n                                <td> <input type=\"checkbox\" role=\"button\"  [checked]=\"isChecked(device.name)\" (click)=\"onSelectOne($event,device.name)\"></td>\n                                <td class=\"user-select-all\">{{device.id}}</td>\n                                <td class=\"user-select-all\">{{device.name}}</td>\n                                <td>{{device.description}}</td>\n                                <td>{{device.labels}}</td>\n                                <td>\n                                    <span [ngSwitch]=\"device.adminState\">\n                                        <span *ngSwitchCase=\"'UNLOCKED'\" class=\"badge badge-success\">{{device.adminState}}</span> \n                                        <span *ngSwitchDefault class=\"badge badge-danger\">{{device.adminState}}</span> \n                                    </span>\n                                </td>\n                                <td class=\"text-center\">\n                                    <span [ngSwitch]=\"device.operatingState\">\n                                        <span *ngSwitchCase=\"'UP'\" class=\"badge badge-success\"> {{device.operatingState}}</span> \n                                        <span *ngSwitchCase=\"'DOWN'\" class=\"badge badge-danger\"> {{device.operatingState}}</span> \n                                        <span *ngSwitchDefault class=\"badge badge-danger\"> {{device.operatingState}}</span> \n                                    </span>\n                                </td>\n                                \n                                <td>\n                                   <span class=\"text-primary\">{{device.profileName}}</span>\n                                </td>\n                                <td>\n                                    <span class=\"text-primary\">{{device.serviceName}}</span>\n                                </td>\n                               \n                                <!-- <td>{{device.created | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                                <td>{{device.modified | date:'yyyy-MM-dd hh:mm:ss' }}</td> -->\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div class=\"card-footer text-muted p-1\">\n                <nav aria-label=\"navigation\">\n                    <ul class=\"pagination justify-content-end m-0\">\n                        <li class=\"page-item mr-2 mt-1\">\n                            <span class=\"align-middle\" i18n>items per page</span>\n                        </li>\n                        <li class=\"page-item mr-2 \">\n                            <select class=\"form-control\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                                <option value=\"5\">5</option>\n                                <option value=\"10\">10</option>\n                                <option value=\"20\">20</option>\n                            </select>\n                        </li>\n                        <li class=\"page-item mr-1\">\n                            <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\">\n                                <i class=\"fa fa-angle-double-left mr-1\"></i>\n                                <span i18n>Previous</span> \n                            </button>\n                        </li>\n                        <li class=\"page-item\" >\n                            <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > deviceList.length\">\n                                <span i18n>Next</span>\n                                <i class=\"fa fa-angle-double-right ml-1\"></i>\n                            </button>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright Â© 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Device } from '../../../contracts/v3/device';\nimport { MultiDeviceResponse } from '../../../contracts/v3/responses/device-response';\nimport { MetadataService } from '../../../services/metadata.service';\n\n@Component({\n  selector: 'app-device-combo-list',\n  templateUrl: './device-combo-list.component.html',\n  styleUrls: ['./device-combo-list.component.css']\n})\nexport class DeviceComboListComponent implements OnInit {\n\n  deviceList: Device[] = [];\n  deviceNamesSelectedStr: string = '';\n\n  private _deviceSelected: string[] = [];\n  @Input()\n  get deviceSelected(): string[] {return this._deviceSelected};\n  set deviceSelected(deviceNames: string[]) {\n    deviceNames.forEach((v,i) => {deviceNames[i] = v.trim()});\n    this._deviceSelected = deviceNames;\n    this.deviceNamesSelectedStr = this._deviceSelected.join(',');\n  }\n  @Output() deviceSelectedChange = new EventEmitter<string[]>();\n\n  private _singleDeviceSelected: string;\n  @Input()\n  get singleDeviceSelected(): string {return this._singleDeviceSelected};\n  set singleDeviceSelected(deviceName: string) {\n    if (!deviceName) {// if undefined or null\n      this._singleDeviceSelected = '';\n    } else {\n      this._singleDeviceSelected = deviceName.trim()\n    }\n    this.deviceNamesSelectedStr = this._singleDeviceSelected;\n  }\n  @Output() singleDeviceSelectedChange = new EventEmitter<string>();\n\n  visible: boolean = false;\n  @Input() validate: boolean = false;\n\n  //single-Selection Mode indicates that if true indicates single-selection mode , else multiple-selection\n  @Input() singleSelectionMode: boolean = false;\n\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n\n  constructor(private metaSvc: MetadataService) {\n    this._singleDeviceSelected = '';\n  }\n\n  ngOnInit(): void {\n    this.getDeviceListPagination();\n  }\n\n  getDeviceListPagination() {\n    this.metaSvc.allDevicesPagination(this.pageOffset, this.pageLimit).subscribe((data: MultiDeviceResponse) => {\n      this.deviceList = data.devices;\n    });\n  }\n\n  onSelectAll(event: any) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.deviceList.forEach(device => {\n        if (this.deviceSelected.includes(device.name)) {\n          return\n        }\n        this.deviceSelected.push(device.name)\n      });\n    } else {\n      this.deviceList.forEach((device) => {\n        if (this.deviceSelected.includes(device.name)) {\n          this.deviceSelected.splice(this.deviceSelected.indexOf(device.name),1)\n        }\n      })\n    }\n    this.deviceSelectedChange.emit(this.deviceSelected);\n    this.deviceNamesSelectedStr = this.deviceSelected.join(',');\n  }\n\n  isCheckedAll(): boolean {\n    let checkedAll = true;\n    this.deviceList.forEach((device) => {\n      if (!this.deviceSelected.includes(device.name)) {\n        checkedAll = false\n      }\n    })\n    return checkedAll\n  }\n\n  isChecked(deviceName: string): boolean {\n    if (this.singleSelectionMode)  {\n      return this.singleDeviceSelected === deviceName\n    }\n    return this.deviceSelected.includes(deviceName)\n  }\n\n  selectSingleDevice(event: any, deviceName: string) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.singleDeviceSelected = deviceName\n    } else {\n      this.singleDeviceSelected = '';\n    }\n    this.deviceNamesSelectedStr = this.singleDeviceSelected\n    this.singleDeviceSelectedChange.emit(this.singleDeviceSelected)\n  }\n\n  onSelectOne(event: any, deviceName: string) {\n    if (this.singleSelectionMode)  {\n      this.selectSingleDevice(event, deviceName)\n      return\n    }\n\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.deviceSelected.push(deviceName);\n    } else {\n      this.deviceSelected.splice(this.deviceSelected.indexOf(deviceName), 1);\n    }\n    this.deviceNamesSelectedStr = this.deviceSelected.join(',');\n    this.deviceSelectedChange.emit(this.deviceSelected);\n  }\n\n  onPageSelected() {\n    this.resetPagination();\n    this.getDeviceListPagination();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.getDeviceListPagination();\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.getDeviceListPagination();\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  close(event: any) {\n    this.visible = false;\n  }\n\n  toggle(event: any) {\n    event.stopPropagation();\n    if (this.visible) {\n      this.visible = false;\n      return\n    }\n    this.visible = true;\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright Â© 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"combo-shielder\" *ngIf=\"visible\" (click)=\"close($event)\"></div>\n <div class=\"combo\">\n    <div class=\"input-group has-validation\" (mousedown)=\"toggle($event)\">\n        <input type=\"text\" class=\"form-control\" name=\"selectedProfiles\" disabled [(ngModel)]=\"selectedProfilesStr\">\n        <div class=\"input-group-append\">\n            <span class=\"input-group-text\" role=\"button\"><i class=\"fa fa-chevron-down\"></i></span>\n        </div> \n    </div>\n    <div [style.display]=\"!visible ? 'none': ''\" class=\"combo-body shadow rounded\">\n       <app-device-profile-list\n       [toolbars]=\"false\"\n       [associatedDeviceColumn]=\"false\"\n       [enableSelectAll]=\"!singleSelectionMode\"\n       [multiProfilesSelected]=\"selectedProfiles\"\n       (multipleProfileSelectedEvent)=\"onMultipleProfileSelectedEvent($event)\"\n       [singleProfileSelected]=\"singleProfileSelectedObject\"\n       (singleProfileSelectedEvent)=\"onSingleProfileSelectedEvent($event)\"\n       ></app-device-profile-list> \n    </div>\n</div>\n","/*******************************************************************************\n * Copyright Â© 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit ,Input, Output, EventEmitter } from '@angular/core';\n\nimport { DeviceProfile } from '../../../contracts/v3/device-profile';\n\n@Component({\n  selector: 'app-device-profile-combo-list',\n  templateUrl: './device-profile-combo-list.component.html',\n  styleUrls: ['./device-profile-combo-list.component.css']\n})\nexport class DeviceProfileComboListComponent implements OnInit {\n\n  selectedProfilesStr: string = \"\";\n\n  private _selectedProfiles: string[]= [];\n  @Input()\n  get selectedProfiles(): string[] { return this._selectedProfiles }\n  set selectedProfiles(profileNames : string[]) {\n    profileNames.forEach((v,i) => {profileNames[i] = v.trim()});\n    this._selectedProfiles = profileNames;\n    this.selectedProfilesStr = this._selectedProfiles.join(',');\n  }\n  @Output() deviceProfileSelectedEvent = new EventEmitter<string[]>();\n\n  singleProfileSelectedObject: DeviceProfile = {} as DeviceProfile\n  private  _singleProfileSelected: string\n  @Input()\n  get singleProfileSelected(): string {return this._singleProfileSelected}\n  set singleProfileSelected(profileName: string) {\n    if (!profileName) {//if value is undefined/null\n      this._singleProfileSelected = ''\n    } else {\n      this._singleProfileSelected = profileName.trim()\n    }\n    this.selectedProfilesStr = this._singleProfileSelected\n    this.singleProfileSelectedObject = {name: this._singleProfileSelected} as DeviceProfile\n  }\n  @Output() singleProfileSelectedChange = new EventEmitter<string>();\n\n  visible: boolean = false;\n  @Input() validate: boolean = false;\n\n  //single-selection Mode indecates that if true indicates single selection, else multiple selection.\n  @Input() singleSelectionMode: boolean = false;\n\n  constructor() {\n    this._singleProfileSelected = ''\n  }\n\n  ngOnInit(): void {}\n\n  onMultipleProfileSelectedEvent(profiles: string[]) {\n    this.selectedProfiles = profiles;\n    this.selectedProfilesStr = this.selectedProfiles.join(',');\n    this.deviceProfileSelectedEvent.emit(this.selectedProfiles)\n  }\n\n  onSingleProfileSelectedEvent(profile: DeviceProfile) {\n    if (!profile) {\n      this.singleProfileSelected = ''\n    } else {\n      this.singleProfileSelected = profile.name\n    }\n    this.selectedProfilesStr = this.singleProfileSelected\n    this.singleProfileSelectedChange.emit(this.singleProfileSelected)\n  }\n\n  close(event: any) {\n    this.visible = false;\n  }\n\n  toggle(event: any) {\n    event.stopPropagation();\n    if (this.visible) {\n      this.visible = false;\n      return\n    }\n    this.visible = true;\n  }\n\n}\n"],"names":["i0","$event","_r3","ctx_r2","close","_r7","ctx_r6","onSelectAll","ctx_r4","isCheckedAll","device_r8","adminState","operatingState","_r20","$implicit","ctx_r19","onSelectOne","name","DeviceComboListComponent_div_7_tr_30_span_13_Template","DeviceComboListComponent_div_7_tr_30_span_14_Template","DeviceComboListComponent_div_7_tr_30_span_17_Template","DeviceComboListComponent_div_7_tr_30_span_18_Template","DeviceComboListComponent_div_7_tr_30_span_19_Template","ctx_r5","isChecked","id","description","labels","profileName","serviceName","DeviceComboListComponent_div_7_input_12_Template","DeviceComboListComponent_div_7_tr_30_Template","_r22","ctx_r21","pageLimit","ctx_r23","onPageSelected","ctx_r24","prePage","ctx_r25","nextPage","ctx_r1","singleSelectionMode","deviceList","pagination","length","DeviceComboListComponent","deviceSelected","this","_deviceSelected","deviceNames","forEach","v","i","trim","deviceNamesSelectedStr","join","singleDeviceSelected","_singleDeviceSelected","deviceName","constructor","metaSvc","deviceSelectedChange","EventEmitter","singleDeviceSelectedChange","visible","validate","pageOffset","ngOnInit","getDeviceListPagination","allDevicesPagination","subscribe","data","devices","event","target","checked","device","includes","push","splice","indexOf","emit","checkedAll","selectSingleDevice","resetPagination","setPagination","n","toggle","stopPropagation","static","t","i1","_angular_core__WEBPACK_IMPORTED_MODULE_1__","Xpm","selectors","inputs","outputs","decls","vars","consts","i18n_0","$localize","DeviceComboListComponent_div_0_Template","ctx","DeviceComboListComponent_div_7_Template","_r2","DeviceProfileComboListComponent","selectedProfiles","_selectedProfiles","profileNames","selectedProfilesStr","singleProfileSelected","_singleProfileSelected","singleProfileSelectedObject","deviceProfileSelectedEvent","singleProfileSelectedChange","onMultipleProfileSelectedEvent","profiles","onSingleProfileSelectedEvent","profile","template","rf","DeviceProfileComboListComponent_div_0_Template"],"sourceRoot":"webpack:///"}