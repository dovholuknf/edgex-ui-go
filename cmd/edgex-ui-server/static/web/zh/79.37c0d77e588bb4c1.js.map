{"version":3,"file":"79.37c0d77e588bb4c1.js","mappings":"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","sources":["./src/app/app-service/app-service.component.ts","./src/app/app-service/app-service.component.html","./src/app/app-service/app-service-list/app-service-list.component.html","./src/app/app-service/app-service-list/app-service-list.component.ts","./src/app/app-service/app-service-configurable/trigger/trigger.component.html","./src/app/app-service/app-service-configurable/trigger/trigger.component.ts","./src/app/app-service/app-service-configurable/insecure-secrets/insecure-secrets.component.ts","./src/app/app-service/app-service-configurable/insecure-secrets/insecure-secrets.component.html","./src/app/app-service/app-service-configurable/store-and-forward/store-and-forward.component.ts","./src/app/app-service/app-service-configurable/store-and-forward/store-and-forward.component.html","./src/app/directives/drag-highlight.directive.ts","./src/app/app-service/app-service-configurable/pipeline-function/httpexport/httpexport.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/httpexport/httpexport.component.html","./src/app/app-service/app-service-configurable/pipeline-function/add-tags/add-tags.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/add-tags/add-tags.component.html","./src/app/app-service/app-service-configurable/pipeline-function/batch/batch.component.html","./src/app/app-service/app-service-configurable/pipeline-function/batch/batch.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/filter-by-device-name/filter-by-device-name.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/filter-by-device-name/filter-by-device-name.component.html","./src/app/app-service/app-service-configurable/pipeline-function/filter-by-profile-name/filter-by-profile-name.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/filter-by-profile-name/filter-by-profile-name.component.html","./src/app/app-service/app-service-configurable/pipeline-function/filter-by-source-name/filter-by-source-name.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/filter-by-source-name/filter-by-source-name.component.html","./src/app/app-service/app-service-configurable/pipeline-function/filter-by-resource-name/filter-by-resource-name.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/filter-by-resource-name/filter-by-resource-name.component.html","./src/app/app-service/app-service-configurable/pipeline-function/transform/transform.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/transform/transform.component.html","./src/app/app-service/app-service-configurable/pipeline-function/compress/compress.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/compress/compress.component.html","./src/app/app-service/app-service-configurable/pipeline-function/encrypt/encrypt.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/encrypt/encrypt.component.html","./src/app/app-service/app-service-configurable/pipeline-function/mqttexport/mqttexport.component.html","./src/app/app-service/app-service-configurable/pipeline-function/mqttexport/mqttexport.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/push-to-core/push-to-core.component.html","./src/app/app-service/app-service-configurable/pipeline-function/push-to-core/push-to-core.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/set-response-data/set-response-data.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/set-response-data/set-response-data.component.html","./src/app/app-service/app-service-configurable/pipeline-function/jsonlogic/jsonlogic.component.ts","./src/app/app-service/app-service-configurable/pipeline-function/jsonlogic/jsonlogic.component.html","./src/app/app-service/app-service-configurable/pipeline-function/pipeline-function.component.html","./src/app/app-service/app-service-configurable/pipeline-function/pipeline-function.component.ts","./src/app/app-service/app-service-configurable/pipeline/pipeline.component.html","./src/app/app-service/app-service-configurable/pipeline/pipeline.component.ts","./src/app/app-service/app-service-configurable/app-service-configurable.component.html","./src/app/app-service/app-service-configurable/app-service-configurable.component.ts","./src/app/guards/health/registry-center-alive.guard.ts","./src/app/app-service/app-service-routing.module.ts","./src/app/app-service/app-service.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-app-service',\n  templateUrl: './app-service.component.html',\n  styleUrls: ['./app-service.component.css']\n})\nexport class AppServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n     <div class=\"card-header\">\n         <i class=\"fa fa-list mr-2 text-danger\"></i>\n         <span class=\"font-weight-bold\" i18n>App Service List</span>\n     </div>\n     <div class=\"card-body\">\n        <ul class=\"list-group p-0\">\n            <li *ngFor=\"let appSvc of appServiceList\" class=\"list-group-item list-group-item-action list-group-item-light\">\n                <div class=\"media\">\n                    <div class=\"align-self-center mr-3\">\n                        <i class=\"fa fa-tags fa-2x text-secondary\"></i>  \n                    </div>\n                    <div class=\"media-body\">\n                        <div class=\"mt-0 mb-3\">\n                            <h5 class=\"d-inline mr-3 align-middle text-dark\">\n                                {{appSvc.ServiceId}}\n                            </h5>                            \n                        </div>\n                        <div>\n                            <span class=\"badge badge-info mr-3\" role=\"button\" >port {{appSvc.Port}}</span>\n        \n                            <span class=\"badge badge-secondary float-right\" role=\"button\" routerLink=\"../app-service-configurable\" [queryParams]=\"{'appSvcKey':appSvc.ServiceId}\">\n                                <i class=\"fa fa-cog mr-1\"></i>\n                                <span i18n>Configurable</span>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </li>\n        </ul>\n     </div>\n </div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { RegistryCenterService } from '../../services/registry-center.service';\nimport { ServiceEndpoint } from '../../contracts/v3/register-center/service-endpoint';\n\n@Component({\n  selector: 'app-app-service-list',\n  templateUrl: './app-service-list.component.html',\n  styleUrls: ['./app-service-list.component.css']\n})\nexport class AppServiceListComponent implements OnInit {\n\n  appServiceList: ServiceEndpoint[] = [];\n  constructor(private registrySvc: RegistryCenterService) { }\n\n  ngOnInit(): void {\n    this.getAllAppSvc();\n  }\n\n  getAllAppSvc() {\n    this.registrySvc.getAllAppSvc().subscribe((svcEndpoints: ServiceEndpoint[]) => {\n      this.appServiceList = [];\n      svcEndpoints.forEach(svc => {\n        if (svc.ServiceId.startsWith('app-')) {\n          this.appServiceList.push(svc)\n        }\n      });\n    })\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div>\n    <div class=\"alert alert-info mb-3\" role=\"alert\">\n        <small>\n            <i class=\"fa fa-info-circle mr-1\"></i>\n            <span i18n>\n                App service needs to restart when Trigger is changed, so this section only lets user to know what Trigger the app service used right now! <br>\n                And Next, UI will support user to change the Trigger section.\n            </span>\n        </small>\n    </div>\n    \n    <form>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">\n                <span i18n>Type</span>\n                <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                    data-content=\"Trigger type\"></span>\n            </label>\n            <div class=\"col-sm-10\">\n                <select class=\"custom-select\"  name=\"Type\" [(ngModel)]=\"configTrigger.Type\" (ngModelChange)=\"onTriggerSelected()\">\n                    <option value=\"edgex-messagebus\">edgex-messagebus</option>\n                    <option value=\"external-mqtt\">external-mqtt</option>\n                    <option value=\"http\">http</option>\n                    <!-- <option value=\"custom\">custom</option> -->\n                </select>\n            </div>\n        </div>\n    </form>\n\n    <div *ngIf=\"configTrigger.Type === 'edgex-messagebus'\" class=\"card mb-3\">\n        <div class=\"card-header\">\n            <i class=\"fa fa-tags mr-2 text-danger\"></i>\n            <span class=\"font-weight-bold\" i18n>EdgexMessageBus Trigger</span>\n        </div>\n        <div class=\"card-body\">\n            <form>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">\n                        <span i18n>Type</span>\n                        <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                        data-content=\"EdgeX Message Bus type\"></span>\n                    </label>\n                    <div class=\"col-sm-10\">\n                        <select class=\"custom-select\"  name=\"Type\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.Type\">\n                            <option value=\"redis\">redis</option>\n                            <option value=\"mqtt\">mqtt</option>\n                            <option value=\"zero\">zero</option>\n                        </select>\n                    </div>\n                </div>\n            </form>\n            <div class=\"row\">\n                <div class=\"col-sm-6 col-md-6\">\n                    <div class=\"card mb-3\">\n                        <div class=\"card-header font-weight-bold\">\n                            <i class=\"fa fa-tag mr-2 text-danger\"></i>\n                            <span i18n>Subscribe Host</span> \n                        </div>\n                        <div class=\"card-body\">\n                            <form>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\" i18n>Host</label>\n                                    <div class=\"col-sm-9\">\n                                      <input type=\"text\" class=\"form-control\" name=\"Host\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.SubscribeHost.Host\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\" i18n>Port</label>\n                                    <div class=\"col-sm-9\">\n                                      <input type=\"text\" class=\"form-control\" name=\"Port\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.SubscribeHost.Port\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\" i18n>Protocol</label>\n                                    <div class=\"col-sm-9\">\n                                      <input type=\"text\" class=\"form-control\" name=\"Protocol\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.SubscribeHost.Protocol\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-3 col-md-3 col-form-label text-nowrap text-truncate\" i18n>SubscribeTopics</label>\n                                    <div class=\"col-sm-9 col-md-9\">\n                                      <input type=\"text\" class=\"form-control\" name=\"SubscribeTopics\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.SubscribeHost.SubscribeTopics\">\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-6 col-md-6\">\n                    <div class=\"card mb-3\">\n                        <div class=\"card-header font-weight-bold\">\n                            <i class=\"fa fa-tag mr-2 text-danger\"></i>\n                            <span>Publish Host</span> \n                        </div>\n                        <div class=\"card-body\">\n                            <form>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\" i18n>Host</label>\n                                    <div class=\"col-sm-9\">\n                                      <input type=\"text\" class=\"form-control\" name=\"Host\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.PublishHost.Host\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\" i18n>Port</label>\n                                    <div class=\"col-sm-9\">\n                                      <input type=\"text\" class=\"form-control\" name=\"Port\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.PublishHost.Port\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\" i18n>Protocol</label>\n                                    <div class=\"col-sm-9\">\n                                      <input type=\"text\" class=\"form-control\" name=\"Protocol\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.PublishHost.Protocol\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-3 col-form-label text-nowrap text-truncate\" i18n>PublishTopic</label>\n                                    <div class=\"col-sm-9\">\n                                      <input type=\"text\" class=\"form-control\" name=\"PublishTopic\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.PublishHost.PublishTopic\">\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-md-12\">\n                    <div class=\"card\">\n                        <div class=\"card-header font-weight-bold\">\n                            <i class=\"fa fa-tag mr-2 text-danger\"></i>\n                            <span i18n>Optional</span>\n                        </div>\n                        <div class=\"card-body\">\n                            <form>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-2 col-form-label\">ClientId</label>\n                                    <div class=\"col-sm-10\">\n                                      <input type=\"text\" class=\"form-control\" name=\"ClientId\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.Optional.ClientId\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-2 col-form-label\">Qos</label>\n                                    <div class=\"col-sm-10\">\n                                      <input type=\"text\" class=\"form-control\" name=\"Qos\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.Optional.Qos\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-2 col-form-label\">KeepAlive</label>\n                                    <div class=\"col-sm-10\">\n                                      <input type=\"text\" class=\"form-control\" name=\"KeepAlive\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.Optional.KeepAlive\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-2 col-form-label\">Retained</label>\n                                    <div class=\"col-sm-10\">\n                                        <select class=\"custom-select\"  name=\"Retain\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.Optional.Retained\">\n                                            <option value=\"false\">false</option>\n                                            <option value=\"true\">true</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-2 col-form-label\">AutoReconnect</label>\n                                    <div class=\"col-sm-10\">\n                                        <select class=\"custom-select\"  name=\"AutoReconnect\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.Optional.AutoReconnect\">\n                                            <option value=\"false\">false</option>\n                                            <option value=\"true\">true</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-2 col-form-label\">ConnectTimeout</label>\n                                    <div class=\"col-sm-10\">\n                                      <input type=\"text\" class=\"form-control\" name=\"ConnectTimeout\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.Optional.ConnectTimeout\">\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-2 col-form-label\">authmode</label>\n                                    <div class=\"col-sm-10\">\n                                        <select class=\"custom-select\"  name=\"authmode\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.Optional.authmode\">\n                                            <option value=\"none\">none</option>\n                                            <option value=\"usernamepassword\">usernamepassword</option>\n                                            <option value=\"clientcert\">clientcert</option>\n                                            <option value=\"cacert\">cacert</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-2 col-form-label\">SkipCertVerify</label>\n                                    <div class=\"col-sm-10\">\n                                        <select class=\"custom-select\"  name=\"SkipCertVerify\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.Optional.SkipCertVerify\">\n                                            <option value=\"false\">false</option>\n                                            <option value=\"true\">true</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label class=\"col-sm-2 col-form-label\">secretname</label>\n                                    <div class=\"col-sm-10\">\n                                      <input type=\"text\" class=\"form-control\" name=\"secretname\" [(ngModel)]=\"configTrigger.EdgexMessageBus!.Optional.secretname\">\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div *ngIf=\"configTrigger.Type === 'external-mqtt'\" class=\"card mb-3\">\n        <div class=\"card-header\">\n            <i class=\"fa fa-tags mr-2 text-danger\"></i>\n            <span class=\"font-weight-bold\">External MQTT Trigger</span>\n        </div>\n        <div class=\"card-body\">\n            <form>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">Url</label>\n                    <div class=\"col-sm-10\">\n                      <input type=\"text\" class=\"form-control\" name=\"Url\" [(ngModel)]=\"configTrigger.ExternalMqtt!.Url\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">SubscribeTopics</label>\n                    <div class=\"col-sm-10\">\n                      <input type=\"text\" class=\"form-control\" name=\"SubscribeTopics\" [(ngModel)]=\"configTrigger.ExternalMqtt!.SubscribeTopics\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">PublishTopic</label>\n                    <div class=\"col-sm-10\">\n                      <input type=\"text\" class=\"form-control\" name=\"PublishTopic\" [(ngModel)]=\"configTrigger.ExternalMqtt!.PublishTopic\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">ClientId</label>\n                    <div class=\"col-sm-10\">\n                      <input type=\"text\" class=\"form-control\" name=\"ClientId\" [(ngModel)]=\"configTrigger.ExternalMqtt!.ClientId\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">ConnectTimeout</label>\n                    <div class=\"col-sm-10\">\n                      <input type=\"text\" class=\"form-control\" name=\"ConnectTimeout\" [(ngModel)]=\"configTrigger.ExternalMqtt!.ConnectTimeout\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">AutoReconnect</label>\n                    <div class=\"col-sm-10\">\n                        <select class=\"custom-select\"  name=\"AutoReconnect\" [(ngModel)]=\"configTrigger.ExternalMqtt!.AutoReconnect\">\n                            <option value=\"false\">false</option>\n                            <option value=\"true\">true</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">KeepAlive</label>\n                    <div class=\"col-sm-10\">\n                      <input type=\"text\" class=\"form-control\" name=\"KeepAlive\" [(ngModel)]=\"configTrigger.ExternalMqtt!.KeepAlive\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">QoS</label>\n                    <div class=\"col-sm-10\">\n                      <input type=\"text\" class=\"form-control\" name=\"QoS\" [(ngModel)]=\"configTrigger.ExternalMqtt!.QoS\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">Retain</label>\n                    <div class=\"col-sm-10\">\n                        <select class=\"custom-select\"  name=\"Retain\" [(ngModel)]=\"configTrigger.ExternalMqtt!.Retain\">\n                            <option value=\"false\">false</option>\n                            <option value=\"true\">true</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">SkipCertVerify</label>\n                    <div class=\"col-sm-10\">\n                        <select class=\"custom-select\"  name=\"SkipCertVerify\" [(ngModel)]=\"configTrigger.ExternalMqtt!.SkipCertVerify\">\n                            <option value=\"false\">false</option>\n                            <option value=\"true\">true</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">SecretPath</label>\n                    <div class=\"col-sm-10\">\n                      <input type=\"text\" class=\"form-control\" name=\"SecretPath\" [(ngModel)]=\"configTrigger.ExternalMqtt!.SecretPath\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">AuthMode</label>\n                    <div class=\"col-sm-10\">\n                        <select class=\"custom-select\"  name=\"AuthMode\" [(ngModel)]=\"configTrigger.ExternalMqtt!.AuthMode\">\n                            <option value=\"none\">none</option>\n                            <option value=\"usernamepassword\">usernamepassword</option>\n                            <option value=\"clientcert\">clientcert</option>\n                            <option value=\"cacert\">cacert</option>\n                        </select>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div *ngIf=\"configTrigger.Type === 'http'\" class=\"card\">\n        <div class=\"card-header\">\n            <i class=\"fa fa-tags mr-2 text-danger\"></i>\n            <span class=\"font-weight-bold\" i18n>HTTP Trigger</span>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"alert alert-info mb-3\" role=\"alert\">\n                <small>\n                    <i class=\"fa fa-info-circle mr-1\"></i> \n                    <span i18n>no optional fields needs to setup for http trigger</span> \n                </small>\n            </div>\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges , Input, Output, EventEmitter} from '@angular/core';\nimport { Trigger, Trigger_EdgexMessageBus, Trigger_ExternalMqtt, Trigger_HTTP, EdgexMessageBusOptional } from '../../../contracts/v3/appsvc/trigger';\n\n@Component({\n  selector: 'app-appsvc-trigger',\n  templateUrl: './trigger.component.html',\n  styleUrls: ['./trigger.component.css']\n})\nexport class TriggerComponent implements OnInit, OnChanges {\n\n  private _configTrigger: Trigger = {} as Trigger;\n  // using get and set method to avoid overwriting on init value of InsecureSecrets when parent component was binding on.\n  @Input()\n  get configTrigger(): Trigger {return this._configTrigger};\n  set configTrigger(triger: Trigger) {Object.assign(this._configTrigger, triger)}\n  @Output() configTriggerChange = new EventEmitter<Trigger>();\n\n  constructor() {\n    this.configTrigger = {} as Trigger;\n    this.configTrigger.EdgexMessageBus = {Optional: {} , SubscribeHost: {},PublishHost: {}} as Trigger_EdgexMessageBus;\n    this.configTrigger.EdgexMessageBus!.Optional = {} as EdgexMessageBusOptional;\n    this.configTrigger.ExternalMqtt = {} as Trigger_ExternalMqtt;\n    this.configTrigger.HTTP = {} as Trigger_HTTP;\n  }\n\n  ngOnInit(): void {\n    this.renderPopoverComponent()\n  }\n\n  ngOnChanges(): void {\n    this.configTriggerChange.emit(this.configTrigger);\n  }\n\n  renderPopoverComponent() {\n    window.setTimeout(()=>{\n        $('[data-toggle=\"popover\"]').popover({\n            trigger: 'hover'\n        });\n    },200)\n  }\n\n  onTriggerSelected() {\n    this.renderPopoverComponent();\n  }\n\n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { InsecureSecrets } from '../../../contracts/v3/appsvc/insecure-secrets';\nimport { Writable } from \"../../../contracts/v3/appsvc/writable\";\nimport { RegistryCenterService } from \"../../../services/registry-center.service\";\nimport { MessageService } from \"../../../message/message.service\";\n\n@Component({\n  selector: 'app-appsvc-insecure-secrets',\n  templateUrl: './insecure-secrets.component.html',\n  styleUrls: ['./insecure-secrets.component.css']\n})\nexport class InsecureSecretsComponent implements OnInit, OnChanges {\n\n  @Input() appServiceKey: string = ''\n\n  private _insecureSecrets: InsecureSecrets = {} as InsecureSecrets;\n  // using get and set method to avoid overwriting on init value of InsecureSecrets when parent component was binding on.\n  @Input()\n  get insecureSecrets(): InsecureSecrets {return this._insecureSecrets};\n  set insecureSecrets(is: InsecureSecrets) {\n    Object.assign(this._insecureSecrets, is)\n  }\n  @Output() insecureSecretsChange = new EventEmitter<InsecureSecrets>();\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private registrySvc: RegistryCenterService,\n    private msgSvc: MessageService) {\n    this.insecureSecrets = {\n      DB: {Secrets: {}},\n      mqtt: {Secrets: {}} ,\n      http: {Secrets: {}},\n      AES: {Secrets:{}}\n    } as InsecureSecrets;\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.insecureSecretsChange.emit(this.insecureSecrets)\n  }\n\n  save() {\n    let writableRequestObj = {} as Writable;\n    writableRequestObj.InsecureSecrets = this.insecureSecrets\n    this.registrySvc.deployToConsul({'Writable': writableRequestObj}, this.appServiceKey).subscribe(()=>{\n      this.msgSvc.success('deploy InsecureSecrets configuration',`service: ${this.appServiceKey}`);\n      this.router.navigate(['../app-service-list'],{relativeTo: this.route})\n    })\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-edit font-weight-bolder text-info mr-1\"></i>\n        <span i18n>Edit InsecureSecrets</span>\n        <span class=\"float-right\">\n            <button class=\"btn btn-sm btn-success\" (click)=\"save()\" i18n>Save</button>\n        </span>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"alert alert-info mb-3\" role=\"alert\">\n        <small>\n            <i class=\"fa fa-info-circle  mr-1\"></i> \n            <span i18n>Insecure Secrets that are used when running in non-secure mode, i.e. when Vault isn't available. This is a dynamic map of configuration, so can empty if no secrets are used or can have as many or few user-defined secrets. It simulates a Secret Store in non-secure mode. </span>\n        </small>\n      </div>\n      <div class=\"card mb-3\">\n          <div class=\"card-header\">\n              <i class=\"fa fa-tags text-danger mr-2\"></i>\n              <span class=\"font-weight-bold\">DB</span>\n          </div>\n          <div class=\"card-body\">\n              <form>\n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">path</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"path\" [(ngModel)]=\"insecureSecrets.DB.Path\">\n                      </div>\n                  </div>\n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">username</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"insecureSecrets.DB.Secrets.username\">\n                      </div>\n                  </div>\n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">password</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"password\" [(ngModel)]=\"insecureSecrets.DB.Secrets.password\">\n                      </div>\n                  </div>\n              </form>\n          </div>\n       </div>\n      \n       <div class=\"card mb-3\" >\n          <div class=\"card-header\">\n              <i class=\"fa fa-tags text-danger mr-2\"></i>\n              <span class=\"font-weight-bold\">mqtt</span>\n          </div>\n          <div class=\"card-body\">\n              <form>\n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">path</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"path\" [(ngModel)]=\"insecureSecrets.mqtt.Path\">\n                      </div>\n                  </div>\n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">username</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"insecureSecrets.mqtt.Secrets.username\">\n                      </div>\n                  </div>\n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">password</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"password\" [(ngModel)]=\"insecureSecrets.mqtt.Secrets.password\">\n                      </div>\n                  </div>\n      \n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">cacert</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"cacert\" [(ngModel)]=\"insecureSecrets.mqtt.Secrets.cacert\">\n                      </div>\n                  </div>\n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">clientcert</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"clientcert\" [(ngModel)]=\"insecureSecrets.mqtt.Secrets.clientcert\">\n                      </div>\n                  </div>\n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">clientkey</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"clientkey\" [(ngModel)]=\"insecureSecrets.mqtt.Secrets.clientkey\">\n                      </div>\n                  </div>\n              </form>\n          </div>\n       </div>\n      \n       <div class=\"card mb-3\">\n          <div class=\"card-header\">\n              <i class=\"fa fa-tags text-danger mr-2\"></i>\n              <span class=\"font-weight-bold\">http</span>\n          </div>\n          <div class=\"card-body\">\n              <form>\n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">path</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"path\" [(ngModel)]=\"insecureSecrets.http.Path\">\n                      </div>\n                  </div>\n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">headervalue</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"headervalue\" [(ngModel)]=\"insecureSecrets.http.Secrets.headervalue\">\n                      </div>\n                  </div>\n              </form>\n          </div>\n       </div>\n      \n       <div class=\"card mb-3\">\n          <div class=\"card-header\">\n              <i class=\"fa fa-tags text-danger mr-2\"></i>\n              <span class=\"font-weight-bold\">AES</span>\n          </div>\n          <div class=\"card-body\">\n              <form>\n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">path</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"path\" [(ngModel)]=\"insecureSecrets.AES.Path\">\n                      </div>\n                  </div>\n                  <div class=\"form-group row\">\n                      <label class=\"col-sm-2 col-form-label\">key</label>\n                      <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"key\" [(ngModel)]=\"insecureSecrets.AES.Secrets.key\">\n                      </div>\n                  </div>\n              </form>\n          </div>\n       </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { StoreAndForward } from '../../../contracts/v3/appsvc/store-and-forward';\nimport { Writable } from \"../../../contracts/v3/appsvc/writable\";\nimport { RegistryCenterService } from \"../../../services/registry-center.service\";\nimport { MessageService } from \"../../../message/message.service\";\n\n@Component({\n  selector: 'app-appsvc-store-and-forward',\n  templateUrl: './store-and-forward.component.html',\n  styleUrls: ['./store-and-forward.component.css']\n})\nexport class StoreAndForwardComponent implements OnInit, OnChanges {\n\n  @Input() appServiceKey: string = ''\n  @Input() storeAndForward: StoreAndForward\n  @Output() storeAndForwardChange = new EventEmitter<StoreAndForward>();\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private registrySvc: RegistryCenterService,\n    private msgSvc: MessageService) {\n    this.storeAndForward = {\n      Enabled: 'false'\n    } as StoreAndForward\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.storeAndForwardChange.emit(this.storeAndForward)\n  }\n\n  save() {\n    let writableRequestObj = {} as Writable;\n    writableRequestObj.StoreAndForward = this.storeAndForward\n    this.registrySvc.deployToConsul({'Writable': writableRequestObj}, this.appServiceKey).subscribe(()=>{\n      this.msgSvc.success('deploy StoreAndForward configuration',`service: ${this.appServiceKey}`);\n      this.router.navigate(['../app-service-list'],{relativeTo: this.route})\n    })\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-edit font-weight-bolder text-info mr-1\"></i>\n        <span i18n>Edit StoreAndForward</span>\n        <span class=\"float-right\">\n            <button class=\"btn btn-sm btn-success\" (click)=\"save()\" i18n>Save</button>\n        </span>\n    </div>\n    <div class=\"card-body\">\n        <form>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-2 col-form-label\">\n                    <span>Enabled</span>\n                    <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                    data-content=\"capability allows for export functions to persist data on failure and for the export of the data to be retried at a later time.\"></span>\n                </label>\n                <div class=\"col-sm-10\">\n                    <select class=\"custom-select\" name=\"Enabled\" [(ngModel)]=\"storeAndForward.Enabled\">\n                        <option value=\"false\">false</option>\n                        <option value=\"true\">true</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-2 col-form-label\">\n                    <span>MaxRetryCount</span>\n                    <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                    data-content='pure number'></span>\n                </label>\n                <div class=\"col-sm-10\">\n                      <input type=\"text\" class=\"form-control\" name=\"MaxRetryCount\" [(ngModel)]=\"storeAndForward.MaxRetryCount\">\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-2 col-form-label\">\n                    <span>RetryInterval</span>\n                    <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                    data-content='\n                    The format of this field is to be an unsigned integer followed by a unit,&lt;br&gt;\n                    which may be \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\" representing nanoseconds, microseconds, milliseconds, seconds, minutes or hours. Eg, \"100ms\", \"24h\"'></span>\n                </label>\n                <div class=\"col-sm-10\">\n                      <input type=\"text\" class=\"form-control\" name=\"RetryInterval\" [(ngModel)]=\"storeAndForward.RetryInterval\">\n                </div>\n            </div>\n        </form>        \n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\n import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appDragHighlight]'\n})\nexport class DragHighlightDirective {\n\n  classes = \"border border-info shadow-lg bg-white rounded\"\n\n  constructor(private el: ElementRef) { }\n\n  @HostListener('dragover',['$event']) ondragover(event: any) {\n    event.preventDefault();\n    let classList = this.classes.split(' ')\n    classList.forEach((v) => {\n      this.el.nativeElement.classList.add(v)\n    })\n  }\n\n  @HostListener('dragenter',['$event']) ondragenter(event: any) {}\n\n  @HostListener('dragend',['$event']) ondragend(event: any) {}\n\n  @HostListener('dragleave',['$event']) ondragleave(event: any) {\n    let classList = this.classes.split(' ')\n    classList.forEach((v) => {\n      this.el.nativeElement.classList.remove(v)\n    })\n  }\n\n  @HostListener('dragexit',['$event']) ondragexit(event: any) {}\n\n  @HostListener('drop',['$event']) ondrop(event: any) {\n    let classList = this.classes.split(' ')\n    classList.forEach((v) => {\n      this.el.nativeElement.classList.remove(v)\n    })\n  }\n}\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { HTTPExport } from '../../../../contracts/v3/appsvc/functions';\n\n@Component({\n  selector: 'app-appsvc-function-httpexport',\n  templateUrl: './httpexport.component.html',\n  styleUrls: ['./httpexport.component.css']\n})\nexport class HTTPExportComponent implements OnInit, OnChanges {\n\n  @Input() httpExport: HTTPExport\n  @Output() httpExportChange = new EventEmitter<HTTPExport>()\n\n  constructor() {\n    this.httpExport = {\n      Parameters: {\n        Method: 'post',\n        MimeType: 'application/json',\n        PersistOnError: 'false',\n        ContinueOnSendError: 'true',\n        ReturnInputData: 'false'\n      }\n    } as HTTPExport\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.httpExportChange.emit(this.httpExport)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">Method</label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"Method\" [(ngModel)]=\"httpExport.Parameters.Method\">\n                <option value=\"post\">post</option>\n                <option value=\"put\">put</option>\n                <!-- <option value=\"GET\">GET</option>\n                <option value=\"POST\">POST</option>\n                <option value=\"PUT\">PUT</option>\n                <option value=\"DELETE\">DELETE</option>\n                <option value=\"PATCH\">PATCH</option>\n                <option value=\"HEAD\">HEAD</option>\n                <option value=\"TRACE\">TRACE</option>\n                <option value=\"CONNECT\">CONNECT</option> -->\n            </select>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">Url</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"Url\" [(ngModel)]=\"httpExport.Parameters.Url\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>MimeType</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"Optional mime type for the data. Defaults to application/json if not set.\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"MimeType\" [(ngModel)]=\"httpExport.Parameters.MimeType\">\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>PersistOnError</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"Indicates to persist the data if the POST fails. Store and Forward must also be enabled if this is set to 'true'.\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"PersistOnError\" [(ngModel)]=\"httpExport.Parameters.PersistOnError\">\n                <option value=\"false\">false</option>\n                <option value=\"true\">true</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-3 col-form-label\">\n            <span>ContinueOnSendError</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"For chained multi destination exports, if true continues after send error so next export function executes.\"></span>\n        </label>\n        <div class=\"col-sm-9\">\n            <select class=\"custom-select\"  name=\"ContinueOnSendError\" [(ngModel)]=\"httpExport.Parameters.ContinueOnSendError\">\n                <option value=\"false\">false</option>\n                <option value=\"true\">true</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>ReturnInputData</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"For chained multi destination exports if true, passes the input data to next export function.\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"ReturnInputData\" [(ngModel)]=\"httpExport.Parameters.ReturnInputData\">\n                <option value=\"false\">false</option>\n                <option value=\"true\">true</option>\n            </select>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>HeaderName</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"(Optional) Name of the header key to add to the HTTP header\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"HeaderName\" [(ngModel)]=\"httpExport.Parameters.HeaderName\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>SecretPath</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"(Optional) Path in the secret in the Secret Store where to header value is stored.\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"SecretPath\" [(ngModel)]=\"httpExport.Parameters.SecretPath\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>SecretName</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"(Optional) Name of the secret for the header value in the Secret Store.\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"SecretName\" [(ngModel)]=\"httpExport.Parameters.SecretName\">\n        </div>\n    </div>\n</form>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { AddTags } from '../../../../contracts/v3/appsvc/functions';\n\n@Component({\n  selector: 'app-appsvc-function-add-tags',\n  templateUrl: './add-tags.component.html',\n  styleUrls: ['./add-tags.component.css']\n})\nexport class AddTagsComponent implements OnInit, OnChanges {\n\n  @Input() addTags: AddTags\n  @Output() addTagsChange = new EventEmitter<AddTags>();\n\n  constructor() {\n    this.addTags = {\n      Parameters: {\n        Tags:\"\"\n      }\n    } as AddTags\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.addTagsChange.emit(this.addTags)\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 col-form-label\">\n          <span>Tags</span> \n          <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"String containing comma separated list of tag key/value pairs. The tag key/value pairs are colon seperated,\n             for example: \n             GatewayId:HoustonStore000123,Latitude:29.630771,Longitude:-95.377603\"></span>\n      </label>\n      <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"Tags\" [(ngModel)]=\"addTags.Parameters.Tags\">\n      </div>\n    </div>\n</form>","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 col-form-label\">\n          <span>Mode</span> \n      </label>\n      <div class=\"col-sm-10\">\n          <select class=\"custom-select\"  name=\"Mode\" [(ngModel)]=\"batch.Parameters.Mode\">\n                <option value=\"bycount\">bycount</option>\n                <option value=\"bytime\">bytime</option>\n                <option value=\"bytimecount\">bytimecount</option>\n           </select>\n      </div>\n    </div>\n    <div class=\"form-group row\" *ngIf=\"batch.Parameters.Mode === 'bycount' || batch.Parameters.Mode === 'bytimecount'\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>BatchThreshold</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content='Number of items to batch before sending batched items to the next function in the pipeline. &lt;br&gt;\n            Used with \"bycount\" and \"bytimecount\" modes'></span>\n        </label>\n        <div class=\"col-sm-10\">\n              <input type=\"text\" class=\"form-control\" name=\"BatchThreshold\" [(ngModel)]=\"batch.Parameters.BatchThreshold\">\n        </div>\n    </div>\n    <div class=\"form-group row\"  *ngIf=\"batch.Parameters.Mode === 'bytime' || batch.Parameters.Mode === 'bytimecount'\">\n      <label class=\"col-sm-2 col-form-label\">\n          <span>TimeInterval</span>\n          <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n          data-content='Amount of time to batch before sending batched items to the next function in the pipeline. &lt;br&gt;\n          Used with \"bytime\" and \"bytimecount\" modes,&lt;br&gt;\n          &lt;br&gt;\n          The format of this field is to be an unsigned integer followed by a unit,&lt;br&gt;\n          which may be \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\" representing nanoseconds, microseconds, milliseconds, seconds, minutes or hours. Eg, \"100ms\", \"24h\"'></span>\n      </label>\n      <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"TimeInterval\" [(ngModel)]=\"batch.Parameters.TimeInterval\">\n      </div>\n    </div>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 col-form-label\">\n          <span>IsEventData</span>\n          <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n          data-content=\"If true, specifies that the data being batch is Events and to un-marshal the batched data to []Event prior to returning the batched data. By default the batched data returned is [][]byte\"></span>\n      </label>\n      <div class=\"col-sm-10\">\n          <select class=\"custom-select\"  name=\"IsEventData\" [(ngModel)]=\"batch.Parameters.IsEventData\">\n              <option value=\"false\">false</option>\n              <option value=\"true\">true</option>\n          </select>\n      </div>\n    </div>\n</form>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { Batch } from '../../../../contracts/v3/appsvc/functions';\n\n@Component({\n  selector: 'app-appsvc-function-batch',\n  templateUrl: './batch.component.html',\n  styleUrls: ['./batch.component.css']\n})\nexport class BatchComponent implements OnInit, OnChanges {\n\n  @Input() batch: Batch\n  @Output() batchChange = new EventEmitter<Batch>()\n\n  constructor() {\n    this.batch = {\n      Parameters: {\n        Mode: 'bycount',\n        IsEventData: 'true'\n      }\n    } as Batch\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.batchChange.emit(this.batch)\n  }\n\n}\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { FilterByDeviceName } from \"../../../../contracts/v3/appsvc/functions\";\n\n@Component({\n  selector: 'app-appsvc-function-filter-by-device-name',\n  templateUrl: './filter-by-device-name.component.html',\n  styleUrls: ['./filter-by-device-name.component.css']\n})\nexport class FilterByDeviceNameComponent implements OnInit, OnChanges {\n\n  @Input() filterByDeviceName: FilterByDeviceName\n  @Output() filterByDeviceNameChange = new EventEmitter<FilterByDeviceName>()\n\n  deviceNames: string[] = [];\n\n  constructor() {\n    this.filterByDeviceName = {\n      Parameters: {\n        FilterOut: \"false\"\n      }\n    } as FilterByDeviceName\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.deviceNames = this.filterByDeviceName.Parameters.DeviceNames.split(',')\n    this.filterByDeviceNameChange.emit(this.filterByDeviceName)\n  }\n\n  onDeviceNamesChange() {\n    this.filterByDeviceName.Parameters.DeviceNames = this.deviceNames.join(',')\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">DeviceNames</label>\n        <div class=\"col-sm-10\">\n            <app-device-combo-list [(deviceSelected)]=\"deviceNames\" (deviceSelectedChange)=\"onDeviceNamesChange()\"></app-device-combo-list>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>FilterOut</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"Boolean indicating if the data matching the device names should be filtered out (true) or filtered for (false).\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"FilterOut\" [(ngModel)]=\"filterByDeviceName.Parameters.FilterOut\">\n                <option value=\"false\">false</option>\n                <option value=\"true\">true</option>\n            </select>\n        </div>\n    </div>\n</form>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { FilterByProfileName } from \"../../../../contracts/v3/appsvc/functions\";\n\n@Component({\n  selector: 'app-appsvc-function-filter-by-profile-name',\n  templateUrl: './filter-by-profile-name.component.html',\n  styleUrls: ['./filter-by-profile-name.component.css']\n})\nexport class FilterByProfileNameComponent implements OnInit, OnChanges {\n\n  @Input() filterByProfileName: FilterByProfileName\n  @Output() filterByProfileNameChange = new EventEmitter<FilterByProfileName>()\n\n  profileNames: string[] = []\n\n  constructor() {\n    this.filterByProfileName = {\n      Parameters: {\n        FilterOut: \"false\"\n      }\n    } as FilterByProfileName\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.profileNames = this.filterByProfileName.Parameters.ProfileNames.split(',')\n    this.filterByProfileNameChange.emit(this.filterByProfileName)\n  }\n\n  onDeviceProfileSelectedEvent(profiles: string[]) {\n    this.profileNames = profiles\n    this.filterByProfileName.Parameters.ProfileNames = this.profileNames.join(',')\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">ProfileNames</label>\n        <div class=\"col-sm-10\">\n            <app-device-profile-combo-list \n            [selectedProfiles]=\"profileNames\"\n            (deviceProfileSelectedEvent)=\"onDeviceProfileSelectedEvent($event)\"></app-device-profile-combo-list>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>FilterOut</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"Boolean indicating if the data matching the profile names should be filtered out (true) or filtered for (false).\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"FilterOut\" [(ngModel)]=\"filterByProfileName.Parameters.FilterOut\">\n                <option value=\"false\">false</option>\n                <option value=\"true\">true</option>\n            </select>\n        </div>\n    </div>\n</form>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { FilterBySourceName } from \"../../../../contracts/v3/appsvc/functions\";\n\n@Component({\n  selector: 'app-appsvc-function-filter-by-source-name',\n  templateUrl: './filter-by-source-name.component.html',\n  styleUrls: ['./filter-by-source-name.component.css']\n})\nexport class FilterBySourceNameComponent implements OnInit, OnChanges {\n\n  @Input() filterBySourceName: FilterBySourceName\n  @Output() filterBySourceNameChange = new EventEmitter<FilterBySourceName>()\n\n  constructor() {\n    this.filterBySourceName  = {\n      Parameters: {\n        FilterOut: \"false\"\n      }\n    } as FilterBySourceName\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.filterBySourceNameChange.emit(this.filterBySourceName)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>SourceNames</span>\n        </label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"SourceNames\" [(ngModel)]=\"filterBySourceName.Parameters.SourceNames\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>FilterOut</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"Boolean indicating if the readings matching the source names should be filtered out (true) or filtered for (false).\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"FilterOut\" [(ngModel)]=\"filterBySourceName.Parameters.FilterOut\">\n                <option value=\"false\">false</option>\n                <option value=\"true\">true</option>\n            </select>\n        </div>\n    </div>\n</form>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { FilterByResourceName } from '../../../../contracts/v3/appsvc/functions';\n\n@Component({\n  selector: 'app-appsvc-function-filter-by-resource-name',\n  templateUrl: './filter-by-resource-name.component.html',\n  styleUrls: ['./filter-by-resource-name.component.css']\n})\nexport class FilterByResourceNameComponent implements OnInit, OnChanges {\n\n  @Input() filterByResourceName: FilterByResourceName\n  @Output() filterByResourceNameChange = new EventEmitter<FilterByResourceName>()\n\n  constructor() {\n    this.filterByResourceName = {\n      Parameters: {\n        FilterOut:\"false\"\n      }\n    } as FilterByResourceName\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.filterByResourceNameChange.emit(this.filterByResourceName)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">ResourceNames</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"ResourceNames\" [(ngModel)]=\"filterByResourceName.Parameters.ResourceNames\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>FilterOut</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"Boolean indicating if the readings matching the resource names should be filtered out (true) or filtered for (false).\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"FilterOut\" [(ngModel)]=\"filterByResourceName.Parameters.FilterOut\">\n                <option value=\"false\">false</option>\n                <option value=\"true\">true</option>\n            </select>\n        </div>\n    </div>\n</form>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { Transform } from '../../../../contracts/v3/appsvc/functions';\n\n@Component({\n  selector: 'app-appsvc-function-transform',\n  templateUrl: './transform.component.html',\n  styleUrls: ['./transform.component.css']\n})\nexport class TransformComponent implements OnInit, OnChanges {\n\n  @Input() transform: Transform\n  @Output() transformChange = new EventEmitter<Transform>();\n\n  constructor() {\n    this.transform = {\n      Parameters: {\n        Type: 'json'\n      }\n    } as  Transform\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.transformChange.emit(this.transform)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form>\n  <div class=\"form-group row\">\n    <label class=\"col-sm-2 col-form-label\">Type</label>\n    <div class=\"col-sm-10\">\n          <select class=\"custom-select\"  name=\"Type\" [(ngModel)]=\"transform.Parameters.Type\">\n              <option value=\"json\">json</option>\n              <option value=\"xml\">xml</option>\n          </select>\n    </div>\n  </div>\n</form>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { Compress } from  '../../../../contracts/v3/appsvc/functions';\n\n@Component({\n  selector: 'app-appsvc-function-compress',\n  templateUrl: './compress.component.html',\n  styleUrls: ['./compress.component.css']\n})\nexport class CompressComponent implements OnInit, OnChanges {\n\n  @Input() compress: Compress\n  @Output() compressChange = new EventEmitter<Compress>()\n\n  constructor() {\n    this.compress = {\n      Parameters: {\n        Algorithm: \"gzip\"\n      }\n    } as Compress\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.compressChange.emit(this.compress)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 col-form-label\">Algorithm</label>\n      <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"Algorithm\" [(ngModel)]=\"compress.Parameters.Algorithm\">\n                <option value=\"gzip\">gzip</option>\n                <option value=\"zlib\">zlib</option>\n            </select>\n      </div>\n    </div>\n</form>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter} from '@angular/core';\nimport { Encrypt } from '../../../../contracts/v3/appsvc/functions';\n\n@Component({\n  selector: 'app-appsvc-function-encrypt',\n  templateUrl: './encrypt.component.html',\n  styleUrls: ['./encrypt.component.css']\n})\nexport class EncryptComponent implements OnInit, OnChanges {\n\n  @Input() encrypt: Encrypt\n  @Output() encryptChange = new EventEmitter<Encrypt>()\n\n  constructor() {\n    this.encrypt = {\n      Parameters: {\n        Algorithm: \"aes256\"\n      }\n    } as Encrypt\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.encryptChange.emit(this.encrypt)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 col-form-label\">Algorithm</label>\n      <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"Algorithm\" [(ngModel)]=\"encrypt.Parameters.Algorithm\">\n                <option value=\"aes256\">aes256</option>\n            </select>\n      </div>\n    </div>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 col-form-label\">\n          <span>SecretPath</span>\n          <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n          data-content=\"(required for AES256) Path in the Secret Store where the encryption key is located.\"></span>\n      </label>\n      <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"SecretPath\" [(ngModel)]=\"encrypt.Parameters.SecretPath\">\n      </div>\n    </div>\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 col-form-label\">\n          <span>SecretName</span>\n          <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n          data-content=\"(required for AES256) Name of the secret for the encryption key in the Secret Store.\"></span>\n      </label>\n      <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"SecretName\" [(ngModel)]=\"encrypt.Parameters.SecretName\">\n      </div>\n    </div>\n</form>","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form class=\"has-validation\">\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>BrokerAddress</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"tcp://broker-host:1883\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"BrokerAddress\" [(ngModel)]=\"mqttExport.Parameters.BrokerAddress\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">Topic</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"Topic\" [(ngModel)]=\"mqttExport.Parameters.Topic\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">ClientId</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"ClientId\" [(ngModel)]=\"mqttExport.Parameters.ClientId\">\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">Qos</label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\" name=\"Qos\" [(ngModel)]=\"mqttExport.Parameters.Qos\">\n                <option value=\"0\">0</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n            </select>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">AutoReconnect</label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"AutoReconnect\" [(ngModel)]=\"mqttExport.Parameters.AutoReconnect\">\n                <option value=\"false\">false</option>\n                <option value=\"true\">true</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">Retain</label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"Retain\" [(ngModel)]=\"mqttExport.Parameters.Retain\">\n                <option value=\"false\">false</option>\n                <option value=\"true\">true</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>SkipVerify</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"Boolean indicating if the certificate verification should be skipped.\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"SkipVerify\" [(ngModel)]=\"mqttExport.Parameters.SkipVerify\">\n                <option value=\"false\">false</option>\n                <option value=\"true\">true</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>PersistOnError</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"Indicates to persist the data if the POST fails. Store and Forward must also be enabled if this is set to 'true'.\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"PersistOnError\" [(ngModel)]=\"mqttExport.Parameters.PersistOnError\">\n                <option value=\"false\">false</option>\n                <option value=\"true\">true</option>\n            </select>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>AuthMode</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"Mode of authentication to use when connecting to the MQTT Broker.&lt;br&gt;\n            &lt;br&gt;\n            none - No authentication required.&lt;br&gt;\n            &lt;br&gt;\n            usernamepassword - Use username and password authentication. The Secret Store (Vault or InsecureSecrets) must contain the username and password secrets.&lt;br&gt;\n            &lt;br&gt;\n            clientcert - Use Client Certificate authentication. The Secret Store (Vault or InsecureSecrets) must contain the clientkey and clientcert secrets.&lt;br&gt;\n            &lt;br&gt;\n            cacert - Use CA Certificate authentication. The Secret Store (Vault or InsecureSecrets) must contain the cacert secret.\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n              <select class=\"custom-select\"  name=\"AuthMode\" [(ngModel)]=\"mqttExport.Parameters.AuthMode\">\n                  <option value=\"none\">none</option>\n                  <option value=\"usernamepassword\">usernamepassword</option>\n                  <option value=\"clientcert\">clientcert</option>\n                  <option value=\"cacert\">cacert</option>\n              </select>\n        </div>\n    </div>\n    <div class=\"form-group row\" *ngIf=\"authModeIsNotNone()\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>SecretPath</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"Path in the secret store where to authorization secrets are stored.\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" [class.is-invalid]=\"!mqttExport.Parameters.SecretPath\" name=\"SecretPath\" [(ngModel)]=\"mqttExport.Parameters.SecretPath\">\n            <div class=\"invalid-feedback\">\n                <small i18n>the SecretPath can't be empty!</small>\n            </div>\n        </div>\n    </div>\n</form>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { MQTTExport } from \"../../../../contracts/v3/appsvc/functions\";\n\n@Component({\n  selector: 'app-appsvc-function-mqttexport',\n  templateUrl: './mqttexport.component.html',\n  styleUrls: ['./mqttexport.component.css']\n})\nexport class MQTTExportComponent implements OnInit, OnChanges {\n\n  @Input() mqttExport: MQTTExport\n  @Output() mqttExportChange = new EventEmitter<MQTTExport>()\n\n  constructor() {\n    this.mqttExport = {\n      Parameters: {\n        Qos: '0',\n        AutoReconnect: 'true',\n        Retain: 'true',\n        SkipVerify: 'true',\n        PersistOnError: 'false',\n        AuthMode: 'none'\n      }\n    } as MQTTExport\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.mqttExportChange.emit(this.mqttExport)\n  }\n\n  renderPopoverComponent() {\n    window.setTimeout(()=>{\n        $('[data-toggle=\"popover\"]').popover({\n            trigger: 'hover'\n        });\n    },200)\n  }\n\n  authModeIsNotNone(): boolean {\n    this.renderPopoverComponent()\n    return this.mqttExport.Parameters.AuthMode !== 'none'\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form class=\"has-validation\">\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">ProfileName</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"ProfileName\" [(ngModel)]=\"pushToCore.Parameters.ProfileName\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">DeviceName</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"DeviceName\" [(ngModel)]=\"pushToCore.Parameters.DeviceName\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">ResourceName</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"ResourceName\" [(ngModel)]=\"pushToCore.Parameters.ResourceName\">\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>ValueType</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"Value type to use the new Event Reading's value type\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <select class=\"custom-select\"  name=\"ValueType\" [(ngModel)]=\"pushToCore.Parameters.ValueType\">\n                <option value=\"Bool\">Bool</option>\n                <option value=\"Int8\">Int8</option>\n                <option value=\"Int64\">Int64</option>\n                <option value=\"Uint8\">Uint8</option>\n                <option value=\"Uint64\">Uint64</option>\n                <option value=\"Float32\">Float32</option>\n                <option value=\"Float64\">Float64</option>\n                <option value=\"String\">String</option>\n                <option value=\"Binary\">Binary</option>\n                <option value=\"Object\">Object</option>\n\n                <option value=\"Float32Array\">Float32Array</option>\n                <option value=\"BoolArray\">BoolArray</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"form-group row\" *ngIf=\"valueTypeIsBinary()\">\n        <label class=\"col-sm-2 col-form-label\">\n            <span>MediaType</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"Media type to use the new Event Reading's value type. Required when the value type is Binary\"></span>\n        </label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" [class.is-invalid]=\"!pushToCore.Parameters.MediaType\" name=\"MediaType\" [(ngModel)]=\"pushToCore.Parameters.MediaType\">\n            <div class=\"invalid-feedback\">\n                <small i18n>the MediaType can't be empty!</small>\n            </div>\n        </div>\n    </div>\n</form>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { PushToCore } from \"../../../../contracts/v3/appsvc/functions\";\n\n@Component({\n  selector: 'app-appsvc-function-push-to-core',\n  templateUrl: './push-to-core.component.html',\n  styleUrls: ['./push-to-core.component.css']\n})\nexport class PushToCoreComponent implements OnInit, OnChanges {\n\n  @Input() pushToCore: PushToCore\n  @Output() pushToCoreChange = new EventEmitter<PushToCore>()\n\n  constructor() {\n    this.pushToCore = {\n      Parameters: {\n        ValueType: 'String'\n      }\n    } as PushToCore\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.pushToCoreChange.emit(this.pushToCore)\n  }\n\n  renderPopoverComponent() {\n    window.setTimeout(()=>{\n        $('[data-toggle=\"popover\"]').popover({\n            trigger: 'hover'\n        });\n    },200)\n  }\n\n  valueTypeIsBinary(): boolean{\n    this.renderPopoverComponent()\n    return this.pushToCore.Parameters.ValueType === 'Binary'\n  }\n}\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { SetResponseData } from \"../../../../contracts/v3/appsvc/functions\";\n\n@Component({\n  selector: 'app-appsvc-function-set-response-data',\n  templateUrl: './set-response-data.component.html',\n  styleUrls: ['./set-response-data.component.css']\n})\nexport class SetResponseDataComponent implements OnInit, OnChanges {\n\n  @Input() setResponseData: SetResponseData\n  @Output() setResponseDataChange = new EventEmitter<SetResponseData>()\n\n  constructor() {\n    this.setResponseData = {Parameters: {ResponseContentType: ''}}  as SetResponseData\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.setResponseDataChange.emit(this.setResponseData)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-3 col-form-label\">\n            <span>ResponseContentType</span>\n            <span class=\"fa fa-question-circle-o fa-lg ml-2\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n            data-content=\"(Optional) Used to specify content-type header for response, for example, application/json\"></span>\n        </label>\n        <div class=\"col-sm-9\">\n            <input type=\"text\" class=\"form-control\" name=\"ResponseContentType\" [(ngModel)]=\"setResponseData.Parameters.ResponseContentType\">\n        </div>\n    </div>\n</form>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { JSONLogic } from '../../../../contracts/v3/appsvc/functions';\n\n@Component({\n  selector: 'app-appsvc-function-jsonlogic',\n  templateUrl: './jsonlogic.component.html',\n  styleUrls: ['./jsonlogic.component.css']\n})\nexport class JSONLogicComponent implements OnInit, OnChanges {\n\n  @Input() jsonLogic: JSONLogic\n  @Output() jsonLogicChange = new EventEmitter<JSONLogic>()\n\n  constructor() {\n    this.jsonLogic = {\n      Parameters:  {\n        Rule: ''\n      }\n    } as JSONLogic\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.jsonLogicChange.emit(this.jsonLogic)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<form>\n    <div class=\"form-group row\">\n        <label class=\"col-sm-2 col-form-label\">Rule</label>\n        <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" name=\"Rule\" [(ngModel)]=\"jsonLogic.Parameters.Rule\">\n        </div>\n    </div>\n</form>","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"row\">\n    <div class=\"col-sm-4 col-md-3\">\n        <div appDragHighlight class=\"card mb-3\" (drop)=\"ondropBuiltinFunction($event)\">\n            <div class=\"card-header font-weight-bold text-nowrap text-truncate\">\n                <i class=\"fa fa-file-text mr-2 text-info\"></i>\n                <span i18n>Builtin Pipeline Functions</span>\n            </div>\n            <div class=\"card-body overflow-auto\">\n                <table *ngIf=\"selectedFunctionsName.length === objectKeys(availableFunctions).length\" class=\"border-secondary rounded w-100 text-center\" style=\"height: 70px; border: 1px; border-style: dashed;\">\n                    <tbody>\n                        <td class=\"text-muted\" i18n>Drop Zone</td>\n                    </tbody>\n                </table>\n                <!-- p and div tag is not supported by safari, there is no drag effective -->\n                <span draggable=\"true\" id=\"{{builtinFuncZoneIdentifier}}{{funcName}}\" class=\"mb-3\" [class.d-table]=\"!isSelected(funcName)\" [class.d-none]=\"isSelected(funcName)\"  role=\"button\" *ngFor=\"let funcName of objectKeys(availableFunctions)\" (dragstart)=\"ondragstartBuiltinFunction($event,funcName)\">\n                    <span class=\"badge badge-secondary\">{{funcName}}</span>\n                </span>\n            </div>\n        </div>\n    </div>\n   \n    <div class=\"col-sm-8 col-md-9\">\n        <div class=\"card\">\n            <div class=\"card-header font-weight-bold\">\n                <i class=\"fa fa-file-text mr-2 text-info\"></i>\n                <span i18n>Selected Pipeline Functions</span>\n            </div>\n            <div class=\"card-body\">\n                <div appDragHighlight class=\"card mb-3\" (drop)=\"ondropFuncExecutionOrder($event)\">\n                    <div class=\"card-header font-weight-bold text-nowrap text-truncate\">\n                        <i class=\"fa fa-sort-amount-asc fa-rotate-270 mr-2 text-info\"></i>\n                        <span i18n>Func Execution Order</span>\n                        <span class=\"text-info ml-2\">\n                            <small>\n                                <i class=\"fa fa-info-circle mr-1\"></i>\n                                <span i18n>drag sorting is enabled</span>\n                            </small>\n                        </span>\n                    </div>\n                    <div class=\"card-body\" id=\"funcExecOrderSelectedBody\">\n                        <table *ngIf=\"selectedFunctionsName.length === 0\" class=\"border-secondary rounded w-100 text-center\" style=\"height: 70px; border: 1px; border-style: dashed;\">\n                            <tbody>\n                                <td class=\"text-muted\" i18n>Drop Zone</td>\n                            </tbody>\n                        </table>\n                        <span *ngFor=\"let funcName of selectedFunctionsName\">\n                            <span draggable=\"true\" role=\"button\" id=\"{{funcExecOrderZoneIdentifier}}{{funcName}}\" class=\"badge badge-secondary text-nowrap text-truncate mr-2\" (dragstart)=\"ondragstartFuncExecutionOrder($event,funcName)\">{{funcName}}</span>\n                        </span>\n                    </div>\n                </div>\n               \n                <div *ngIf=\"selectedFunctionsName.length !== 0 \" class=\"card\">\n                    <div class=\"card-header font-weight-bold\">\n                        <i class=\"fa fa-cog mr-2 text-info\"></i>\n                        <span i18n>Pipeline Functions Parameter Setting</span>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"card mb-3\" *ngFor=\"let funcName of selectedFunctionsName\">\n                            <div class=\"card-header text-nowrap text-truncate\">\n                                <i class=\"fa fa-tag mr-2 text-info\"></i>\n                                <span class=\"mr-2\">Function</span>\n                                <span class=\"badge badge-secondary mr-2\">{{funcName}}</span>\n                                <span>Parameters</span>\n                                <span role=\"button\" class=\"float-right text-danger\" (click)=\"unselectFunc(funcName)\">\n                                    <i class=\"fa fa-trash\"></i>\n                                </span>\n                            </div>\n                            <div class=\"card-body text-nowrap\">\n                                \n                                <div [ngSwitch]=\"startWith(funcName)\">\n                                    <div *ngSwitchCase=\"'AddTags'\">\n                                        <app-appsvc-function-add-tags \n                                        [(addTags)]=\"availableFunctions[funcName]\"></app-appsvc-function-add-tags>\n                                    </div>\n                                    <div *ngSwitchCase=\"'Batch'\">\n                                        <app-appsvc-function-batch \n                                        [(batch)]=\"availableFunctions[funcName]\"></app-appsvc-function-batch>\n                                    </div>\n                                    <div *ngSwitchCase=\"'Compress'\">\n                                        <app-appsvc-function-compress \n                                        [(compress)]=\"availableFunctions[funcName]\"></app-appsvc-function-compress>\n                                    </div>\n                                    <div *ngSwitchCase=\"'Encrypt'\">\n                                        <app-appsvc-function-encrypt \n                                        [(encrypt)]=\"availableFunctions[funcName]\"></app-appsvc-function-encrypt>\n                                    </div>\n                                    <div *ngSwitchCase=\"'FilterByDeviceName'\">\n                                        <app-appsvc-function-filter-by-device-name \n                                        [(filterByDeviceName)]=\"availableFunctions[funcName]\"></app-appsvc-function-filter-by-device-name>\n                                    </div>\n                                    <div *ngSwitchCase=\"'FilterByProfileName'\">\n                                        <app-appsvc-function-filter-by-profile-name \n                                        [(filterByProfileName)]=\"availableFunctions[funcName]\"></app-appsvc-function-filter-by-profile-name>\n                                    </div>\n                                    <div *ngSwitchCase=\"'FilterByResourceName'\">\n                                        <app-appsvc-function-filter-by-resource-name \n                                        [(filterByResourceName)]=\"availableFunctions[funcName]\"></app-appsvc-function-filter-by-resource-name>\n                                    </div>\n                                    <div *ngSwitchCase=\"'FilterBySourceName'\">\n                                        <app-appsvc-function-filter-by-source-name \n                                        [(filterBySourceName)]=\"availableFunctions[funcName]\"></app-appsvc-function-filter-by-source-name>\n                                    </div>\n                                    <div *ngSwitchCase=\"'Transform'\">\n                                        <app-appsvc-function-transform \n                                        [(transform)]=\"availableFunctions[funcName]\"></app-appsvc-function-transform>\n                                    </div>\n                                    <div *ngSwitchCase=\"'HTTPExport'\">\n                                        <app-appsvc-function-httpexport \n                                        [(httpExport)]=\"availableFunctions[funcName]\"></app-appsvc-function-httpexport>\n                                    </div>\n                                    <div *ngSwitchCase=\"'MQTTExport'\">\n                                        <app-appsvc-function-mqttexport \n                                        [(mqttExport)]=\"availableFunctions[funcName]\"></app-appsvc-function-mqttexport>\n                                    </div>\n                                    <div *ngSwitchCase=\"'JSONLogic'\">\n                                        <app-appsvc-function-jsonlogic \n                                        [(jsonLogic)]=\"availableFunctions[funcName]\"></app-appsvc-function-jsonlogic>\n                                    </div>\n                                    <div *ngSwitchCase=\"'PushToCore'\">\n                                        <app-appsvc-function-push-to-core \n                                        [(pushToCore)]=\"availableFunctions[funcName]\"></app-appsvc-function-push-to-core>\n                                    </div>\n                                    <div *ngSwitchCase=\"'SetResponseData'\">\n                                        <app-appsvc-function-set-response-data \n                                        [(setResponseData)]=\"availableFunctions[funcName]\"></app-appsvc-function-set-response-data>\n                                    </div>\n                                    <div *ngSwitchDefault>\n                                        <div class=\"alert alert-warning mb-3\" role=\"alert\">\n                                            <small>\n                                                <i class=\"fa fa-info-circle mr-1\"></i>\n                                                <span i18n>\n                                                    Unknown pipeline function\n                                                </span>\n                                            </small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Functions, AddTags, Batch,Compress, Encrypt,\n  FilterByDeviceName, FilterByProfileName, FilterBySourceName,\n  FilterByResourceName, HTTPExport, MQTTExport, PushToCore,\n  Transform,SetResponseData, JSONLogic } from '../../../contracts/v3/appsvc/functions';\n\n@Component({\n  selector: 'app-pipeline-function',\n  templateUrl: './pipeline-function.component.html',\n  styleUrls: ['./pipeline-function.component.css']\n})\nexport class PipelineFunctionComponent implements OnInit, OnChanges {\n\n    //funcExecOrder drop zone identifier\n    funcExecOrderZoneIdentifier = 'funcExecOrder-';\n    //builtinFunc drop zone identifier\n    builtinFuncZoneIdentifier = 'builtinFunc-';\n    objectKeys = Object.keys;\n\n    profileNames: string[] = [];\n    deviceNames: string[] = [];\n    builtinFunctions: Functions\n\n    // using get and set method to avoid overwriting on init value of InsecureSecrets when parent component was binding on.\n    // availableFunctions' name is not an exacted Functions from Jakarta version, it is a superset of built-in Function, the name of property maybe the value with an exacted name of one built-in Function.\n    private _availableFunctions: Functions | any;\n    @Input()\n    get availableFunctions(): Functions | any {return this._availableFunctions};\n    set availableFunctions(funcs: Functions | any) {\n        Object.assign(this._availableFunctions, funcs)\n    };\n    @Output() availableFunctionsChange = new EventEmitter<Functions>();\n\n    private _selectedFunctionsName: string[] = [];\n    @Input()\n    get selectedFunctionsName(): string[] {return this._selectedFunctionsName };\n    set selectedFunctionsName(funcNames: string[]) {\n        funcNames.forEach((v,i) => {funcNames[i] = v.trim()});\n        this._selectedFunctionsName = funcNames;\n    }\n    @Output() selectedFunctionsNameChange = new EventEmitter<string[]>();\n\n    constructor() {\n        this._availableFunctions = {} as Functions;\n        this.builtinFunctions = {} as Functions\n        this.initBuiltinFunctions();\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnChanges() {\n        this.setSelectedDevices();\n        this.setSelectedProfiles();\n        this.availableFunctionsChange.emit(this.availableFunctions);\n    }\n\n    startWith(availableFuncName: string): string {\n        let builtinFuncName = 'Unknown'\n        Object.keys(this.builtinFunctions).forEach(name => {\n            if (availableFuncName.startsWith(name))  {\n                builtinFuncName = name\n                return\n            }\n        })\n        return builtinFuncName\n    }\n\n    setSelectedDevices() {\n        if (this.availableFunctions.FilterByDeviceName?.Parameters) {\n            if (this.availableFunctions.FilterByDeviceName!.Parameters.DeviceNames) {\n                this.deviceNames  = this.availableFunctions.FilterByDeviceName!.Parameters.DeviceNames.split(',');\n            }\n        }\n    }\n\n    setSelectedProfiles() {\n        if (this.availableFunctions.FilterByProfileName?.Parameters) {\n            if (this.availableFunctions.FilterByProfileName!.Parameters.ProfileNames) {\n                this.profileNames  = this.availableFunctions.FilterByProfileName!.Parameters.ProfileNames.split(',');\n            }\n        }\n    }\n\n    initBuiltinFunctions() {\n            this.builtinFunctions.AddTags = {Parameters:{Tags:\"\"}} as AddTags;\n            this.builtinFunctions.Batch = {Parameters:{}} as Batch;\n            this.builtinFunctions.FilterByDeviceName = {Parameters:{FilterOut:\"false\"}} as FilterByDeviceName;\n            this.builtinFunctions.FilterByProfileName = {Parameters:{FilterOut:\"false\"}} as FilterByProfileName;\n            this.builtinFunctions.FilterBySourceName = {Parameters:{FilterOut:\"false\"}} as FilterBySourceName;\n            this.builtinFunctions.FilterByResourceName = {Parameters:{FilterOut:\"false\"}} as FilterByResourceName;\n            this.builtinFunctions.Transform = {Parameters:{Type:\"json\"}} as Transform;\n            this.builtinFunctions.Compress = {Parameters:{Algorithm:\"gzip\"}} as Compress;\n            this.builtinFunctions.Encrypt = {Parameters:{Algorithm:\"aes\"}} as Encrypt;\n            this.builtinFunctions.HTTPExport = {Parameters:{}} as HTTPExport;\n            this.builtinFunctions.MQTTExport = {Parameters:{}} as MQTTExport;\n            this.builtinFunctions.PushToCore = {Parameters:{}} as PushToCore;\n            this.builtinFunctions.SetResponseData = {Parameters:{}} as SetResponseData;\n            this.builtinFunctions.JSONLogic = {Parameters:{}} as JSONLogic;\n    }\n\n    onDeviceProfileSelectedEvent(profiles: string[]) {\n        this.profileNames = profiles;\n        this.availableFunctions.FilterByProfileName!.Parameters.ProfileNames = this.profileNames.join(',');\n    }\n\n    onDeviceNamesChange() {\n        this.availableFunctions.FilterByDeviceName!.Parameters.DeviceNames = this.deviceNames.join(',');\n    }\n\n    renderPopoverComponent() {\n        window.setTimeout(()=>{\n            $('[data-toggle=\"popover\"]').popover({\n                trigger: 'hover'\n            });\n        },200)\n    }\n\n    selectOnefunc(funcName: string) {\n        this.selectedFunctionsName.push(funcName);\n        this.selectedFunctionsNameChange.emit(this.selectedFunctionsName);\n    }\n\n    unselectFunc(funcName: string) {\n        if (this.selectedFunctionsName.indexOf(funcName) === -1)  {\n            return\n        }\n        this.selectedFunctionsName.splice(this.selectedFunctionsName.indexOf(funcName),1);\n        this.selectedFunctionsNameChange.emit(this.selectedFunctionsName);\n    }\n\n    getFuncExecutionOrder(): string {\n        return this.selectedFunctionsName.join(',');\n    }\n\n    isSelected(funcName: string): boolean {\n        let selected = false\n        this.selectedFunctionsName.forEach((name) => {\n            if (funcName === name.trim()) {\n                selected = true\n                return\n            }\n        });\n        return selected\n    }\n\n    ondropBuiltinFunction(event: any) {\n        event.preventDefault();\n        let funcName = event.dataTransfer.getData(\"funcName\");\n        if (!funcName) {\n            return\n        }\n        this.unselectFunc(funcName)\n    }\n\n    ondragstartBuiltinFunction(event: any, funcName: string) {\n        event.dataTransfer.setData(\"funcName\",funcName);\n    }\n\n    sortSelectedFuncsExecuterOrder(src: string, dest: string) {\n        let t = this.selectedFunctionsName.slice(0);\n        t.splice(t.indexOf(src),1);\n        t.splice(t.indexOf(dest),0,src);\n        this.selectedFunctionsName = t;\n        this.selectedFunctionsNameChange.emit(this.selectedFunctionsName);\n    }\n\n    ondropFuncExecutionOrder(event: any) {\n        event.preventDefault();\n        let sourceFuncName = event.dataTransfer.getData(\"funcName\");\n        if (!sourceFuncName) {\n            return\n        }\n\n        let sourceElementId = `${this.funcExecOrderZoneIdentifier}${sourceFuncName}`;\n        // let targetElementId = event.toElement.id; // firefox not support toElement property\n        let targetElementId = event.target.id;\n\n        //if source element and target element are self equal, sort action abort.\n        if (sourceElementId === targetElementId) {\n            return\n        }\n\n        let sourceElement = document.getElementById(sourceElementId);\n        if (sourceElement && targetElementId.indexOf(this.funcExecOrderZoneIdentifier) === 0) { //source and target element are both from the same draggable zone, do sort action.\n            let targetFuncName = targetElementId.replace(this.funcExecOrderZoneIdentifier,'');\n            this.sortSelectedFuncsExecuterOrder(sourceFuncName, targetFuncName)\n        } else if (!sourceElement) { //element from other draggable zone, appended this ele to drop zone\n            this.selectOnefunc(sourceFuncName)\n        }\n\n        this.renderPopoverComponent();\n    }\n\n    ondragstartFuncExecutionOrder(event: any, funcName: string) {\n        event.dataTransfer.setData(\"funcName\",funcName);\n    }\n\n    ondragoverFuncExecutionOrder(event: any) {\n        $(event.target).addClass('ml-3')\n    }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <ul class=\"list-unstyled\" *ngIf=\"pipeline && !isEditStatus\">\n    <li class=\"list-group-item list-group-item-action list-group-item-light\">\n        <div class=\"media\">\n            <div class=\"align-self-center mr-3\">\n                <i class=\"fa fa-tags fa-2x text-secondary\"></i>  \n            </div>\n            <div class=\"media-body\">\n                <h5 class=\"text-dark mt-0\">{{defaultPipelineIdentifier}}</h5>\n                <p class=\"mb-0\"><span class=\"badge badge-secondary mr-1\">ExecutionOrder:</span>{{pipeline.ExecutionOrder}}</p>\n                <span role=\"button\" class=\"badge badge-info float-right\" (click)=\"edit(defaultPipelineIdentifier)\">\n                    <i class=\"fa fa-edit mr-1\"></i>\n                    <span i18n>Edit</span>\n                </span>\n            </div>\n        </div>\n    </li>\n    <div *ngIf=\"perTopicPipelines\">\n        <li *ngFor=\"let ptp of perTopicPipelines\" class=\"list-group-item list-group-item-action list-group-item-light\">\n            <div class=\"media\">\n                <div class=\"align-self-center mr-3\">\n                    <i class=\"fa fa-tags fa-2x text-secondary\"></i>  \n                </div>\n                <div class=\"media-body\">\n                    <h5 class=\"text-dark mt-0 mb-1\">{{ptp.Id}}</h5>\n                    <p class=\"mb-0\">\n                        <span class=\"badge badge-secondary mr-1\">ExecutionOrder:</span>\n                        {{ptp.ExecutionOrder}}\n                    </p>\n                    <span class=\"badge badge-secondary mr-1\">Topics:</span>\n                    {{ptp.Topics}}\n                    <span role=\"button\" class=\"badge badge-info float-right\" (click)=\"edit(ptp.Id)\">\n                        <i class=\"fa fa-edit mr-1\"></i>\n                        <span i18n>Edit</span>\n                    </span>\n                </div>\n            </div>\n        </li>\n    </div>\n </ul>\n\n <div class=\"card\" *ngIf=\"isEditStatus\">\n     <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-edit font-weight-bolder text-info mr-1\"></i>\n        <span i18n>Edit Pipeline</span>\n        <span class=\"ml-1 text-info\">{{selectedPipelineID}}</span>\n        <span class=\"float-right\">\n            <button class=\"btn btn-sm btn-success mr-1\" (click)=\"save()\" [disabled]=\"!pipelineTopic || !validate()\" i18n>Save</button>\n            <button class=\"btn btn-sm btn-secondary\" (click)=\"cancel()\" i18n>Cancel</button>\n        </span>\n     </div>\n     <div class=\"card-body\">\n        <div>\n            <form class=\"has-validation\">\n                <div class=\"form-group row\">\n                    <label class=\"col-sm-2 col-form-label\">\n                        <span>Pipeline ID</span>\n                    </label>\n                    <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" disabled name=\"PipelineID\" [ngModel]=\"selectedPipelineID\">\n                        \n                    </div>\n                </div>\n                <div class=\"form-group row\" *ngIf=\"!isDefaultPipelineIndetifier(selectedPipelineID)\">\n                    <label class=\"col-sm-2 col-form-label\">\n                        <span>Pipeline Topic</span>\n                    </label>\n                    <div class=\"col-sm-10\">\n                        <input type=\"text\" class=\"form-control\" [class.is-invalid]=\"!pipelineTopic\" name=\"PipelineTopic\" [(ngModel)]=\"pipelineTopic\">\n                        <div class=\"invalid-feedback\">\n                            <small i18n>the pipeline topic can't be empty!</small>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n        <div class=\"card\">\n            <div class=\"card-header font-weight-bold\">\n                <i class=\"fa fa-tag text-info mr-1\"></i>\n                <span i18n>Pipline Functions Setting</span>\n            </div>\n            <div class=\"card-body\">\n                <app-pipeline-function \n                [(selectedFunctionsName)]=\"selectedFunctionsName\"\n                [(availableFunctions)]=\"availableFunctions\"></app-pipeline-function>\n            </div>\n        </div>\n     </div>\n </div>\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Pipeline, PerTopicPipeline } from '../../../contracts/v3/appsvc/pipeline';\nimport { Functions } from \"../../../contracts/v3/appsvc/functions\";\nimport { Writable } from \"../../../contracts/v3/appsvc/writable\";\nimport { RegistryCenterService } from \"../../../services/registry-center.service\";\nimport { MessageService } from \"../../../message/message.service\";\n\n@Component({\n  selector: 'app-appsvc-pipeline',\n  templateUrl: './pipeline.component.html',\n  styleUrls: ['./pipeline.component.css'],\n})\nexport class PipelineComponent implements OnInit, OnChanges {\n\n  defaultPipelineIdentifier = 'default-pipeline' //unique and immutable\n  isEditStatus: boolean = false;\n\n  selectedFunctionsName: string[] = []\n  availableFunctions: Functions | any\n  pipelineTopic: string = '#'\n  selectedPipelineID: string = ''\n\n  @Input() appServiceKey: string = ''\n  @Input() pipeline: Pipeline\n\n  perTopicPipelines: PerTopicPipeline[]  = []\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private registrySvc: RegistryCenterService,\n    private msgSvc: MessageService) {\n    this.pipeline = {} as Pipeline\n    this.availableFunctions = {}\n  }\n\n  ngOnInit(): void {\n    this.renderPopoverComponent()\n  }\n\n  renderPopoverComponent() {\n    window.setTimeout(()=>{\n        $('[data-toggle=\"popover\"]').popover({\n            trigger: 'hover'\n          });\n    },200)\n  }\n\n  ngOnChanges(): void {\n    if (this.pipeline) {\n      if (this.pipeline.PerTopicPipelines) {\n        this.perTopicPipelines =  Object.values(this.pipeline.PerTopicPipelines)\n      }\n      this.availableFunctions = this.pipeline.Functions\n      this.selectedFunctionsName = this.pipeline.ExecutionOrder.split(',')\n    }\n  }\n\n  pipelineIDIsUnique(id: string): boolean {\n    if (id === this.selectedPipelineID) {\n      return true\n    }\n\n    if (id === this.defaultPipelineIdentifier) {\n      return false\n    }\n\n    let isUnique: boolean = true\n    this.perTopicPipelines.forEach((ptp) => {\n      if (id === ptp.Id) {\n        isUnique = false\n        return\n      }\n    })\n    return isUnique\n  }\n\n  isDefaultPipelineIndetifier(id: string): boolean {\n    if (id === this.defaultPipelineIdentifier) {\n      return  true\n    }\n    return false\n  }\n\n  edit(pipelineID: string) {\n    this.selectedPipelineID = pipelineID\n    if (this.isDefaultPipelineIndetifier(pipelineID)) {\n      this.selectedFunctionsName = this.pipeline.ExecutionOrder.split(',')\n    } else {\n      this.perTopicPipelines.forEach(ptp => {\n        if (pipelineID === ptp.Id) {\n          this.selectedFunctionsName = ptp.ExecutionOrder.split(',')\n          this.pipelineTopic = ptp.Topics\n        }\n      })\n    }\n    this.isEditStatus = true\n    this.renderPopoverComponent()\n  }\n\n  getFuncExecutionOrder(): string {\n    return this.selectedFunctionsName.join(',');\n  }\n\n  validate(): boolean {\n    let isValid: boolean = true\n\n    this.selectedFunctionsName.forEach(name => {\n      if (name.startsWith('PushToCore')) {\n        if (this.availableFunctions[name].Parameters.ValueType === 'Binary' &&\n        this.availableFunctions[name].Parameters.MediaType === '') {\n          isValid = false\n          return\n        }\n      }\n\n      if (name.startsWith('MQTTExport')) {\n        if (this.availableFunctions[name].Parameters.AuthMode !== 'none' &&\n        this.availableFunctions[name].Parameters.SecretPath === '') {\n          isValid = false\n          return\n        }\n      }\n    })\n\n    return isValid\n  }\n\n  save() {\n    let writableRequestObj = {} as Writable;\n    let pipelineRequestObj = {\n        PerTopicPipelines: {}\n    } as Pipeline\n\n    let functions: any | Functions = {}\n    this.selectedFunctionsName.forEach(funcName => {\n      functions[funcName] = this.availableFunctions[funcName]\n    })\n\n    pipelineRequestObj.Functions = functions\n\n    if (this.isDefaultPipelineIndetifier(this.selectedPipelineID)) {\n      pipelineRequestObj.ExecutionOrder = this.getFuncExecutionOrder()\n    } else {\n      for (const [key, ptp] of Object.entries(this.pipeline.PerTopicPipelines)) {\n        if (this.selectedPipelineID === ptp.Id) {\n          ptp.ExecutionOrder = this.getFuncExecutionOrder()\n          ptp.Topics = this.pipelineTopic\n          pipelineRequestObj.PerTopicPipelines[key] = ptp\n          break\n        }\n      }\n    }\n\n    writableRequestObj.Pipeline = pipelineRequestObj;\n    this.registrySvc.deployToConsul({'Writable': writableRequestObj}, this.appServiceKey).subscribe(()=>{\n      this.msgSvc.success('deploy Pipeline configuration',`service: ${this.appServiceKey}`);\n      this.isEditStatus = false\n      this.router.navigate(['../app-service-list'],{relativeTo: this.route})\n    })\n  }\n\n  cancel() {\n    this.isEditStatus = false\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-tags mr-2 text-danger\"></i>\n        <span class=\"font-weight-bold\">\n          <span class=\"mr-2 text-info\">{{appServiceKey}}</span>\n          <span i18n>Configurable Setting</span>\n        </span>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <ul class=\"nav nav-tabs card-header-tabs font-weight-bold\">\n            <li class=\"nav-item\" (click)=\"configurableSectionChange('Trigger')\">\n                <a class=\"nav-link\" role=\"button\" [class.active]=\"configurableSection === 'Trigger'\" i18n>Trigger</a>\n              </li>\n            <li class=\"nav-item\" (click)=\"configurableSectionChange('PipelineFunc')\">\n                <a class=\"nav-link\" role=\"button\" [class.active]=\"configurableSection === 'PipelineFunc'\" i18n>Pipelines</a>\n            </li>\n            <li class=\"nav-item\" (click)=\"configurableSectionChange('InsecureSecrets')\">\n                <a class=\"nav-link\" role=\"button\" [class.active]=\"configurableSection === 'InsecureSecrets'\" i18n>Insecure Secrets</a>\n            </li>\n            <li class=\"nav-item\" (click)=\"configurableSectionChange('StoreAndForward')\">\n                <a class=\"nav-link\" role=\"button\" [class.active]=\"configurableSection === 'StoreAndForward'\" i18n>Store And Forward</a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"card-body\">\n            <div *ngIf=\"configurableSection === 'Trigger'\">\n                <app-appsvc-trigger [configTrigger]=\"configTrigger\"></app-appsvc-trigger>\n            </div>\n            <div *ngIf=\"configurableSection === 'PipelineFunc'\">\n                <app-appsvc-pipeline \n                [appServiceKey]=\"appServiceKey\"\n                [pipeline]=\"configWritable.Pipeline\"></app-appsvc-pipeline>\n            </div>\n            <div *ngIf=\"configurableSection === 'InsecureSecrets'\">\n                <app-appsvc-insecure-secrets\n                [appServiceKey]=\"appServiceKey\"\n                [insecureSecrets]=\"configWritable.InsecureSecrets\"></app-appsvc-insecure-secrets>\n            </div>\n            <div *ngIf=\"configurableSection === 'StoreAndForward'\">\n                <app-appsvc-store-and-forward \n                [appServiceKey]=\"appServiceKey\"\n                [storeAndForward]=\"configWritable.StoreAndForward\"></app-appsvc-store-and-forward>\n            </div>\n          </div>\n        </div>\n    </div>\n </div>\n\n\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit  } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { RegistryCenterService } from '../..//services/registry-center.service';\nimport { Trigger } from '../../contracts/v3/appsvc/trigger';\nimport { Writable } from '../../contracts/v3/appsvc/writable';\n\n@Component({\n    selector: 'app-app-service-configurable',\n    templateUrl: './app-service-configurable.component.html',\n    styleUrls: ['./app-service-configurable.component.css']\n})\nexport class AppServiceConfigurableComponent implements OnInit {\n    TirggerIdentifier = 'Trigger';\n    writableIdentifier = 'Writable';\n    configWritable: Writable;\n    configTrigger: Trigger;\n\n    configurableSection: string = \"PipelineFunc\"; // Trigger ,PipelineFunc, InsecureSecrets, StoreAndForward\n    appServiceKey: string = '';\n\n    constructor(private registrySvc: RegistryCenterService, private route: ActivatedRoute) {\n        this.configTrigger = {} as Trigger;\n        this.configWritable = {} as Writable;\n    }\n\n    ngOnInit(): void {\n        this.route.queryParams.subscribe(param => {\n            if (param['appSvcKey']) {\n                this.appServiceKey = param['appSvcKey'];\n                this.loadAppSvcConfig();\n            }\n        });\n        this.renderPopoverComponent();\n    }\n\n    renderPopoverComponent() {\n        window.setTimeout(()=>{\n            $('[data-toggle=\"popover\"]').popover({\n                trigger: 'hover'\n              });\n        },200)\n    }\n\n    loadAppSvcConfig() {\n        this.registrySvc.getAppSvcConfigBySvcKey(this.appServiceKey).subscribe((resp) => {\n            Object.assign(this.configTrigger, resp[this.TirggerIdentifier]);\n            Object.assign(this.configWritable, resp[this.writableIdentifier]);\n        })\n    }\n\n    configurableSectionChange(configSection: string) {\n        this.configurableSection = configSection;\n        this.renderPopoverComponent();\n    }\n}\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { mergeMap, take ,catchError} from 'rxjs/operators';\n\nimport { RegistryCenterService } from '../../services/registry-center.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistryCenterAliveGuard  {\n  constructor(private router: Router, private registrySvc: RegistryCenterService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return  this.checkAvailable(route,state);\n  }\n\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.canActivate(route,state)\n  }\n\n  checkAvailable(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.registrySvc.ping().pipe(\n      take(1),\n      catchError((error)=>{\n        if(error.status == 401) {\n          return this.router.navigate(['/login'],{\n            queryParams: {'svcName':'registry center','routerPath':`/${state.url.split('/')[1]}`}\n          })\n        }\n        return this.router.navigate(['/svc-unavailable'],{\n          queryParams: {'svcName':'registry center','routerPath':`/${state.url.split('/')[1]}`}\n        })\n      }),\n      mergeMap(() => {\n        return of(true)\n      })\n    )\n  }\n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppServiceComponent } from './app-service.component';\nimport { AppServiceListComponent } from './app-service-list/app-service-list.component';\nimport { AppServiceConfigurableComponent } from './app-service-configurable/app-service-configurable.component';\nimport { AuthGuard } from '../guards/auth/guard/auth.guard';\nimport { RegistryCenterAliveGuard } from '../guards/health/registry-center-alive.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppServiceComponent,\n    canActivate: [AuthGuard, RegistryCenterAliveGuard],\n    canActivateChild: [RegistryCenterAliveGuard],\n    children: [\n      {\n        path: '',\n        redirectTo: 'app-service-list',\n        pathMatch: 'full',\n      },\n      {\n        path: 'app-service-list',\n        component: AppServiceListComponent,\n      },\n      {\n        path: 'app-service-configurable',\n        component: AppServiceConfigurableComponent,\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AppServiceRoutingModule { }\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppServiceRoutingModule } from './app-service-routing.module';\nimport { AppServiceComponent } from './app-service.component';\nimport { AppServiceListComponent } from './app-service-list/app-service-list.component';\nimport { AppServiceConfigurableComponent } from './app-service-configurable/app-service-configurable.component';\n\nimport { DragHighlightDirective } from '../directives/drag-highlight.directive';\nimport { MetadataModule } from '../metadata/metadata.module';\nimport { PipelineFunctionComponent } from './app-service-configurable/pipeline-function/pipeline-function.component';\nimport { TriggerComponent } from './app-service-configurable/trigger/trigger.component';\nimport { InsecureSecretsComponent } from './app-service-configurable/insecure-secrets/insecure-secrets.component';\nimport { StoreAndForwardComponent } from './app-service-configurable/store-and-forward/store-and-forward.component';\nimport { PipelineComponent } from \"./app-service-configurable/pipeline/pipeline.component\";\nimport { HTTPExportComponent } from './app-service-configurable/pipeline-function/httpexport/httpexport.component';\nimport { AddTagsComponent } from './app-service-configurable/pipeline-function/add-tags/add-tags.component';\nimport { BatchComponent } from './app-service-configurable/pipeline-function/batch/batch.component';\nimport { FilterByDeviceNameComponent } from './app-service-configurable/pipeline-function/filter-by-device-name/filter-by-device-name.component';\nimport { FilterByProfileNameComponent } from './app-service-configurable/pipeline-function/filter-by-profile-name/filter-by-profile-name.component';\nimport { FilterBySourceNameComponent } from './app-service-configurable/pipeline-function/filter-by-source-name/filter-by-source-name.component';\nimport { FilterByResourceNameComponent } from './app-service-configurable/pipeline-function/filter-by-resource-name/filter-by-resource-name.component';\nimport { TransformComponent } from './app-service-configurable/pipeline-function/transform/transform.component';\nimport { CompressComponent } from './app-service-configurable/pipeline-function/compress/compress.component';\nimport { EncryptComponent } from './app-service-configurable/pipeline-function/encrypt/encrypt.component';\nimport { MQTTExportComponent } from './app-service-configurable/pipeline-function/mqttexport/mqttexport.component';\nimport { PushToCoreComponent } from './app-service-configurable/pipeline-function/push-to-core/push-to-core.component';\nimport { SetResponseDataComponent } from './app-service-configurable/pipeline-function/set-response-data/set-response-data.component';\nimport { JSONLogicComponent } from './app-service-configurable/pipeline-function/jsonlogic/jsonlogic.component';\n\n@NgModule({\n  declarations: [AppServiceComponent,AppServiceListComponent,\n    AppServiceConfigurableComponent,DragHighlightDirective, \n    PipelineFunctionComponent, TriggerComponent, \n    InsecureSecretsComponent, StoreAndForwardComponent, PipelineComponent, \n    HTTPExportComponent, AddTagsComponent, BatchComponent, FilterByDeviceNameComponent, \n    FilterByProfileNameComponent, FilterBySourceNameComponent, FilterByResourceNameComponent, \n    TransformComponent, CompressComponent, EncryptComponent, MQTTExportComponent, \n    PushToCoreComponent, SetResponseDataComponent, JSONLogicComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AppServiceRoutingModule,\n    MetadataModule\n  ]\n})\nexport class AppServiceModule { }\n"],"names":["AppServiceComponent","constructor","ngOnInit","static","this","t","core","Xpm","selectors","decls","vars","template","rf","ctx","i0","appSvc_r1","ServiceId","Port","_c4","AppServiceListComponent","registrySvc","appServiceList","getAllAppSvc","subscribe","svcEndpoints","forEach","svc","startsWith","push","i1","consts","i18n_0","$localize","AppServiceListComponent_li_7_Template","$event","_r4","ctx_r3","configTrigger","EdgexMessageBus","Type","ctx_r5","SubscribeHost","Host","ctx_r6","ctx_r7","Protocol","ctx_r8","SubscribeTopics","ctx_r9","PublishHost","ctx_r10","ctx_r11","ctx_r12","PublishTopic","ctx_r13","Optional","ClientId","ctx_r14","Qos","ctx_r15","KeepAlive","ctx_r16","Retained","ctx_r17","AutoReconnect","ctx_r18","ConnectTimeout","ctx_r19","authmode","ctx_r20","SkipCertVerify","ctx_r21","secretname","ctx_r0","_r23","ctx_r22","ExternalMqtt","Url","ctx_r24","ctx_r25","ctx_r26","ctx_r27","ctx_r28","ctx_r29","ctx_r30","QoS","ctx_r31","Retain","ctx_r32","ctx_r33","SecretPath","ctx_r34","AuthMode","ctx_r1","TriggerComponent","_configTrigger","triger","Object","assign","configTriggerChange","EventEmitter","HTTP","renderPopoverComponent","ngOnChanges","emit","window","setTimeout","$","popover","trigger","onTriggerSelected","inputs","outputs","features","TriggerComponent_div_21_Template","TriggerComponent_div_22_Template","TriggerComponent_div_23_Template","InsecureSecretsComponent","insecureSecrets","_insecureSecrets","is","route","router","msgSvc","appServiceKey","insecureSecretsChange","DB","Secrets","mqtt","http","AES","save","writableRequestObj","InsecureSecrets","deployToConsul","Writable","success","navigate","relativeTo","i2","i3","Path","username","password","cacert","clientcert","clientkey","headervalue","key","StoreAndForwardComponent","storeAndForwardChange","storeAndForward","Enabled","StoreAndForward","MaxRetryCount","RetryInterval","DragHighlightDirective","el","classes","ondragover","event","preventDefault","split","v","nativeElement","classList","add","ondragenter","ondragend","ondragleave","remove","ondragexit","ondrop","lG2","hostBindings","HTTPExportComponent","httpExportChange","httpExport","Parameters","Method","MimeType","PersistOnError","ContinueOnSendError","ReturnInputData","HeaderName","SecretName","AddTagsComponent","addTagsChange","addTags","Tags","_r3","ctx_r2","batch","BatchThreshold","_r5","ctx_r4","TimeInterval","BatchComponent","batchChange","Mode","IsEventData","BatchComponent_div_13_Template","BatchComponent_div_14_Template","FilterByDeviceNameComponent","filterByDeviceNameChange","deviceNames","filterByDeviceName","FilterOut","DeviceNames","onDeviceNamesChange","join","FilterByProfileNameComponent","filterByProfileNameChange","profileNames","filterByProfileName","ProfileNames","onDeviceProfileSelectedEvent","profiles","FilterBySourceNameComponent","filterBySourceNameChange","filterBySourceName","SourceNames","FilterByResourceNameComponent","filterByResourceNameChange","filterByResourceName","ResourceNames","TransformComponent","transformChange","transform","CompressComponent","compressChange","compress","Algorithm","EncryptComponent","encryptChange","encrypt","_r2","mqttExport","MQTTExportComponent","mqttExportChange","SkipVerify","authModeIsNotNone","BrokerAddress","Topic","MQTTExportComponent_div_84_Template","pushToCore","MediaType","PushToCoreComponent","pushToCoreChange","ValueType","valueTypeIsBinary","ProfileName","DeviceName","ResourceName","PushToCoreComponent_div_47_Template","SetResponseDataComponent","setResponseDataChange","setResponseData","ResponseContentType","JSONLogicComponent","jsonLogicChange","jsonLogic","Rule","funcName_r5","_r7","$implicit","ondragstartBuiltinFunction","isSelected","builtinFuncZoneIdentifier","funcName_r8","_r10","ondragstartFuncExecutionOrder","funcExecOrderZoneIdentifier","_r29","funcName_r12","availableFunctions","_r33","_r37","ctx_r36","_r41","ctx_r40","_r45","ctx_r44","_r49","ctx_r48","_r53","ctx_r52","_r57","ctx_r56","_r61","ctx_r60","_r65","ctx_r64","_r69","ctx_r68","ctx_r23","_r73","ctx_r72","_r77","ctx_r76","_r81","ctx_r80","_r85","ctx_r84","unselectFunc","PipelineFunctionComponent_div_30_div_6_div_13_Template","PipelineFunctionComponent_div_30_div_6_div_14_Template","PipelineFunctionComponent_div_30_div_6_div_15_Template","PipelineFunctionComponent_div_30_div_6_div_16_Template","PipelineFunctionComponent_div_30_div_6_div_17_Template","PipelineFunctionComponent_div_30_div_6_div_18_Template","PipelineFunctionComponent_div_30_div_6_div_19_Template","PipelineFunctionComponent_div_30_div_6_div_20_Template","PipelineFunctionComponent_div_30_div_6_div_21_Template","PipelineFunctionComponent_div_30_div_6_div_22_Template","PipelineFunctionComponent_div_30_div_6_div_23_Template","PipelineFunctionComponent_div_30_div_6_div_24_Template","PipelineFunctionComponent_div_30_div_6_div_25_Template","PipelineFunctionComponent_div_30_div_6_div_26_Template","PipelineFunctionComponent_div_30_div_6_div_27_Template","startWith","PipelineFunctionComponent_div_30_div_6_Template","selectedFunctionsName","PipelineFunctionComponent","_availableFunctions","funcs","_selectedFunctionsName","funcNames","i","trim","objectKeys","keys","availableFunctionsChange","selectedFunctionsNameChange","builtinFunctions","initBuiltinFunctions","setSelectedDevices","setSelectedProfiles","availableFuncName","builtinFuncName","name","FilterByDeviceName","FilterByProfileName","AddTags","Batch","FilterBySourceName","FilterByResourceName","Transform","Compress","Encrypt","HTTPExport","MQTTExport","PushToCore","SetResponseData","JSONLogic","selectOnefunc","funcName","indexOf","splice","getFuncExecutionOrder","selected","ondropBuiltinFunction","dataTransfer","getData","setData","sortSelectedFuncsExecuterOrder","src","dest","slice","ondropFuncExecutionOrder","sourceFuncName","sourceElementId","targetElementId","target","id","sourceElement","document","getElementById","targetFuncName","replace","ondragoverFuncExecutionOrder","addClass","PipelineFunctionComponent_table_8_Template","PipelineFunctionComponent_span_9_Template","PipelineFunctionComponent_table_28_Template","PipelineFunctionComponent_span_29_Template","PipelineFunctionComponent_div_30_Template","length","ptp_r4","_r6","edit","Id","ExecutionOrder","Topics","PipelineComponent_ul_0_div_16_li_1_Template","perTopicPipelines","_r8","defaultPipelineIdentifier","PipelineComponent_ul_0_div_16_Template","pipeline","_r11","pipelineTopic","_r13","cancel","PipelineComponent_div_1_div_21_Template","selectedPipelineID","validate","isDefaultPipelineIndetifier","PipelineComponent","isEditStatus","PerTopicPipelines","values","Functions","pipelineIDIsUnique","isUnique","ptp","pipelineID","isValid","pipelineRequestObj","functions","entries","Pipeline","PipelineComponent_ul_0_Template","PipelineComponent_div_1_Template","configWritable","AppServiceConfigurableComponent","TirggerIdentifier","writableIdentifier","configurableSection","queryParams","param","appSvcKey","loadAppSvcConfig","getAppSvcConfigBySvcKey","resp","configurableSectionChange","configSection","AppServiceConfigurableComponent_div_25_Template","AppServiceConfigurableComponent_div_26_Template","AppServiceConfigurableComponent_div_27_Template","AppServiceConfigurableComponent_div_28_Template","RegistryCenterAliveGuard","canActivate","state","checkAvailable","canActivateChild","ping","pipe","take","catchError","error","status","svcName","routerPath","url","mergeMap","of","Yz7","factory","ɵfac","providedIn","routes","path","component","AuthGuard","children","redirectTo","pathMatch","AppServiceRoutingModule","oAB","cJS","RouterModule","forChild","AppServiceModule","CommonModule","FormsModule","MetadataModule"],"sourceRoot":"webpack:///"}