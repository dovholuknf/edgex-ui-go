{"version":3,"file":"934.0fa3a083e792a4f4.js","mappings":"sJAGA,MAAMA,EAAiB,GAMhB,IAAMC,EAAoB,MAA3B,MAAOA,EAAoBC,SAAAC,KAAA,mBAAAC,iBAApBH,EAAoB,EAAAC,SAAAC,KAAA,UAAAE,EAAAC,IAAA,MAApBL,IAAoBC,SAAAC,KAAA,UAAAE,EAAAE,IAAA,UAHrBC,KAAaC,SAAST,GACtBQ,eAECP,CAAoB,KCepBS,EAAa,MAApB,MAAOA,EAAaR,SAAAC,KAAA,mBAAAC,iBAAbM,EAAa,EAAAR,SAAAC,KAAA,UAAAE,EAAAC,IAAA,MAAbI,IAAaR,SAAAC,KAAA,UAAAE,EAAAE,IAAA,UATtBI,KACAC,KACAC,KACAZ,YAMSS,CAAa,0HCmBcI,MAAA,cAA8KA,MAAA,yBAAAC,GAAAD,MAAAE,GAAA,MAAAC,EAAAH,MAAA,UAAAA,MAAAG,EAAAC,WAAAH,EAAA,EAAAD,CAAwB,iBAAAC,GAAAD,MAAAE,GAAA,MAAAG,EAAAL,MAAA,UAAUA,MAAAK,EAAAC,gBAAAL,EAAuB,OAAM,GAA7OD,mEAA0DA,MAAA,YAAAO,EAAA,IAAAC,EAAA,IAAwCR,MAAA,UAAAS,EAAAC,gBAAA,OAAAV,CAAkC,UAAAS,EAAAL,sCAF5IJ,MAAA,WAAAA,CAA0D,aAElDA,MAAA,EAAAW,EAAA,gBACAX,MAAA,cAAqEA,MAAA,SAAGA,oEAD+DA,MAAA,GAAAA,MAAA,OAAAY,EAAAC,UAAAN,EAAAO,OAC1Fd,MAAA,GAAAA,MAAA,aAAAO,EAAA,IAAAC,EAAA,6CAK7CR,MAAA,cAA8KA,MAAA,yBAAAC,GAAAD,MAAAe,GAAA,MAAAC,EAAAhB,MAAA,UAAAA,MAAAgB,EAAAZ,WAAAH,EAAA,EAAAD,CAAwB,iBAAAC,GAAAD,MAAAe,GAAA,MAAAE,EAAAjB,MAAA,UAAUA,MAAAiB,EAAAX,gBAAAL,EAAuB,OAAM,GAA7OD,mEAA0DA,MAAA,YAAAO,EAAA,IAAAC,EAAA,IAAwCR,MAAA,UAAAkB,EAAAR,gBAAA,OAAAV,CAAkC,UAAAkB,EAAAd,sCAF5IJ,MAAA,WAAAA,CAA0D,aAElDA,MAAA,EAAAmB,EAAA,gBACAnB,MAAA,cAAqEA,MAAA,SAAGA,oEAD+DA,MAAA,GAAAA,MAAA,OAAAoB,EAAAP,UAAAN,EAAAO,OAC1Fd,MAAA,GAAAA,MAAA,aAAAO,EAAA,IAAAC,EAAA,6CAdjER,MAAA,OAAAA,CAAiH,OAAjHA,CAAiH,cACnCA,MAAA,iBAAAC,GAAA,MAAAM,EAAAP,MAAAqB,GAAAC,UAAAC,EAAAvB,QAAA,OAASA,MAAAuB,EAAAC,UAAAvB,EAAAM,GAAqB,GAApGP,UACJA,MAAA,WAA4BA,MAAA,GAAYA,QACxCA,MAAA,OAAAA,CAAI,SAEIA,MAAA,EAAAyB,EAAA,cAMAzB,MAAA,EAAA0B,EAAA,cAMJ1B,UAGJA,MAAA,QAAIA,MAAA,IAAWA,QACfA,MAAA,SAAIA,MAAA,IAAYA,gDArBkDA,MAAA,eAAA2B,EAAAd,UAAAN,EAAAO,OACxBd,MAAA,GAAAA,MAAA,UAAA2B,EAAAd,UAAAN,EAAAO,OACdd,MAAA,GAAAA,MAAAO,EAAAO,MAGdd,MAAA,GAAAA,MAAA,OAAAO,EAAAqB,KAMA5B,MAAA,GAAAA,MAAA,OAAAO,EAAAsB,KASV7B,MAAA,GAAAA,MAAAO,EAAAuB,KACA9B,MAAA,GAAAA,MAAAO,EAAAwB,OC9BrB,IAAMC,EAAwC,MAA/C,MAAOA,EAUXC,YAAoBC,GAAA7C,KAAA6C,SALV7C,KAAA8C,2BAA6B,IAAIC,MAC3C/C,KAAAgD,iCAAkD,GACzChD,KAAAe,WAAsB,GACrBf,KAAAiD,mBAAqB,IAAIF,KAEW,CAE9CG,WACElD,KAAK6C,OACJM,yCAAyCnD,KAAKoD,YAC9CC,UAAWC,IACVtD,KAAKgD,iCAAmCM,EAAKC,kBAAkBC,cAEnE,CAEAvC,gBAAgBwC,EAAY1C,GAGxBf,KAAKe,WAFO0C,EAAMC,OACVC,QACU5C,EAEA,GAEpBf,KAAKiD,mBAAmBW,KAAK5D,KAAKe,WACpC,CAEAS,UAAUC,GACR,OAAOzB,KAAK6D,iBAAiBpC,OAASA,CACxC,CAEAJ,gBAAgByC,GACd,OAAO9D,KAAKe,aAAe+C,CAC7B,CAEAC,eAAeJ,GACb,OAAIA,IAGG,CACT,CAEAxB,UAAUsB,EAAYO,GAGlBhE,KAAK6D,gBAFUJ,EAAMC,OACVC,QACYK,EAEA,GAEzBhE,KAAK8C,2BAA2Bc,KAAK5D,KAAK6D,iBAC1C7D,KAAKiD,mBAAmBW,UAAKK,EAC/B,CAAClE,SAAAC,KAAA,mBAAAC,iBAtDU0C,GAAwChC,MAAAuD,KAAA,EAAAnE,SAAAC,KAAA,UAAAE,EAAAiE,IAAA,MAAxCxB,EAAwCyB,UAAA,8CAAAC,OAAA,CAAAjB,WAAA,aAAAS,gBAAA,kBAAA9C,WAAA,cAAAuD,QAAA,CAAAxB,2BAAA,6BAAAG,mBAAA,sBAAAsB,MAAA,GAAAC,KAAA,EAAAC,OAAA,ijCAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDTrDhE,MAAA,UAAAA,CAA2B,WAEnBA,MAAA,SACAA,MAAA,SAAAA,CAAM,YAAyBA,MAAA,GAAcA,QAAQA,MAAA,+BAAwBA,UAEjFA,MAAA,UAAAA,CAA2B,UAA3BA,CAA2B,YAA3BA,CAA2B,aAA3BA,CAA2B,QAA3BA,CAA2B,WAKOA,MAAA,QAACA,QACjBA,MAAA,WAAgBA,MAAA,WAAIA,QACpBA,MAAA,WAAgBA,MAAA,aAAMA,QACtBA,MAAA,WAAgBA,MAAA,UAAGA,QACnBA,MAAA,WAAgBA,MAAA,WAAIA,YAG1BA,MAAA,YACIA,MAAA,GAAAkE,EAAA,aAuBJlE,uBAtCuBA,MAAA,GAAAA,MAAAiE,EAAAxB,YAeCzC,MAAA,IAAAA,MAAA,UAAAiE,EAAA5B,yFCT3BL,CAAwC,6CCOjChC,MAAA,OAAAA,CAAoG,OAApGA,CAAoG,WAApGA,CAAoG,cAGWA,MAAA,iBAAAC,GAAA,MAAAkE,EAAAnE,MAAAoE,GAAA9C,UAAA+C,EAAArE,QAAA,OAASA,MAAAqE,EAAA7C,UAAAvB,EAAAkE,GAA+B,GAA3InE,YAGRA,MAAA,WAA4BA,MAAA,GAA4BA,QACxDA,MAAA,WAA4BA,MAAA,GAA6BA,QACzDA,MAAA,OAAAA,CAAI,aACgDA,MAAA,yBAAAmE,EAAAnE,MAAAoE,GAAA9C,UAAAF,EAAApB,QAAA,OAASA,MAAAoB,EAAAkD,SAAAH,GAAuB,GAAEnE,MAAA,mBAAYA,kDATlDA,MAAA,eAAA2B,EAAAd,UAAAsD,IAGsBnE,MAAA,GAAAA,MAAA,UAAA2B,EAAAd,UAAAsD,IAG1CnE,MAAA,GAAAA,MAAAmE,EAAA1B,YACAzC,MAAA,GAAAA,MAAAmE,EAAAI,cCd7C,IAAMC,EAA8B,MAArC,MAAOA,EASXvC,YAAoBC,GAAA7C,KAAA6C,SAPpB7C,KAAAoF,kBAAyC,GAE/BpF,KAAAqF,2BAA6B,IAAItC,MAC3C/C,KAAAsF,WAAqB,EACrBtF,KAAAuF,UAAoB,EACpBvF,KAAAwF,YAAsBxF,KAAKsF,WAAa,GAAKtF,KAAKuF,SAEJ,CAE9CrC,WACElD,KAAKyF,iCACP,CAEAA,kCACEzF,KAAK6C,OACJ6C,gCAAgC1F,KAAKwF,WAAYxF,KAAKuF,WACtDlC,UAAWC,IACVtD,KAAKoF,kBAAoB9B,EAAKqC,oBAElC,CAEAnE,UAAUoE,GACR,OAAO5F,KAAK6F,uBAAuBzC,aAAewC,EAAIxC,UACxD,CAEAjB,UAAUsB,EAAYmC,GAGlB5F,KAAK6F,sBAFUpC,EAAMC,OACVC,QACkBiC,OAEA3B,EAE/BjE,KAAKqF,2BAA2BzB,KAAK5D,KAAK6F,sBAC5C,CAEAZ,SAASW,GACP5F,KAAK6F,sBAAwBD,EAC7B5F,KAAKqF,2BAA2BzB,KAAK5D,KAAK6F,sBAC5C,CAEAC,iBACE9F,KAAK+F,kBACL/F,KAAKgG,gBACLhG,KAAKyF,iCACP,CAEAQ,UACEjG,KAAKgG,eAAc,GACnBhG,KAAKyF,iCACP,CAEAS,WACElG,KAAKgG,cAAc,GACnBhG,KAAKyF,iCACP,CAEAO,cAAcG,GACF,IAANA,EACFnG,KAAKsF,YAAc,GACJ,IAANa,IACTnG,KAAKsF,YAAc,GAErBtF,KAAKwF,YAAcxF,KAAKsF,WAAa,GAAKtF,KAAKuF,SACjD,CAEAQ,kBACE/F,KAAKsF,WAAa,CACpB,CAACvF,SAAAC,KAAA,mBAAAC,iBArEUkF,GAA8BxE,MAAAuD,KAAA,EAAAnE,SAAAC,KAAA,UAAAE,EAAAiE,IAAA,MAA9BgB,EAA8Bf,UAAA,mCAAAC,OAAA,CAAAwB,sBAAA,yBAAAvB,QAAA,CAAAe,2BAAA,8BAAAd,MAAA,GAAAC,KAAA,EAAAC,OAAA,g2BAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDT1ChE,MAAA,UAAAA,CAAkB,WAEXA,MAAA,SAAuCA,MAAA,gCAC1CA,QACAA,MAAA,UAAAA,CAA2B,UAA3BA,CAA2B,YAA3BA,CAA2B,YAA3BA,CAA2B,OAA3BA,CAA2B,UAKMA,MAAA,QAACA,QACjBA,MAAA,WAAgBA,MAAA,aAAMA,QACtBA,MAAA,WAAgBA,MAAA,oBAAaA,QAC7BA,MAAA,WAAgBA,MAAA,yBAAkBA,YAGxCA,MAAA,YACIA,MAAA,GAAAyF,EAAA,aAYJzF,cAIXA,MAAA,WAAAA,CAAwC,YAAxCA,CAAwC,WAAxCA,CAAwC,WAAxCA,CAAwC,cAIEA,MAAA,qBAAcA,UAE7CA,MAAA,WAAAA,CAA4B,gBACsCA,MAAA,yBAAAC,GAAA,OAAAgE,EAAAW,UAAA3E,CAAA,EAAAD,CAAuB,kCAAkBiE,EAAAkB,gBAAgB,GACnHnF,MAAA,gBAAkBA,MAAA,QAACA,QACnBA,MAAA,gBAAmBA,MAAA,SAAEA,QACrBA,MAAA,gBAAmBA,MAAA,SAAEA,YAG7BA,MAAA,WAAAA,CAA2B,gBACOA,MAAA,0BAASiE,EAAAqB,SAAS,GAAiCtF,MAAA,WAAwCA,MAAA,gBAAQA,UAErIA,MAAA,WAAAA,CAAuB,gBACWA,MAAA,0BAASiE,EAAAsB,UAAU,GAAyDvF,MAAA,YAAKA,MAAA,WAAwCA,yBAjCzHA,MAAA,IAAAA,MAAA,UAAAiE,EAAAQ,mBAuBgCzE,MAAA,GAAAA,MAAA,UAAAiE,EAAAW,WAOZ5E,MAAA,GAAAA,MAAA,eAAAiE,EAAAU,YAGC3E,MAAA,GAAAA,MAAA,WAAAiE,EAAAW,UAAAX,EAAAQ,kBAAAiB,4MCxC1DlB,CAA8B,6CCT3CxE,MAAA,WAAgDA,MAAA,iBAAAC,GAAAD,MAAAoE,GAAA,MAAAC,EAAArE,QAAA,OAASA,MAAAqE,EAAAsB,MAAA1F,GAAa,GAAED,iDAkB5DA,MAAA,WAAAA,CAA2D,WAA3DA,CAA2D,UAA3DA,CAA2D,UAA3DA,CAA2D,UAGLA,MAAA,mBAAAA,MAAAE,GAAA,MAAAC,EAAAH,MAAA,UAASA,MAAAG,EAAAyF,8BAA6B,GAAgB5F,MAAA,2BAAqBA,UACvHA,MAAA,WAAuDA,MAAA,GAAcA,uCAAdA,MAAA,GAAAA,MAAAoB,EAAAqB,qDAU7DzC,MAAA,QAAAA,CAAuC,gDAGnCA,MAAA,8BAAAC,GAAAD,MAAA6F,GAAA,MAAAxF,EAAAL,MAAA,UAAsBA,MAAAK,EAAAyF,oBAAA7F,GAA2B,EAAjDD,CAAkD,sCAAAC,GAAAD,MAAA6F,GAAA,MAAAE,EAAA/F,MAAA,UAGpBA,MAAA+F,EAAAC,kBAAA/F,GAAyB,GAAED,mCAJzDA,MAAA,GAAAA,MAAA,kBAAAS,EAAAyC,gBAAAlD,CAAmC,aAAAS,EAAAgC,WAAnCzC,CAAmC,aAAAS,EAAAL,qDAlBnDJ,MAAA,WAAAA,CAA2D,YAEnDA,MAAA,EAAAiG,EAAA,cAQAjG,MAAA,WAAAA,CAA2B,QAA3BA,CAA2B,qCAInBA,MAAA,sCAAAC,GAAAD,MAAAkG,GAAA,MAAAhF,EAAAlB,QAAA,OAA8BA,MAAAkB,EAAAiF,wBAAAlG,GAA+B,GAAED,UAEnEA,MAAA,EAAAoG,EAAA,cAQJpG,oCAtBMA,MAAA,GAAAA,MAAA,QAAAqG,EAAAC,0BASGtG,MAAA,GAAAA,MAAA,UAAAqG,EAAAC,yBAAA,WAEDtG,MAAA,GAAAA,MAAA,wBAAAqG,EAAAnB,uBAGElF,MAAA,GAAAA,MAAA,QAAAqG,EAAAC,2BCzBf,IAAMC,EAAmC,MAA1C,MAAOA,EAeXtE,cAbA5C,KAAAmH,SAAmB,EACVnH,KAAAoH,UAAoB,EACpBpH,KAAAoD,WAAqB,GACrBpD,KAAAe,WAAqB,GACrBf,KAAAqH,YAAsB,GACtBrH,KAAAsH,YAAsB,GAIrBtH,KAAAuH,qBAAuB,IAAIxE,MAC3B/C,KAAAwH,eAAiB,IAAIzE,MAC/B/C,KAAAiH,0BAAoC,EAGlCjH,KAAK6D,gBAAkB,EACzB,CAEAX,WACElD,KAAK6F,sBAAwB,CAACzC,WAAapD,KAAKoD,YAChDpD,KAAK6D,gBAAkB,CACrBpC,KAAMzB,KAAKqH,YACX3E,KAAM1C,KAAKsH,YAEf,CAEAR,wBAAwBW,GACtB,IAAKA,EAIH,OAHAzH,KAAK6F,sBAAwB4B,EAC7BzH,KAAKe,WAAa,QAClBf,KAAK6D,gBAAkB,IAGzB7D,KAAK6F,sBAAwB4B,EAC7BzH,KAAKoD,WAAapD,KAAK6F,sBAAsBzC,WAC7CpD,KAAKiH,0BAA2B,CAClC,CAEAR,oBAAoB3C,GAClB9D,KAAKe,WAAa+C,EAClB9D,KAAKwH,eAAe5D,KAAK5D,KAAKe,WAChC,CAEA4F,kBAAkBf,GAChB5F,KAAK6D,gBAAkB+B,EACvB5F,KAAKuH,qBAAqB3D,KAAK5D,KAAK6D,gBACtC,CAEA0C,8BACEvG,KAAKiH,0BAA2B,CAClC,CAEAS,OAAOjE,GACLA,EAAMkE,2BAEJ3H,KAAKmH,SADHnH,KAAKmH,OAKX,CAEAb,MAAM7C,GACJA,EAAMmE,kBACN5H,KAAKmH,SAAU,CACjB,CAACpH,SAAAC,KAAA,mBAAAC,iBAjEUiH,EAAmC,EAAAnH,SAAAC,KAAA,UAAAE,EAAAiE,IAAA,MAAnC+C,EAAmC9C,UAAA,yCAAAC,OAAA,CAAA+C,SAAA,WAAAhE,WAAA,aAAArC,WAAA,aAAAsG,YAAA,cAAAC,YAAA,cAAAzD,gBAAA,mBAAAS,QAAA,CAAAiD,qBAAA,uBAAAC,eAAA,kBAAAjD,MAAA,GAAAC,KAAA,EAAAC,OAAA,k9BAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDPhDhE,MAAA,EAAAkH,EAAA,aACAlH,MAAA,UAAAA,CAAuB,WACqBA,MAAA,iBAAAC,GAAA,OAASgE,EAAA8C,OAAA9G,EAAc,GAC3DD,MAAA,aAEAA,MAAA,yBAAAC,GAAA,OAAAgE,EAAAf,gBAAAnB,KAAA9B,CAAA,GAFAD,QAKAA,MAAA,UAAAA,CAAgC,YACiBA,MAAA,SAAkCA,UAEnFA,MAAA,UAAAA,CAAiE,WACtDA,MAAA,iDAA2CA,YAI1DA,MAAA,GAAAmH,EAAA,aA2BHnH,eA3CgCA,MAAA,OAAAiE,EAAAuC,SAMzBxG,MAAA,GAAAA,MAAA,eAAAiE,EAAAf,gBAAAnB,OAAAkC,EAAA7D,aAAA6D,EAAAwC,SAAAzG,CAAuE,WAAAiE,EAAAf,gBAAAnB,MAAAkC,EAAA7D,YAAA6D,EAAAwC,UADvEzG,MAAA,UAAAiE,EAAAf,gBAAAnB,MAWE/B,MAAA,GAAAA,MAAA,OAAAiE,EAAAuC,4ZCTGD,CAAmC","names":["routes","CommandRoutingModule","static","this","t","core","oAB","cJS","RouterModule","forChild","CommandModule","CommonModule","FormsModule","ReactiveFormsModule","i0","$event","_r7","ctx_r6","httpMethod","ctx_r8","onMethodChecked","cmd_r1","i_r2","ctx_r5","isMethodChecked","DeviceAssociatedCoreCommandListComponent_tr_23_div_7_input_2_Template","ctx_r3","isChecked","name","_r13","ctx_r12","ctx_r14","ctx_r11","DeviceAssociatedCoreCommandListComponent_tr_23_div_8_input_2_Template","ctx_r4","_r18","$implicit","ctx_r17","selectOne","DeviceAssociatedCoreCommandListComponent_tr_23_div_7_Template","DeviceAssociatedCoreCommandListComponent_tr_23_div_8_Template","ctx_r0","get","set","url","path","DeviceAssociatedCoreCommandListComponent","constructor","cmdSvc","singleCoreCmdSelectedEvent","EventEmitter","deviceAssociatedCoreCommandsList","coreCmdMethodEvent","ngOnInit","findDeviceAssociatedCommnadsByDeviceName","deviceName","subscribe","resp","deviceCoreCommand","coreCommands","event","target","checked","emit","coreCmdSelected","method","radioUnchecked","coreCmd","undefined","i1","Xpm","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","DeviceAssociatedCoreCommandListComponent_tr_23_Template","deviceCoreCmd_r1","_r3","ctx_r2","checkOne","profileName","DeviceCoreCommandListComponent","deviceCoreCmdList","deviceCoreCmdSelectedEvent","pagination","pageLimit","pageOffset","findAllDeviceCoreCmdsPagination","allDeviceCoreCommandsPagination","deviceCoreCommands","cmd","deviceCoreCmdSelected","onPageSelected","resetPagination","setPagination","prePage","nextPage","n","DeviceCoreCommandListComponent_tr_18_Template","length","close","backtoDeviceCoreCommandList","_r9","onCmdMethodSelected","ctx_r10","onCoreCmdSelected","DeviceCoreCommandComboListComponent_div_10_div_2_Template","_r12","onDeviceCoreCmdSelected","DeviceCoreCommandComboListComponent_div_10_div_6_Template","ctx_r1","deviceCoreCmdListVisible","DeviceCoreCommandComboListComponent","visible","validate","commandName","commandPath","commandSelectedEvent","cmdMethodEvent","deviceCoreCmd","toggle","stopImmediatePropagation","stopPropagation","DeviceCoreCommandComboListComponent_div_0_Template","DeviceCoreCommandComboListComponent_div_10_Template"],"sourceRoot":"webpack:///","sources":["./src/app/command/command-routing.module.ts","./src/app/command/command.module.ts","./src/app/command/device-core-command/device-associated-core-command-list/device-associated-core-command-list.component.html","./src/app/command/device-core-command/device-associated-core-command-list/device-associated-core-command-list.component.ts","./src/app/command/device-core-command/device-core-command-list/device-core-command-list.component.html","./src/app/command/device-core-command/device-core-command-list/device-core-command-list.component.ts","./src/app/command/device-core-command/device-core-command-combo-list/device-core-command-combo-list.component.html","./src/app/command/device-core-command/device-core-command-combo-list/device-core-command-combo-list.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CommandRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { CommandRoutingModule } from './command-routing.module';\nimport { DeviceCoreCommandComboListComponent } from './device-core-command/device-core-command-combo-list/device-core-command-combo-list.component';\nimport { DeviceAssociatedCoreCommandListComponent } from './device-core-command/device-associated-core-command-list/device-associated-core-command-list.component';\nimport { DeviceCoreCommandListComponent } from './device-core-command/device-core-command-list/device-core-command-list.component';\nimport { CommandServiceTemplateComponent } from './command-service-template/command-service-template.component';\n\n\n@NgModule({\n  declarations: [DeviceCoreCommandComboListComponent, DeviceAssociatedCoreCommandListComponent, DeviceCoreCommandListComponent, CommandServiceTemplateComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommandRoutingModule\n  ],\n  exports: [\n    DeviceCoreCommandComboListComponent, DeviceAssociatedCoreCommandListComponent, DeviceCoreCommandListComponent, CommandServiceTemplateComponent\n  ]\n})\nexport class CommandModule { }\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card border-0\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-list text-danger mr-2\"></i>\n        <span> <span class=\"text-info\">{{deviceName}}</span> Associated Commands List</span>\n    </div>\n    <div class=\"card-body p-0\">\n        <div class=\"table-responsive \">\n            <table class=\"table table-hover text-truncate \">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Method</th>\n                      <th scope=\"col\">URL</th>\n                      <th scope=\"col\">Path</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let cmd of deviceAssociatedCoreCommandsList;let i=index;\" [class.table-active]=\"isChecked(cmd.name)\">\n                        <td><input type=\"checkbox\" role=\"button\"  [checked]=\"isChecked(cmd.name)\" (click)=\"selectOne($event,cmd)\"></td>\n                        <td class=\"user-select-all\">{{cmd.name}}</td>\n                        <td>\n                            <div>\n                                <div *ngIf=\"cmd.get\" class=\"form-check form-check-inline\">\n                                    <span class=\"badge badge-secondary\">\n                                        <input class=\"form-check-input align-middle\" type=\"radio\" id=\"get-{{cmd}}-{{i}}\" name=\"cmdMethod\" [checked]=\"isMethodChecked('GET')\"  *ngIf=\"isChecked(cmd.name)\" value=\"GET\" [(ngModel)]=\"httpMethod\" (click)=\"onMethodChecked($event,'GET')\">\n                                        <label class=\"form-check-label align-middle\" for=\"get-{{cmd}}-{{i}}\">get</label>\n                                    </span>\n                                </div>\n                                <div *ngIf=\"cmd.set\" class=\"form-check form-check-inline\">\n                                    <span class=\"badge badge-secondary\">\n                                        <input class=\"form-check-input align-middle\" type=\"radio\" id=\"set-{{cmd}}-{{i}}\" name=\"cmdMethod\" [checked]=\"isMethodChecked('PUT')\"  *ngIf=\"isChecked(cmd.name)\" value=\"PUT\" [(ngModel)]=\"httpMethod\" (click)=\"onMethodChecked($event,'PUT')\">\n                                        <label class=\"form-check-label align-middle\" for=\"set-{{cmd}}-{{i}}\">set</label>\n                                    </span>\n                                </div>\n                            </div>\n                            \n                        </td>\n                        <td>{{cmd.url}}</td>\n                        <td>{{cmd.path}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CommandService } from '../../../services/command.service';\nimport { DeviceCoreCommandResponse } from '../../../contracts/v3/responses/device-core-command-response';\nimport { DeviceCoreCommand, CoreCommand } from '../../../contracts/v3/core-command';\n\n@Component({\n  selector: 'app-device-associated-core-command-list',\n  templateUrl: './device-associated-core-command-list.component.html',\n  styleUrls: ['./device-associated-core-command-list.component.css']\n})\nexport class DeviceAssociatedCoreCommandListComponent implements OnInit {\n\n  @Input() deviceName?: string;\n\n  @Input() coreCmdSelected?: CoreCommand;\n  @Output() singleCoreCmdSelectedEvent = new EventEmitter<CoreCommand>();\n  deviceAssociatedCoreCommandsList: CoreCommand[] = [];\n  @Input() httpMethod: string  = '';\n  @Output() coreCmdMethodEvent = new EventEmitter<string>();\n\n  constructor(private cmdSvc: CommandService) { }\n\n  ngOnInit(): void {\n    this.cmdSvc\n    .findDeviceAssociatedCommnadsByDeviceName(this.deviceName as string)\n    .subscribe((resp: DeviceCoreCommandResponse)=>{\n      this.deviceAssociatedCoreCommandsList = resp.deviceCoreCommand.coreCommands;\n    })\n  }\n\n  onMethodChecked(event: any, httpMethod: string) {\n    const radio = event.target;\n    if (radio.checked) {\n      this.httpMethod = httpMethod;\n    } else {\n      this.httpMethod = '';\n    }\n    this.coreCmdMethodEvent.emit(this.httpMethod);\n  }\n\n  isChecked(name: string): boolean {\n    return this.coreCmdSelected?.name === name;\n  }\n\n  isMethodChecked(method: string): boolean {\n    return this.httpMethod === method\n  }\n\n  radioUnchecked(checked?: boolean): boolean {\n    if (checked) {\n      return checked;\n    }\n    return false\n  }\n\n  selectOne(event: any, coreCmd: CoreCommand) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.coreCmdSelected = coreCmd;\n    } else {\n      this.coreCmdSelected = {} as CoreCommand;\n    }\n    this.singleCoreCmdSelectedEvent.emit(this.coreCmdSelected);\n    this.coreCmdMethodEvent.emit(undefined);\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n     <div class=\"card-header\">\n        <i class=\"fa fa-list text-danger\"></i> Device Core Command List\n     </div>\n     <div class=\"card-body p-0\">\n        <div class=\"table-responsive \">\n            <table class=\"table table-hover text-truncate \">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Device</th>\n                      <th scope=\"col\">DeviceProfile</th>\n                      <th scope=\"col\">AssociatedCommands</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let deviceCoreCmd of deviceCoreCmdList\" [class.table-active]=\"isChecked(deviceCoreCmd)\">\n                        <td> \n                            <div class=\"form-group form-check\">\n                                <input type=\"checkbox\" role=\"button\" class=\"form-check-input\" [checked]=\"isChecked(deviceCoreCmd)\" (click)=\"selectOne($event,deviceCoreCmd)\">\n                            </div>\n                        </td>\n                        <td class=\"user-select-all\">{{deviceCoreCmd.deviceName}}</td>\n                        <td class=\"user-select-all\">{{deviceCoreCmd.profileName}}</td>\n                        <td>\n                            <span class=\"badge badge-primary\" role=\"button\" (click)=\"checkOne(deviceCoreCmd)\">coreCommands</span>\n                        </td>                        \n                    </tr>\n                </tbody>\n            </table>\n        </div>\n     </div>\n     <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\">items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"custom-select\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\"> <i class=\"fa fa-angle-double-left\"></i> Previous</button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > deviceCoreCmdList.length\">Next <i class=\"fa fa-angle-double-right\"></i></button>\n                </li>\n            </ul>\n        </nav>\n     </div>\n </div>\n \n\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { DeviceCoreCommand } from '../../../contracts/v3/core-command';\nimport { CommandService } from '../../../services/command.service';\nimport { MultiDeviceCoreCommandsResponse } from '../../../contracts/v3/responses/device-core-command-response';\n\n@Component({\n  selector: 'app-device-core-command-list',\n  templateUrl: './device-core-command-list.component.html',\n  styleUrls: ['./device-core-command-list.component.css']\n})\nexport class DeviceCoreCommandListComponent implements OnInit {\n\n  deviceCoreCmdList: DeviceCoreCommand[] = [];\n  @Input() deviceCoreCmdSelected?: DeviceCoreCommand;\n  @Output() deviceCoreCmdSelectedEvent = new EventEmitter<DeviceCoreCommand>();\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n\n  constructor(private cmdSvc: CommandService) { }\n\n  ngOnInit(): void {\n    this.findAllDeviceCoreCmdsPagination();\n  }\n\n  findAllDeviceCoreCmdsPagination() {\n    this.cmdSvc\n    .allDeviceCoreCommandsPagination(this.pageOffset, this.pageLimit)\n    .subscribe((resp: MultiDeviceCoreCommandsResponse)=>{\n      this.deviceCoreCmdList = resp.deviceCoreCommands;\n    })\n  }\n\n  isChecked(cmd: DeviceCoreCommand): boolean {\n    return this.deviceCoreCmdSelected?.deviceName === cmd.deviceName;\n  }\n\n  selectOne(event: any, cmd: DeviceCoreCommand) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.deviceCoreCmdSelected = cmd;\n    } else {\n      this.deviceCoreCmdSelected = undefined;\n    }\n    this.deviceCoreCmdSelectedEvent.emit(this.deviceCoreCmdSelected);\n  }\n\n  checkOne(cmd: DeviceCoreCommand) {\n    this.deviceCoreCmdSelected = cmd;\n    this.deviceCoreCmdSelectedEvent.emit(this.deviceCoreCmdSelected);\n  }\n\n  onPageSelected() {\n    this.resetPagination();\n    this.setPagination();\n    this.findAllDeviceCoreCmdsPagination();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.findAllDeviceCoreCmdsPagination();\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.findAllDeviceCoreCmdsPagination();\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"cmd-combo-shielder\" *ngIf=\"visible\" (click)=\"close($event)\"></div>\n<div class=\"cmd-combo\">\n    <div class=\"input-group has-validation\" (click)=\"toggle($event)\">\n        <input type=\"text\" class=\"form-control\" \n        name=\"coreCmdSelected\" readonly=\"readonly\"  maxlength=\"0\" \n        [(ngModel)]=\"coreCmdSelected.path\" \n        [class.is-invalid]=\"(!coreCmdSelected.path || !httpMethod) && validate\" \n        [class.is-valid]=\"coreCmdSelected.path && httpMethod && validate\"  required>\n        <div class=\"input-group-append\">\n            <span class=\"input-group-text\" role=\"button\"><i class=\"fa fa-chevron-down\"></i></span>\n        </div> \n        <div id=\"validationCoreCmdPathFeedback\" class=\"invalid-feedback\">\n            <small>the command name and method can't be empty!</small> \n        </div>\n    </div>\n    \n    <div *ngIf=\"visible\" class=\"cmd-combo-body shadow rounded\">\n        <div class=\"card\">\n            <div *ngIf=\"!deviceCoreCmdListVisible\" class=\"card-header\">\n                <nav class=\"m-0 p-0\" aria-label=\"breadcrumb\">\n                    <ol class=\"breadcrumb p-0 m-0 bg-light\">\n                      <li class=\"breadcrumb-item text-primary\"><a (click)=\"backtoDeviceCoreCommandList()\" role=\"button\">DeviceCoreCommandList</a></li>\n                      <li class=\"breadcrumb-item active\" aria-current=\"page\">{{deviceName}}</li>\n                    </ol>\n                </nav>\n            </div>\n            <div class=\"card-body p-0\">\n                <div [style.display]=\"deviceCoreCmdListVisible?'':'none'\">\n                    <app-device-core-command-list \n                    [deviceCoreCmdSelected] = \"deviceCoreCmdSelected\"\n                    (deviceCoreCmdSelectedEvent)=\"onDeviceCoreCmdSelected($event)\"></app-device-core-command-list>\n                </div>\n                <div *ngIf=\"!deviceCoreCmdListVisible\">\n                    <app-device-associated-core-command-list \n                    [coreCmdSelected]=\"coreCmdSelected\"\n                    (coreCmdMethodEvent)=\"onCmdMethodSelected($event)\"\n                    [deviceName]=\"deviceName\" \n                    [httpMethod]=\"httpMethod\"\n                    (singleCoreCmdSelectedEvent)=\"onCoreCmdSelected($event)\"></app-device-associated-core-command-list>\n                </div>\n            </div>\n        </div>\n    </div>\n </div>\n ","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CoreCommand, DeviceCoreCommand } from '../../../contracts/v3/core-command';\n\n@Component({\n  selector: 'app-device-core-command-combo-list',\n  templateUrl: './device-core-command-combo-list.component.html',\n  styleUrls: ['./device-core-command-combo-list.component.css']\n})\nexport class DeviceCoreCommandComboListComponent implements OnInit {\n\n  visible: boolean = false;\n  @Input() validate: boolean = false;\n  @Input() deviceName: string = \"\";\n  @Input() httpMethod: string = '';\n  @Input() commandName: string = '';\n  @Input() commandPath: string = ''\n\n  deviceCoreCmdSelected?: DeviceCoreCommand;\n  @Input() coreCmdSelected: CoreCommand;\n  @Output() commandSelectedEvent = new EventEmitter<CoreCommand>();\n  @Output() cmdMethodEvent = new EventEmitter<string>();\n  deviceCoreCmdListVisible: boolean = true;\n\n  constructor() {\n    this.coreCmdSelected = {} as CoreCommand;\n  }\n\n  ngOnInit(): void {\n    this.deviceCoreCmdSelected = {deviceName:  this.deviceName} as DeviceCoreCommand\n    this.coreCmdSelected = {\n      name: this.commandName,\n      path: this.commandPath\n    } as CoreCommand\n  }\n\n  onDeviceCoreCmdSelected(deviceCoreCmd: DeviceCoreCommand) {\n    if (!deviceCoreCmd) {\n      this.deviceCoreCmdSelected = deviceCoreCmd;\n      this.httpMethod = '';\n      this.coreCmdSelected = {} as CoreCommand;\n      return\n    }\n    this.deviceCoreCmdSelected = deviceCoreCmd;\n    this.deviceName = this.deviceCoreCmdSelected.deviceName;\n    this.deviceCoreCmdListVisible = false;\n  }\n\n  onCmdMethodSelected(method: string) {\n    this.httpMethod = method;\n    this.cmdMethodEvent.emit(this.httpMethod);\n  }\n\n  onCoreCmdSelected(cmd: CoreCommand) {\n    this.coreCmdSelected = cmd;\n    this.commandSelectedEvent.emit(this.coreCmdSelected);\n  }\n\n  backtoDeviceCoreCommandList() {\n    this.deviceCoreCmdListVisible = true;\n  }\n\n  toggle(event: any) {\n    event.stopImmediatePropagation();\n    if (this.visible) {\n      this.visible = false;\n      return\n    }\n    this.visible = true;\n  }\n\n  close(event: any) {\n    event.stopPropagation();\n    this.visible = false;\n  }\n}\n"],"x_google_ignoreList":[]}