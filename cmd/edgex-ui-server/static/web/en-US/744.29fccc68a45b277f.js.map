{"version":3,"file":"744.29fccc68a45b277f.js","mappings":"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","sources":["./src/app/notifications/notifications.component.ts","./src/app/notifications/notifications.component.html","./src/app/notifications/notification/notification-center/notification-center.component.ts","./src/app/notifications/notification/notification-center/notification-center.component.html","./src/app/notifications/notification/notification-list/notification-list.component.html","./src/app/notifications/notification/notification-list/notification-list.component.ts","./src/app/notifications/subscription/subscription-center/subscription-center.component.ts","./src/app/notifications/subscription/subscription-center/subscription-center.component.html","./src/app/notifications/subscription/subscription-list/subscription-list.component.html","./src/app/notifications/subscription/subscription-list/subscription-list.component.ts","./src/app/notifications/subscription/add-subscription/add-subscription.component.html","./src/app/notifications/subscription/add-subscription/add-subscription.component.ts","./src/app/notifications/subscription/edit-subscription/edit-subscription.component.html","./src/app/notifications/subscription/edit-subscription/edit-subscription.component.ts","./src/app/guards/health/notification-alive.guard.ts","./src/app/notifications/notifications-routing.module.ts","./src/app/notifications/notifications.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n \n<div class=\"card\">\n    <div class=\"card-header\">\n      <ul class=\"nav nav-tabs card-header-tabs font-weight-bold\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link \" routerLink=\"./notification-center\" routerLinkActive=\"active\" i18n>Notification</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"./subscription-center\" routerLinkActive=\"active\" i18n>Subscription</a>\n          </li>\n      </ul>\n    </div>\n    <div class=\"card-body\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notification-center',\n  templateUrl: './notification-center.component.html',\n  styleUrls: ['./notification-center.component.css']\n})\nexport class NotificationCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-list text-danger mr-1\"></i>\n        <span i18n>Notification List</span>\n        <span class=\"fa fa-info-circle text-success font-weight-bold ml-1\" i18n>&nbsp;The data loaded by default takes the value of status as NEW</span>\n    </div>\n    <div class=\"bg-light card-header p-0\">\n        <div class=\"px-2 py-2\">\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteConfirm()\" [disabled]=\"notificationSelected.length === 0\">\n                    <span>\n                        <i class=\"fa fa-trash mr-1\"></i>\n                        <span i18n>Delete</span>\n                    </span>\n                </button>\n            </div>\n            <a class=\"text-primary ml-3 text-decoration-none\" role=\"button\" (click)=\"advancedToggle()\">\n                <span>\n                    <span i18n>Advanced</span>\n                    <i class=\"fa fa-angle-double-right ml-1\"></i>\n                </span> \n            </a>\n        </div>\n    </div>\n    <div [hidden]=\"!advancedOperation\" class=\"bg-light card-header p-0\">\n        <div class=\"px-2 py-2\">\n            <form>\n                <div class=\"form-group row\">\n                    <div class=\"col-md-10\">\n                        <div class=\"input-group\" style=\"width: 600px;\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" i18n>Status</span>\n                            </div>\n                            <select class=\"custom-select\" name=\"statusSelected\" [(ngModel)]=\"statusSelected\">\n                                <option value=\"NEW\">NEW</option>\n                                <option value=\"PROCESSED\">PROCESSED</option>\n                                <option value=\"ESCALATED\">ESCALATED</option>\n                            </select>\n                            <div class=\"input-group-append\" role=\"button\" (click)=\"searchByStatus()\">\n                                <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- <div class=\"form-group row\">\n                    <div class=\"col-md-10\">\n                        <div class=\"input-group\" style=\"width: 600px;\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\">Category</span>\n                            </div>\n                            <select class=\"custom-select\" name=\"categorySelected\" [(ngModel)]=\"categorySelected\">\n                                <option value=\"SECURITY\">SECURITY</option>\n                                <option value=\"HW_HEALTH\">HW_HEALTH</option>\n                                <option value=\"SW_HEALTH\">SW_HEALTH</option>\n                            </select>\n                            <div class=\"input-group-append\" role=\"button\" (click)=\"searchByCategory()\">\n                                <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n                            </div>\n                        </div>\n                    </div>\n                </div> -->\n                <div class=\"form-group row\">\n                    <div class=\"col-md-10\">\n                        <div class=\"input-group\" style=\"width: 600px;\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" i18n>Start</span>\n                            </div>\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\"><i class=\"fa fa-calendar\"></i></span>\n                            </div>\n                            <input type=\"text\" class=\"form-control\" name=\"startSelected\">\n                            \n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" i18n>End</span>\n                            </div>\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\"><i class=\"fa fa-calendar\"></i></span>\n                            </div>\n                            <input type=\"text\" class=\"form-control\" name=\"endSelected\">\n\n                            <div class=\"input-group-append\">\n                                <button class=\"btn btn-secondary\" type=\"button\" [disabled]=\"!startSelected || !endSelected\" (click)=\"searchByStartEnd()\"><i class=\"fa fa-search\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <div class=\"col-md-10\">\n                        <div class=\"input-group\" style=\"width: 600px;\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\">\n                                    <span i18n>CleanupByAge</span>&nbsp;\n                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                                    data-content=\"Deletes notifications which have age and is less than the specified one, where the age of Notification is calculated by subtracting its last modification timestamp from the current timestamp. Note that the corresponding transmissions will also be deleted.\">\n                                </span>\n                                </span>\n                            </div>\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\"><i class=\"fa fa-calendar\"></i></span>\n                            </div>\n                            <input type=\"text\" class=\"form-control\" name=\"ageCleanupAll\">\n                            <div class=\"input-group-append\">\n                                <button class=\"btn btn-danger\" type=\"button\"  [disabled]=\"!ageCleanupAll\" (click)=\"deleteConfirm('age')\"><i class=\"fa fa-trash-o\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <div class=\"col-md-10\">\n                        <div class=\"input-group\" style=\"width: 600px;\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\">\n                                    <span i18n>Cleanup</span>&nbsp;\n                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                                        data-content=\"Deletes the processed notifications if the current timestamp minus their last modification timestamp is less than the age parameter, and the corresponding transmissions will also be deleted. Please notice that this API is only for processed notifications (status = PROCESSED). If the deletion purpose includes each kind of notifications, please refer to cleanupAll.\">\n                                    </span>\n                                </span>\n                            </div>\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\"><i class=\"fa fa-calendar\"></i></span>\n                            </div>\n                            <input type=\"text\" class=\"form-control\" name=\"ageCleanupByStatusIsProcessed\">\n                            <div class=\"input-group-append\">\n                                <button class=\"btn btn-danger font-weight-bold\" type=\"button\"  [disabled]=\"!ageCleanupByStatusIsProcessed\" (click)=\"deleteConfirm('status')\"><i class=\"fa fa-trash-o\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"card-body p-0 position-relative\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-hover text-truncate \">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\"><input type=\"checkbox\" role=\"button\" [checked]=\"isCheckedAll()\" (click)=\"selectAll($event)\"></th>\n                      <th scope=\"col\">ID</th>\n                      <th scope=\"col\" i18n>Category</th>\n                      <th scope=\"col\" i18n>Labels</th>\n                      <th scope=\"col\" i18n>Content</th>\n                      <th scope=\"col\" i18n>ContentType</th>\n                      <th scope=\"col\" i18n>Description</th>\n                      <th scope=\"col\" i18n>Sender</th>\n                      <th scope=\"col\" i18n>Severity</th>\n                      <th scope=\"col\" i18n>Status</th>\n                      <th scope=\"col\" i18n>Created</th>\n                      <th scope=\"col\" i18n>Modified</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let notification of notificationList\" [class.table-active]=\"isChecked(notification.id)\">\n                        <td> <input type=\"checkbox\" role=\"button\"  [checked]=\"isChecked(notification.id)\" (click)=\"selectOne($event,notification)\"></td>\n                        <td class=\"user-select-all\">{{notification.id}}</td>\n                        <td class=\"user-select-all\">{{notification.category}}</td>\n                        <td>{{notification.labels}}</td>\n                        <td>{{notification.content}}</td>\n                        <td>{{notification.contentType}}</td>\n                        <td>{{notification.description}}</td>\n                        <td>{{notification.sender}}</td>\n                        <td>{{notification.severity}}</td>\n                        <td>{{notification.status}}</td>\n                        <td>{{notification.created | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                        <td>{{notification.modified | date:'yyyy-MM-dd hh:mm:ss' }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\" i18n>items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"custom-select\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\">\n                        <i class=\"fa fa-angle-double-left mr-1\"></i> \n                        <span i18n>Previous</span> \n                    </button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > notificationList.length\">\n                        <span i18n>Next</span>\n                        <i class=\"fa fa-angle-double-right ml-1\"></i>\n                    </button>\n                </li>\n            </ul>\n        </nav>\n    </div>\n </div>\n\n <div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning mr-1\"></i>\n                    <span i18n>Warning</span>\n                </h5>  \n            </div>\n            <div class=\"modal-body\" i18n>\n                The data will be permanently erased!!! Are you sure to execute delete operation？\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" i18n>Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"cleanup()\" i18n>Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Notification } from '../../../contracts/v3/notification';\nimport { NotificationsService } from '../../../services/notifications.service';\nimport { MultiNotificationResponse } from '../../../contracts/v3/responses/notification-response';\nimport { MessageService } from '../../../message/message.service';\nimport flatpickr from 'flatpickr';\n\n@Component({\n  selector: 'app-notification-list',\n  templateUrl: './notification-list.component.html',\n  styleUrls: ['./notification-list.component.css']\n})\nexport class NotificationListComponent implements OnInit {\n\n  notificationList: Notification[] = [];\n  notificationSelected: Notification[] = [];\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n  categorySelected: string = 'SECURITY';\n  statusSelected: string = 'NEW';\n  labelSelected?: string;\n  startSelected?: number;\n  endSelected?: number;\n  ageCleanupAll?: number;\n  ageCleanupByStatusIsProcessed?: number;\n  calendarStart: any;\n  calendarEnd: any;\n  searchMode?: string;\n  cleanMode?: string;\n  advancedOperation: boolean = false;\n\n  constructor(private notiSvc: NotificationsService, private msgSvc: MessageService) { }\n\n  ngOnInit(): void {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n    this.setSearchMode('status');\n    this.findNotificationsByStatusPagination(true);\n    this.initDatePickr();\n  }\n\n  initDatePickr() {\n    this.calendarStart = flatpickr(\"input[name='startSelected']\", {\n      dateFormat: \"U\",\n      altFormat: 'Y-m-d H:i:S',\n      altInput: true,\n      enableTime: true,\n      enableSeconds: true,\n      time_24hr: true,\n      allowInput: false,\n      onChange: (selectedDates, dateStr, instance) =>{\n        this.startSelected = Number(dateStr) * 1000;\n      }\n    });\n    this.calendarEnd = flatpickr(\"input[name='endSelected']\", {\n      dateFormat: \"U\",\n      altFormat: 'Y-m-d H:i:S',\n      altInput: true,\n      enableTime: true,\n      enableSeconds: true,\n      time_24hr: true,\n      allowInput: false,\n      onChange: (selectedDates, dateStr, instance) =>{\n        this.endSelected = Number(dateStr) * 1000;\n      }\n    });\n    this.calendarStart = flatpickr(\"input[name='ageCleanupAll']\", {\n      dateFormat: \"U\",\n      altFormat: 'Y-m-d H:i:S',\n      altInput: true,\n      enableTime: true,\n      enableSeconds: true,\n      time_24hr: true,\n      allowInput: false,\n      onChange: (selectedDates, dateStr, instance) =>{\n        this.ageCleanupAll = Number(dateStr) * 1000;\n      }\n    });\n    this.calendarEnd = flatpickr(\"input[name='ageCleanupByStatusIsProcessed']\", {\n      dateFormat: \"U\",\n      altFormat: 'Y-m-d H:i:S',\n      altInput: true,\n      enableTime: true,\n      enableSeconds: true,\n      time_24hr: true,\n      allowInput: false,\n      onChange: (selectedDates, dateStr, instance) =>{\n        this.ageCleanupByStatusIsProcessed = Number(dateStr) * 1000;\n      }\n    });\n  }\n\n  advancedToggle() {\n    if (this.advancedOperation) {\n      this.advancedOperation = false;\n      return\n    }\n    this.advancedOperation = true;\n  }\n\n  findNotificationsByCategoryPagination(isPageOperation?: boolean) {\n    this.notiSvc\n    .findNotificationsByCategoryPagination(this.pageOffset, this.pageLimit, this.categorySelected as string)\n    .subscribe((data: MultiNotificationResponse) => {\n      this.notificationList = data.notifications;\n      if (isPageOperation) {\n        return\n      }\n      this.msgSvc.success('search by category')\n    });\n  }\n\n  findNotificationsByStatusPagination(isPageOperation?: boolean) {\n    this.notiSvc\n    .findNotificationsByStatusPagination(this.pageOffset, this.pageLimit, this.statusSelected as string)\n    .subscribe((data: MultiNotificationResponse) => {\n      this.notificationList = data.notifications;\n      if (isPageOperation) {\n        return\n      }\n      this.msgSvc.success('search by status')\n    });\n  }\n\n  findNotificationsByLabelPagination(isPageOperation?: boolean) {\n    this.notiSvc\n    .findNotificationsByLabelPagination(this.pageOffset, this.pageLimit, this.labelSelected as string)\n    .subscribe((data: MultiNotificationResponse) => {\n      this.notificationList = data.notifications;\n      if (isPageOperation) {\n        return\n      }\n      this.msgSvc.success('search by label')\n    });\n  }\n\n  findNotificationsByStartEndPagination(isPageOperation?: boolean) {\n    console.log(this.startSelected, this.endSelected)\n    this.notiSvc\n    .findNotificationsByStartEndPagination(this.pageOffset, this.pageLimit, this.startSelected as number, this.endSelected as number)\n    .subscribe((data: MultiNotificationResponse) => {\n      this.notificationList = data.notifications;\n      if (isPageOperation) {\n        return\n      }\n      this.msgSvc.success('search by start and end')\n    });\n  }\n\n  setSearchMode(mode: string) {\n    this.searchMode = mode;\n  }\n\n  searchByStatus() {\n    this.resetPagination();\n    this.setSearchMode('status');\n    this.findNotificationsByStatusPagination();\n  }\n\n  searchByCategory() {\n    this.resetPagination();\n    this.setSearchMode('category');\n    this.findNotificationsByCategoryPagination();\n  }\n\n  searchByStartEnd() {\n    this.resetPagination();\n    this.setSearchMode('duration');\n    this.findNotificationsByStartEndPagination();\n  }\n\n  deleteConfirm(mode?: string) {\n    this.cleanMode = mode;\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n\n  cleanup() {\n    switch (this.cleanMode) {\n      case 'age':\n        this.cleanupByAge();\n        break;\n      case 'status':\n        this.cleanupByAgeAndStatusIsProcessed();\n        break;\n      default:\n        this.deleteSelected();\n    }\n  }\n\n  cleanupByAge() {\n    this.notiSvc.deleteNotificationByAgeAndStatus(this.ageCleanupAll as number).subscribe(() => {\n      this.msgSvc.success('cleanup by age');\n    });\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  cleanupByAgeAndStatusIsProcessed() {\n    this.notiSvc.deleteNotificationByAgeAndStatus(this.ageCleanupByStatusIsProcessed as number).subscribe(() => {\n      this.msgSvc.success('cleanup by age when status is processed');\n    });\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  deleteSelected() {\n    this.notificationSelected.forEach(noti => {\n      this.notiSvc.deleteNotificationById(noti.id).subscribe(() => {\n        this.msgSvc.success('delete',`ID: ${noti.id}`)\n      })\n    });\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  isCheckedAll(): boolean {\n    let checkedAll = true;\n    if (this.notificationList && this.notificationList.length === 0) {\n      checkedAll = false\n    }\n    this.notificationList.forEach(notification => {\n      if (this.notificationSelected.findIndex(notificationSelected => notificationSelected.id === notification.id) === -1) {\n        checkedAll = false\n      }\n    });\n    return checkedAll\n  }\n\n  selectAll(event: any) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.notificationList.forEach(notification => {\n        if (this.notificationSelected.findIndex(notiSelected => notiSelected.id === notification.id) !== -1) {\n          return\n        }\n        this.notificationSelected.push(notification);\n      });\n      return\n    }\n    this.notificationList.forEach(notification => {\n      let found = this.notificationSelected.findIndex(notiSelected => notiSelected.id === notification.id)\n      if (found !== -1) {\n        this.notificationSelected.splice(found,1)\n      }\n    });\n  }\n\n  isChecked(id: string): boolean {\n    return this.notificationSelected.findIndex(notification => notification.id === id) >= 0;\n  }\n\n  selectOne(event: any, notification: Notification) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.notificationSelected.push(notification)\n      return\n    }\n\n    let found = this.notificationSelected.findIndex(notiSelected => notiSelected.id === notification.id)\n    if (found !== -1) {\n      this.notificationSelected.splice(found,1)\n    }\n  }\n\n  paginationBySearchMode() {\n    switch (this.searchMode) {\n      case 'status':\n        this.findNotificationsByStatusPagination(true);\n        break;\n      case 'category':\n        this.findNotificationsByCategoryPagination(true);\n        break;\n      case 'duration':\n        this.findNotificationsByStartEndPagination(true);\n    }\n  }\n\n  onPageSelected() {\n    this.resetPagination();\n    this.paginationBySearchMode();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.paginationBySearchMode();\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.paginationBySearchMode();\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n    this.setPagination();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subscription-center',\n  templateUrl: './subscription-center.component.html',\n  styleUrls: ['./subscription-center.component.css']\n})\nexport class SubscriptionCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n     <div class=\"card-header\">\n        <i class=\"fa fa-list text-danger mr-1\"></i>\n        <span i18n>Subscription List</span>\n     </div>\n     <div class=\"card-body p-0 position-relative\">\n        <div class=\"bg-light px-2 py-2\">\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n                <button class=\"btn btn-primary\" (click)=\"refresh()\">\n                    <span>\n                        <i class=\"fa fa-refresh mr-1\"></i>\n                        <span i18n>Refresh</span>\n                    </span> \n                </button>\n                <button type=\"button\" class=\"btn btn-info\"  routerLink=\"../add-subscription\">\n                    <span>\n                        <i class=\"fa fa-plus mr-1\"></i>\n                        <span i18n>Add</span>\n                    </span>\n                </button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"edit()\" [disabled]=\"subscriptionSelected.length !== 1\">\n                    <span>\n                        <i class=\"fa fa-edit mr-1\"></i>\n                        <span i18n>Edit</span>\n                    </span>\n                </button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteConfirm()\" [disabled]=\"subscriptionSelected.length === 0\">\n                    <span>\n                        <i class=\"fa fa-trash mr-1\"></i>\n                        <span i18n>Delete</span>\n                    </span>\n                </button>\n              </div>\n        </div>\n        <div class=\"table-responsive \">\n            <table class=\"table table-hover text-truncate \">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\"><input type=\"checkbox\" role=\"button\" [checked]=\"isCheckedAll()\" (click)=\"selectAll($event)\"></th>\n                      <th scope=\"col\" i18n>ID</th>\n                      <th scope=\"col\" i18n>Name</th>\n                      <th scope=\"col\" i18n>Description</th>\n                      <th scope=\"col\" i18n>Categories</th>\n                      <th scope=\"col\" i18n>Labels</th>\n                      <th scope=\"col\" i18n>Channels</th>\n                      <th scope=\"col\" i18n>Receiver</th>\n                      <th scope=\"col\" i18n>ResendLimit</th>\n                      <th scope=\"col\" i18n>ResendInterval</th>\n                      <!-- <th scope=\"col\">Created</th>\n                      <th scope=\"col\">Modified</th> -->\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let sub of subscriptionList\" [class.table-active]=\"isChecked(sub.name)\">\n                        <td> <input type=\"checkbox\" role=\"button\"  [checked]=\"isChecked(sub.name)\" (click)=\"selectOne($event,sub)\"></td>\n                        <td class=\"user-select-all\">{{sub.id}}</td>\n                        <td class=\"user-select-all\">{{sub.name}}</td>\n                        <td>{{sub.description}}</td>\n                        <td>{{sub.categories}}</td>\n                        <td>{{sub.labels}}</td>\n                        <td class=\"text-center\">\n                            <span class=\"badge badge-primary text-light\" role=\"button\" (click)=\"checkChannels(sub)\"> \n                                <i class=\"fa fa-paper-plane-o\"></i> {{sub.channels.length}}\n                            </span>\n                        </td>\n                        <td>{{sub.receiver}}</td>\n                        <td>{{sub.resendLimit}}</td>\n                        <td>{{sub.resendInterval}}</td>\n                        <!-- <td>{{sub.created | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                        <td>{{sub.modified | date:'yyyy-MM-dd hh:mm:ss' }}</td> -->\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n     </div>\n     <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\" i18n>items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"custom-select\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\">\n                        <i class=\"fa fa-angle-double-left mr-1\"></i>\n                        <span i18n>Previous</span>\n                    </button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > subscriptionList.length\">\n                        <span i18n>Next</span>\n                        <i class=\"fa fa-angle-double-right ml-1\"></i>\n                    </button>\n                </li>\n            </ul>\n        </nav>\n    </div>\n </div>\n\n <div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning mr-1\"></i>\n                    <span i18n>Warning</span>\n                </h5>  \n            </div>\n            <div class=\"modal-body\" i18n>\n                The data will be permanently erased!!! Are you sure to execute delete operation？\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" i18n>Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteSubs()\" i18n>Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\n import { Component, OnInit } from '@angular/core';\n import { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from '../../../contracts/v3/subscription';\nimport { Address } from '../../../contracts/v3/address';\nimport { NotificationsService } from '../../../services/notifications.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\nimport { BaseResponse, BaseWithIdResponse} from '../../../contracts/v3/common/base-response';\nimport { SubscriptionResponse, MultiSubscriptionResponse } from '../../../contracts/v3/responses/subscription-response';\n\n@Component({\n  selector: 'app-subscription-list',\n  templateUrl: './subscription-list.component.html',\n  styleUrls: ['./subscription-list.component.css']\n})\nexport class SubscriptionListComponent implements OnInit {\n\n  subscriptionList: Subscription[] = [];\n  subscriptionSelected: Subscription[] = [];\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n\n  constructor(private notiSvc: NotificationsService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private errSvc: ErrorService) { }\n\n  ngOnInit(): void {\n    this.findAllSubscriptionsPagination();\n  }\n\n  refresh() {\n    this.notiSvc\n    .findAllSubscriptionPagination(this.pageOffset, this.pageLimit)\n    .subscribe((data: MultiSubscriptionResponse) => {\n      this.subscriptionList = data.subscriptions;\n      this.msgSvc.success('refresh');\n    })\n  }\n\n  findAllSubscriptionsPagination() {\n    this.notiSvc\n    .findAllSubscriptionPagination(this.pageOffset, this.pageLimit)\n    .subscribe((data: MultiSubscriptionResponse) => {\n      this.subscriptionList = data.subscriptions;\n    })\n  }\n\n  checkChannels(sub: Subscription) {\n    this.router.navigate(['../edit-subscription'], {\n      relativeTo: this.route,\n      queryParams: { 'subName': sub.name }\n    })\n  }\n\n  isCheckedAll(): boolean {\n    let checkedAll = true;\n    if (this.subscriptionList && this.subscriptionList.length === 0) {\n      checkedAll = false\n    }\n    this.subscriptionList.forEach(subscription => {\n      if (this.subscriptionSelected.findIndex(subscriptionSelected => subscriptionSelected.id === subscription.id) === -1) {\n        checkedAll = false\n      }\n    });\n    return checkedAll\n  }\n\n  selectAll(event: any) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.subscriptionList.forEach(subscription => {\n        if (this.subscriptionSelected.findIndex(sub => sub.name === subscription.name) !== -1) {\n          return\n        }\n        this.subscriptionSelected.push(subscription);\n      });\n      return\n    }\n    this.subscriptionList.forEach(subscription => {\n      let found = this.subscriptionSelected.findIndex(sub => sub.name === subscription.name);\n      if (found !== -1) {\n        this.subscriptionSelected.splice(found,1)\n      }\n    });\n  }\n\n  isChecked(name: string): boolean {\n    return this.subscriptionSelected.findIndex(subscription => subscription.name === name) >= 0;\n  }\n\n  selectOne(event: any, subscription: Subscription) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.subscriptionSelected.push(subscription);\n      return\n    }\n    let found = this.subscriptionSelected.findIndex(sub => sub.name === subscription.name);\n    if (found !== -1) {\n      this.subscriptionSelected.splice(found,1)\n    }\n  }\n\n  edit() {\n    this.router.navigate(['../edit-subscription'], {\n      relativeTo: this.route,\n      queryParams: { 'subName': this.subscriptionSelected[0].name }\n    })\n  }\n\n  deleteConfirm() {\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n\n  deleteSubs() {\n    this.subscriptionSelected.forEach(sub => {\n      this.notiSvc.deleteOneSubscriptionByName(sub.name).subscribe((data: BaseResponse) => {\n        if (this.errSvc.handleErrorForAPI(data)){\n          return\n        }\n        this.subscriptionList.forEach((item, index) => {\n          if (item.name === sub.name) {\n            this.subscriptionList.splice(index,1);\n            return\n          }\n        });\n        this.msgSvc.success('delete', `name: ${sub.name}`);\n        this.resetPagination();\n        this.findAllSubscriptionsPagination();\n      });\n    });\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  onPageSelected() {\n    this.resetPagination();\n    this.setPagination();\n    this.findAllSubscriptionsPagination();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.findAllSubscriptionsPagination();\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.findAllSubscriptionsPagination();\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-plus text-danger mr-2\"></i>\n        <span i18n>Add Subscription</span> \n        <button class=\"btn btn-sm btn-success float-right\" (click)=\"submit()\" [disabled]=\"validate()\" i18n>Submit</button>\n    </div>\n    <div class=\"card-body\">\n        <form>\n            <div class=\"form-group row has-validation\">\n                <label for=\"subscriptionName\" class=\"col-md-2 col-form-label\" required i18n>Name</label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" id=\"validationSubscriptionName\" [class.is-invalid]=\"!subscription.name\" [class.is-valid]=\"subscription.name\" name=\"subscriptionName\" [(ngModel)]=\"subscription.name\" required>\n                    <div id=\"validationSubscriptionNameFeedback\" class=\"invalid-feedback\">\n                        <small i18n>the subscription name can't be empty!</small> \n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionStart\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Categories</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Links the subscription to one or more categories of notification. Multiple categories are separated by commas, such as: xxx,yyy,zzz'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <div class=\"input-group mb-3\">\n                        <input type=\"text\" class=\"form-control\" name=\"subscriptionStart\" [(ngModel)]=\"subCategories\" [class.is-invalid]=\"!subCategories\" [class.is-valid]=\"subCategories\" required>\n                        <div id=\"validationSubscriptionNameFeedback\" class=\"invalid-feedback\">\n                            <small i18n>the subscription categories can't be empty!</small> \n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionLabels\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Labels</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Arbitrary labels that can be applied to the subscription for further categorization or identification. Multiple labels are separated by commas, such as: xxx,yyy,zzz'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <div class=\"input-group mb-3\">\n                        <input type=\"text\" class=\"form-control\" name=\"subscriptionLabels\" [(ngModel)]=\"subLabels\" [class.is-invalid]=\"!subLabels\" [class.is-valid]=\"subLabels\">\n                        <div id=\"validationSubscriptionNameFeedback\" class=\"invalid-feedback\">\n                            <small i18n>the subscription labels can't be empty!</small> \n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionReceiver\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Receiver</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Receiver indicates the name of the party interested in the notification.'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" name=\"subscriptionReceiver\" [class.is-invalid]=\"!subscription.receiver\" [class.is-valid]=\"subscription.receiver\" [(ngModel)]=\"subscription.receiver\" required>\n                    <div id=\"validationSubscriptionReceiverFeedback\" class=\"invalid-feedback\">\n                        <small i18n>the subscription receiver can't be empty!</small> \n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionResendInterval\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>ResendInterval</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Subscription ResendInterval indicates how often the specific resource needs to be polled. It represents as a duration string. The format of this field is to be an unsigned integer followed by a unit which may be \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\" representing nanoseconds, microseconds, milliseconds, seconds, minutes or hours. Eg, \"100ms\", \"24h\"'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" name=\"subscriptionResendInterval\" [(ngModel)]=\"subscription.resendInterval\" required>\n                    \n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionResendLimit\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>ResendLimit</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Pure integer! Subscription ResendLimit indicates the retry limit for attempts to send notifications.'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <input type=\"number\" class=\"form-control\" name=\"subscriptionResendLimit\" [(ngModel)]=\"subscription.resendLimit\" required> \n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionAdminState\" class=\"col-md-2 col-form-label\" i18n>AdminState</label>\n                <div class=\"col-md-10\">\n                    <select class=\"custom-select\" name=\"subscriptionAdminState\" [(ngModel)]=\"subscription.adminState\">\n                        <option value=\"UNLOCKED\">UNLOCKED</option>\n                        <option value=\"LOCKED\">LOCKED</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionChannels\" class=\"col-md-2 col-form-label\" i18n>Channels</label>\n                <div class=\"col-md-10\">\n                    <div class=\"card\">\n                        <div class=\"card-header\" [class.border]=\"channelTemplates.length === 0\"  [class.border-danger]=\"channelTemplates.length === 0\">\n                            <span class=\"mr-2\" i18n>Add Channel Template</span>\n                            <span *ngIf=\"channelTemplates.length === 0\" [class.text-danger]=\"channelTemplates.length === 0\" class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                            data-content=\"At least one channel must be created\"></span>\n                        </div>\n                        <div class=\"card-body\">\n                            <div class=\"mb-3\">\n                                <span role=\"button\" class=\"badge badge-secondary mr-2\" (click)=\"addChannelTemplate('EMAIL')\">\n                                    <i class=\"fa fa-plus-circle mr-1\"></i> \n                                    <span i18n>EMAIL Channel Template</span> \n                                </span>\n                                <span role=\"button\" class=\"badge badge-secondary\" (click)=\"addChannelTemplate('REST')\">\n                                    <i class=\"fa fa-plus-circle mr-1\"></i>\n                                    <span i18n>REST Channel Template</span>\n                                </span>\n                            </div>\n                            <div *ngFor=\"let template of channelTemplates; let i=index\" class=\"card mb-3\">\n                                <div class=\"card-body\">\n                                    <div *ngIf=\"template.type === 'EMAIL'\">\n                                        <form>\n                                            <div class=\"form-group row\">\n                                                <label for=\"emailRecipients\" class=\"col-md-2 col-form-label\">\n                                                    <span class=\"mr-2\" i18n>EmailRecipients</span>\n                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                    data-content=\"Multiple email addresses are separated by commas, such as: xxx@xxx.com, yyy@yyy.com\"></span>\n                                                </label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"emailRecipients\" name=\"emailRecipients\" [class.is-invalid]=\"!template.recipients\" [class.is-valid]=\"template.recipients\" [(ngModel)]=\"template.recipients\">\n                                                    <div id=\"emailRecipientsFeedback\" class=\"invalid-feedback\">\n                                                        <small i18n>the email address port can't be empty</small> \n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n                                        <button class=\"btn btn-danger btn-sm\" (click)=\"removeChannelTemplate(template)\">\n                                            <i class=\"fa fa-trash mr-1\"></i>\n                                            <span i18n>Remove</span>\n                                        </button>\n                                    </div>\n                                    <div *ngIf=\"template.type === 'REST'\">\n                                        <form>\n                                            <div class=\"form-group row\">\n                                                <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required i18n>HttpMethod</label>\n                                                <div class=\"col-md-10\">\n                                                    <select type=\"text\" class=\"custom-select\" name=\"httpMethod\" [(ngModel)]=\"template.httpMethod\">\n                                                        <option value=\"GET\">GET</option>\n                                                        <option value=\"POST\">POST</option>\n                                                        <option value=\"PUT\">PUT</option>\n                                                        <option value=\"DELETE\">DELETE</option>\n                                                        <option value=\"PATCH\">PATCH</option>\n                                                        <option value=\"HEAD\">HEAD</option>\n                                                        <option value=\"TRACE\">TRACE</option>\n                                                        <option value=\"CONNECT\">CONNECT</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row has-validation\">\n                                                <label for=\"addressHostREST\" class=\"col-md-2 col-form-label\" required i18n>Host</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"addressHostREST\" [class.is-invalid]=\"!template.host\" [class.is-valid]=\"template.host\" name=\"addressHost\" [(ngModel)]=\"template.host\" required>\n                                                    <div id=\"addressHostRESTFeedback\" class=\"invalid-feedback\">\n                                                        <small i18n>the REST address host can't be empty!</small> \n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row has-validation\">\n                                                <label for=\"addressPortREST\" class=\"col-md-2 col-form-label\" required i18n>Port</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"number\" class=\"form-control\" id=\"addressPortREST\" [class.is-invalid]=\"!isPureIntegerType(template.port)\" [class.is-valid]=\"isPureIntegerType(template.port)\" name=\"addressPort\" [(ngModel)]=\"template.port\" placeholder=\"Pure integer !\" required>\n                                                    <div id=\"addressPortRESTFeedback\" class=\"invalid-feedback\">\n                                                        <small i18n>the REST address port can't be empty and only pure integer is supported!</small> \n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row\">\n                                                <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required i18n>Path</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"addressPath\" name=\"addressPath\" [(ngModel)]=\"template.path\">\n                                                </div>\n                                            </div>\n                                            <!-- <div class=\"form-group row\">\n                                                <label for=\"requestBody\" class=\"col-md-2 col-form-label\" required>RequestBody</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"requestBody\" name=\"requestBody\" [(ngModel)]=\"template.requestBody\">\n                                                </div>\n                                            </div> -->\n                                            <!-- <div class=\"form-group row\">\n                                                <label for=\"requestBody\" class=\"col-md-2 col-form-label\" required>\n                                                    <span class=\"mr-2\">ContentType</span>\n                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                                                     data-content=\"Indicates which request contentType should be used (i.e. text/html, application/json), the default is application/json if not setup\"></span>\n                                                </label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"contentType\" name=\"contentType\" [(ngModel)]=\"template.contentType\">\n                                                </div>\n                                            </div> -->\n                                        </form>\n                                        <button class=\"btn btn-danger btn-sm\" (click)=\"removeChannelTemplate(template)\">\n                                            <i class=\"fa fa-trash mr-1\"></i>\n                                            <span i18n>Remove</span>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from '../../../contracts/v3/subscription';\nimport { Address } from '../../../contracts/v3/address';\n\nimport { NotificationsService } from '../../../services/notifications.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\n\n@Component({\n  selector: 'app-add-subscription',\n  templateUrl: './add-subscription.component.html',\n  styleUrls: ['./add-subscription.component.css']\n})\nexport class AddSubscriptionComponent implements OnInit {\n\n  subscription: Subscription;\n  channelTemplates: Address[] = [];\n  subCategories: string = '';\n  subLabels: string = '';\n\n  constructor(private notiSvc: NotificationsService,\n    private msgSvc: MessageService,\n    private errSvc: ErrorService,\n    private route: ActivatedRoute,\n    private router: Router) {\n    this.subscription = { adminState: 'UNLOCKED' } as Subscription;\n  }\n\n  ngOnInit(): void {\n    this.renderPopoverComponent();\n  }\n\n  renderPopoverComponent() {\n    setTimeout(() => {\n      $('[data-toggle=\"popover\"]').popover({\n        trigger: 'hover'\n      });\n    },150)\n  }\n\n  submit() {\n    this.subscription.categories = this.subCategories.split(',');\n    this.subscription.labels = this.subLabels.split(',');\n    this.channelTemplates.forEach((chan,index) => {\n      if (chan.type === 'EMAIL') {\n        let temp = chan.recipients.toString();\n        chan.recipients = temp.split(',')\n      }\n    })\n    this.subscription.channels = this.channelTemplates;\n    this.notiSvc.addOneSubscription(this.subscription).subscribe((resp) => {\n      if (this.errSvc.handleErrorForAPI(resp)){\n        return\n      }\n      this.msgSvc.success('Add new subscription', `Name: ${this.subscription.name}`);\n      this.router.navigate(['../subscription-list'],{ relativeTo: this.route });\n    })\n  }\n\n  addChannelTemplate(template: string) {\n    switch (template) {\n      case 'REST' :\n        this.addRESTAddr();\n        break\n      case 'EMAIL':\n        this.addEMAILAddr();\n    }\n  }\n\n  removeChannelTemplate(addr: Address) {\n    let index = this.channelTemplates.indexOf(addr);\n    if (index === -1) {\n      return\n    }\n    this.channelTemplates.splice(index,1);\n    this.renderPopoverComponent();\n  }\n\n  addRESTAddr() {\n    let addr: Address = {\n      type: 'REST',\n      httpMethod: 'GET',\n    } as Address;\n    this.channelTemplates.push(addr);\n    this.renderPopoverComponent();\n  }\n\n  addEMAILAddr() {\n    let addr: Address = {\n      type: 'EMAIL',\n    } as Address;\n    this.channelTemplates.push(addr);\n    this.renderPopoverComponent();\n  }\n\n  isPureIntegerType(value: any): boolean {\n    if (!isNaN(value) && (parseFloat(value) === parseInt(value))) {\n      return true\n    }\n    return false\n  }\n\n  validate(): boolean {\n    let validateEachTemplate: boolean = false;\n    if (this.channelTemplates.length !== 0) {\n      this.channelTemplates.forEach((chan,index) => {\n        if (chan.type === 'REST') {\n          if (chan.path === '' || !chan.port ) {\n            validateEachTemplate = true;\n            return\n          }\n        }\n        if (chan.type === 'EMAIL') {\n          if (!chan.recipients) {\n            validateEachTemplate = true;\n            return\n          }\n        }\n      })\n    }\n\n    if (validateEachTemplate || !this.subscription.name ||\n    !this.subCategories || !this.subLabels || !this.subscription.receiver ||\n    this.channelTemplates.length === 0\n    ) {\n      return true\n    }\n    return false\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header\">\n       <i class=\"fa fa-edit text-danger mr-2\"></i>\n       <span i18n>Edit Subscription</span>\n       <button class=\"btn btn-sm btn-success float-right\" (click)=\"update()\" [disabled]=\"validate()\" i18n>Save</button>\n    </div>\n    <div class=\"card-body\">\n        <form>\n            <div class=\"form-group row has-validation\">\n                <label for=\"subscriptionName\" class=\"col-md-2 col-form-label\" required i18n>Name</label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" id=\"validationSubscriptionName\" [class.is-invalid]=\"!subscription.name\" [class.is-valid]=\"subscription.name\" name=\"subscriptionName\" [(ngModel)]=\"subscription.name\" required>\n                    <div id=\"validationSubscriptionNameFeedback\" class=\"invalid-feedback\">\n                        <small i18n>the subscription name can't be empty!</small> \n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionStart\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Categories</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Links the subscription to one or more categories of notification. Multiple categories are separated by commas, such as: xxx,yyy,zzz'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <div class=\"input-group mb-3\">\n                        <input type=\"text\" class=\"form-control\" name=\"subscriptionStart\" [(ngModel)]=\"subCategories\" [class.is-invalid]=\"!subCategories\" [class.is-valid]=\"subCategories\" required>\n                        <div id=\"validationSubscriptionNameFeedback\" class=\"invalid-feedback\">\n                            <small i18n>the subscription categories can't be empty!</small> \n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionLabels\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Labels</span>\n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Arbitrary labels that can be applied to the subscription for further categorization or identification. Multiple labels are separated by commas, such as: xxx,yyy,zzz'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <div class=\"input-group mb-3\">\n                        <input type=\"text\" class=\"form-control\" name=\"subscriptionLabels\" [(ngModel)]=\"subLabels\" [class.is-invalid]=\"!subLabels\" [class.is-valid]=\"subLabels\">\n                        <div id=\"validationSubscriptionNameFeedback\" class=\"invalid-feedback\">\n                            <small i18n>the subscription labels can't be empty!</small> \n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionReceiver\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>Receiver</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Receiver indicates the name of the party interested in the notification.'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" name=\"subscriptionReceiver\" [class.is-invalid]=\"!subscription.receiver\" [class.is-valid]=\"subscription.receiver\" [(ngModel)]=\"subscription.receiver\" required>\n                    <div id=\"validationSubscriptionReceiverFeedback\" class=\"invalid-feedback\">\n                        <small i18n>the subscription receiver can't be empty!</small> \n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionResendInterval\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>ResendInterval</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Subscription ResendInterval indicates how often the specific resource needs to be polled. It represents as a duration string. The format of this field is to be an unsigned integer followed by a unit which may be \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\" representing nanoseconds, microseconds, milliseconds, seconds, minutes or hours. Eg, \"100ms\", \"24h\"'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <input type=\"text\" class=\"form-control\" name=\"subscriptionResendInterval\" [(ngModel)]=\"subscription.resendInterval\" required>\n                    \n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionResendLimit\" class=\"col-md-2 col-form-label\">\n                    <span class=\"mr-2\" i18n>ResendLimit</span> \n                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                    data-content='Pure integer! Subscription ResendLimit indicates the retry limit for attempts to send notifications.'></span>\n                </label>\n                <div class=\"col-md-10\">\n                    <input type=\"number\" class=\"form-control\" name=\"subscriptionResendLimit\" [(ngModel)]=\"subscription.resendLimit\" required> \n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionAdminState\" class=\"col-md-2 col-form-label\" i18n>AdminState</label>\n                <div class=\"col-md-10\">\n                    <select class=\"custom-select\" name=\"subscriptionAdminState\" [(ngModel)]=\"subscription.adminState\">\n                        <option value=\"UNLOCKED\">UNLOCKED</option>\n                        <option value=\"LOCKED\">LOCKED</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"subscriptionChannels\" class=\"col-md-2 col-form-label\" i18n>Channels</label>\n                <div class=\"col-md-10\">\n                    <div class=\"card\">\n                        <div class=\"card-header\" [class.border]=\"channelTemplates.length === 0\"  [class.border-danger]=\"channelTemplates.length === 0\">\n                            <span class=\"mr-2\" i18n>Add Channel Template</span>\n                            <span *ngIf=\"channelTemplates.length === 0\" [class.text-danger]=\"channelTemplates.length === 0\" class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                            data-content=\"At least one channel must be created\"></span>\n                        </div>\n                        <div class=\"card-body\">\n                            <div class=\"mb-3\">\n                                <span role=\"button\" class=\"badge badge-secondary mr-2\" (click)=\"addChannelTemplate('EMAIL')\">\n                                    <i class=\"fa fa-plus-circle mr-1\"></i>\n                                    <span i18n>EMAIL Channel Template</span>\n                                </span>\n                                <span role=\"button\" class=\"badge badge-secondary\" (click)=\"addChannelTemplate('REST')\">\n                                    <i class=\"fa fa-plus-circle mr-1\"></i>\n                                    <span i18n>REST Channel Template</span>\n                                </span>\n                            </div>\n                            <div *ngFor=\"let template of channelTemplates; let i=index\" class=\"card mb-3\">\n                                <div class=\"card-body\">\n                                    <div *ngIf=\"template.type === 'EMAIL'\">\n                                        <form>\n                                            <div class=\"form-group row\">\n                                                <label for=\"emailRecipients\" class=\"col-md-2 col-form-label\">\n                                                    <span class=\"mr-2\" i18n>EmailRecipients</span>\n                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                    data-content=\"Multiple email addresses are separated by commas, such as: xxx@xxx.com, yyy@yyy.com\"></span>\n                                                </label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"emailRecipients\" name=\"emailRecipients\" [class.is-invalid]=\"!template.recipients\" [class.is-valid]=\"template.recipients\" [(ngModel)]=\"template.recipients\">\n                                                    <div id=\"emailRecipientsFeedback\" class=\"invalid-feedback\">\n                                                        <small i18n>the email address port can't be empty</small> \n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </form>\n                                        <button class=\"btn btn-danger btn-sm\" (click)=\"removeChannelTemplate(template)\"><i class=\"fa fa-trash\"></i> Remove</button>\n                                    </div>\n                                    <div *ngIf=\"template.type === 'REST'\">\n                                        <form>\n                                            <div class=\"form-group row\">\n                                                <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required i18n>HttpMethod</label>\n                                                <div class=\"col-md-10\">\n                                                    <select type=\"text\" class=\"custom-select\" name=\"httpMethod\" [(ngModel)]=\"template.httpMethod\">\n                                                        <option value=\"GET\">GET</option>\n                                                        <option value=\"POST\">POST</option>\n                                                        <option value=\"PUT\">PUT</option>\n                                                        <option value=\"DELETE\">DELETE</option>\n                                                        <option value=\"PATCH\">PATCH</option>\n                                                        <option value=\"HEAD\">HEAD</option>\n                                                        <option value=\"TRACE\">TRACE</option>\n                                                        <option value=\"CONNECT\">CONNECT</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row has-validation\">\n                                                <label for=\"addressHostREST\" class=\"col-md-2 col-form-label\" required i18n>Host</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"addressHostREST\" [class.is-invalid]=\"!template.host\" [class.is-valid]=\"template.host\" name=\"addressHost\" [(ngModel)]=\"template.host\" required>\n                                                    <div id=\"addressHostRESTFeedback\" class=\"invalid-feedback\">\n                                                        <small i18n>the REST address host can't be empty!</small> \n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row has-validation\">\n                                                <label for=\"addressPortREST\" class=\"col-md-2 col-form-label\" required i18n>Port</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"number\" class=\"form-control\" id=\"addressPortREST\" [class.is-invalid]=\"!isPureIntegerType(template.port)\" [class.is-valid]=\"isPureIntegerType(template.port)\" name=\"addressPort\" [(ngModel)]=\"template.port\" placeholder=\"Pure integer !\" required>\n                                                    <div id=\"addressPortRESTFeedback\" class=\"invalid-feedback\">\n                                                        <small i18n>the REST address port can't be empty and only pure integer is supported!</small> \n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group row\">\n                                                <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required i18n>Path</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"addressPath\" name=\"addressPath\" [(ngModel)]=\"template.path\">\n                                                </div>\n                                            </div>\n                                            <!-- <div class=\"form-group row\">\n                                                <label for=\"requestBody\" class=\"col-md-2 col-form-label\" required>RequestBody</label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"requestBody\" name=\"requestBody\" [(ngModel)]=\"template.requestBody\">\n                                                </div>\n                                            </div> -->\n                                            <!-- <div class=\"form-group row\">\n                                                <label for=\"requestBody\" class=\"col-md-2 col-form-label\" required>\n                                                    <span class=\"mr-2\">ContentType</span>\n                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                                                     data-content=\"Indicates which request contentType should be used (i.e. text/html, application/json), the default is application/json if not setup\"></span>\n                                                </label>\n                                                <div class=\"col-md-10\">\n                                                    <input type=\"text\" class=\"form-control\" id=\"contentType\" name=\"contentType\" [(ngModel)]=\"template.contentType\">\n                                                </div>\n                                            </div> -->\n                                        </form>\n                                        <button class=\"btn btn-danger btn-sm\" (click)=\"removeChannelTemplate(template)\">\n                                            <i class=\"fa fa-trash mr-1\"></i>\n                                            <span i18n>Remove</span>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from '../../../contracts/v3/subscription';\nimport { Address } from '../../../contracts/v3/address';\nimport { SubscriptionResponse } from '../../../contracts/v3/responses/subscription-response';\n\nimport { NotificationsService } from '../../../services/notifications.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\n\n@Component({\n  selector: 'app-edit-subscription',\n  templateUrl: './edit-subscription.component.html',\n  styleUrls: ['./edit-subscription.component.css']\n})\nexport class EditSubscriptionComponent implements OnInit {\n\n  subscription: Subscription;\n  channelTemplates: Address[] = [];\n  subCategories: string = '';\n  subLabels: string = '';\n\n  constructor(private notiSvc: NotificationsService,\n    private msgSvc: MessageService,\n    private errSvc: ErrorService,\n    private route: ActivatedRoute,\n    private router: Router) {\n      this.subscription = {} as Subscription;\n    }\n\n  ngOnInit(): void {\n    this.renderPopoverComponent();\n    this.route.queryParams.subscribe(params => {\n      if (params['subName']) {\n        this.notiSvc.findOneSubscriptionByName(params['subName']).subscribe((resp: SubscriptionResponse)=>{\n          this.subscription = resp.subscription;\n          this.subCategories = this.subscription.categories.toString();\n          this.subLabels = this.subscription.labels.toString();\n          this.channelTemplates = this.subscription.channels;\n        });\n      }\n    })\n  }\n\n  renderPopoverComponent() {\n    setTimeout(() => {\n      $('[data-toggle=\"popover\"]').popover({\n        trigger: 'hover'\n      });\n    },150)\n  }\n\n  update() {\n    this.subscription.categories = this.subCategories.split(',');\n    this.subscription.labels = this.subLabels.split(',');\n    this.channelTemplates.forEach((chan,index) => {\n      if (chan.type === 'EMAIL') {\n        let temp = chan.recipients.toString();\n        chan.recipients = temp.split(',')\n      }\n    })\n    this.subscription.channels = this.channelTemplates;\n    this.notiSvc.updateOneSubscription(this.subscription).subscribe((resp) => {\n      if (this.errSvc.handleErrorForAPI(resp)){\n        return\n      }\n      this.msgSvc.success('Update subscription', `Name: ${this.subscription.name}`);\n      this.router.navigate(['../subscription-list'],{ relativeTo: this.route });\n    })\n  }\n\n  addChannelTemplate(template: string) {\n    switch (template) {\n      case 'REST' :\n        this.addRESTAddr();\n        break\n      case 'EMAIL':\n        this.addEMAILAddr();\n    }\n  }\n\n  removeChannelTemplate(addr: Address) {\n    let index = this.channelTemplates.indexOf(addr);\n    if (index === -1) {\n      return\n    }\n    this.channelTemplates.splice(index,1);\n    this.renderPopoverComponent();\n  }\n\n  addRESTAddr() {\n    let addr: Address = {\n      type: 'REST',\n      httpMethod: 'GET',\n    } as Address;\n    this.channelTemplates.push(addr);\n    this.renderPopoverComponent();\n  }\n\n  addEMAILAddr() {\n    let addr: Address = {\n      type: 'EMAIL',\n    } as Address;\n    this.channelTemplates.push(addr);\n    this.renderPopoverComponent();\n  }\n\n  isPureIntegerType(value: any): boolean {\n    if (!isNaN(value) && (parseFloat(value) === parseInt(value))) {\n      return true\n    }\n    return false\n  }\n\n  validate(): boolean {\n    let validateEachTemplate: boolean = false;\n    if (this.channelTemplates.length !== 0) {\n      this.channelTemplates.forEach((chan,index) => {\n        if (chan.type === 'REST') {\n          if (chan.path === '' || !chan.port ) {\n            validateEachTemplate = true;\n            return\n          }\n        }\n        if (chan.type === 'EMAIL') {\n          if (!chan.recipients) {\n            validateEachTemplate = true;\n            return\n          }\n        }\n      })\n    }\n\n    if (validateEachTemplate || !this.subscription.name ||\n    !this.subCategories || !this.subLabels || !this.subscription.receiver ||\n    this.channelTemplates.length === 0\n    ) {\n      return true\n    }\n    return false\n  }\n}\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\n import { Injectable } from '@angular/core';\n import { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\n import { Observable, of } from 'rxjs';\n import { NotificationsService } from '../../services/notifications.service';\n import { mergeMap, take ,catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationAliveGuard  {\n  constructor(private router: Router, private notiSvc: NotificationsService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.checkAvailable(route,\n      state);\n  }\n\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.canActivate(route,state)\n  }\n\n  checkAvailable(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.notiSvc.ping().pipe(\n      take(1),\n      catchError((error)=>{\n        return this.router.navigate(['/svc-unavailable'],{ \n          queryParams: {'svcName':'notification','routerPath':`/${state.url.split('/')[1]}`}\n        })\n      }),\n      mergeMap(() => {\n        return of(true)\n      })\n    )\n  }\n  \n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotificationsComponent } from './notifications.component';\nimport { NotificationCenterComponent } from './notification/notification-center/notification-center.component';\nimport { NotificationListComponent } from './notification/notification-list/notification-list.component';\nimport { SubscriptionCenterComponent } from './subscription/subscription-center/subscription-center.component';\nimport { SubscriptionListComponent } from './subscription/subscription-list/subscription-list.component';\nimport { AddSubscriptionComponent } from './subscription/add-subscription/add-subscription.component';\nimport { EditSubscriptionComponent } from './subscription/edit-subscription/edit-subscription.component';\nimport { AuthGuard } from '../guards/auth/guard/auth.guard';\nimport { NotificationAliveGuard } from '../guards/health/notification-alive.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsComponent,\n    canActivate: [AuthGuard, NotificationAliveGuard],\n    canActivateChild: [NotificationAliveGuard],\n    children: [\n      {\n        path: '',\n        redirectTo: 'notification-center',\n        pathMatch: 'full'\n      },\n      {\n        path: 'notification-center',\n        component: NotificationCenterComponent,\n        children: [\n          {\n            path: '',\n            component: NotificationListComponent\n          }\n        ]\n      },\n      {\n        path: 'subscription-center',\n        component: SubscriptionCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'subscription-list',\n            pathMatch: 'full'\n          },\n          {\n            path: 'subscription-list',\n            component: SubscriptionListComponent\n          },\n          {\n            path: 'add-subscription',\n            component: AddSubscriptionComponent\n          },\n          {\n            path: 'edit-subscription',\n            component: EditSubscriptionComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NotificationsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NotificationsRoutingModule } from './notifications-routing.module';\nimport { NotificationsComponent } from './notifications.component';\nimport { SubscriptionListComponent } from './subscription/subscription-list/subscription-list.component';\nimport { AddSubscriptionComponent } from './subscription/add-subscription/add-subscription.component';\nimport { EditSubscriptionComponent } from './subscription/edit-subscription/edit-subscription.component';\nimport { SubscriptionCenterComponent } from './subscription/subscription-center/subscription-center.component';\nimport { NotificationListComponent } from './notification/notification-list/notification-list.component';\nimport { NotificationCenterComponent } from './notification/notification-center/notification-center.component';\n\n@NgModule({\n  declarations: [NotificationsComponent, SubscriptionListComponent, AddSubscriptionComponent, EditSubscriptionComponent, SubscriptionCenterComponent, NotificationListComponent, NotificationCenterComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NotificationsRoutingModule\n  ]\n})\nexport class NotificationsModule { }\n"],"names":["NotificationsComponent","constructor","ngOnInit","static","this","t","core","Xpm","selectors","decls","vars","consts","i18n_0","$localize","i0","NotificationCenterComponent","template","rf","ctx","$event","notification_r1","_r3","$implicit","ctx_r2","selectOne","ctx_r0","isChecked","id","category","labels","content","contentType","description","sender","severity","status","created","modified","NotificationListComponent","notiSvc","msgSvc","notificationList","notificationSelected","pagination","pageLimit","pageOffset","categorySelected","statusSelected","advancedOperation","$","popover","trigger","setSearchMode","findNotificationsByStatusPagination","initDatePickr","calendarStart","flatpickr","dateFormat","altFormat","altInput","enableTime","enableSeconds","time_24hr","allowInput","onChange","selectedDates","dateStr","instance","startSelected","Number","calendarEnd","endSelected","ageCleanupAll","ageCleanupByStatusIsProcessed","advancedToggle","findNotificationsByCategoryPagination","isPageOperation","subscribe","data","notifications","success","findNotificationsByLabelPagination","labelSelected","findNotificationsByStartEndPagination","console","log","mode","searchMode","searchByStatus","resetPagination","searchByCategory","searchByStartEnd","deleteConfirm","cleanMode","modal","cleanup","cleanupByAge","cleanupByAgeAndStatusIsProcessed","deleteSelected","deleteNotificationByAgeAndStatus","forEach","noti","deleteNotificationById","isCheckedAll","checkedAll","length","notification","findIndex","selectAll","event","target","checked","notiSelected","push","found","splice","paginationBySearchMode","onPageSelected","prePage","setPagination","nextPage","n","i1","i2","NotificationListComponent_tr_121_Template","SubscriptionCenterComponent","sub_r1","ctx_r4","checkChannels","name","categories","channels","receiver","resendLimit","resendInterval","SubscriptionListComponent","route","router","errSvc","subscriptionList","subscriptionSelected","findAllSubscriptionsPagination","refresh","findAllSubscriptionPagination","subscriptions","sub","navigate","relativeTo","queryParams","subName","subscription","edit","deleteSubs","deleteOneSubscriptionByName","handleErrorForAPI","item","index","i3","i4","SubscriptionListComponent_tr_53_Template","channelTemplates","_r8","template_r2","recipients","ctx_r9","removeChannelTemplate","_r14","httpMethod","host","port","path","ctx_r21","ctx_r5","isPureIntegerType","AddSubscriptionComponent_div_91_div_2_Template","AddSubscriptionComponent_div_91_div_3_Template","type","AddSubscriptionComponent","subCategories","subLabels","adminState","renderPopoverComponent","setTimeout","submit","split","chan","temp","toString","addOneSubscription","resp","addChannelTemplate","addRESTAddr","addEMAILAddr","addr","indexOf","value","isNaN","parseFloat","parseInt","validate","validateEachTemplate","AddSubscriptionComponent_span_80_Template","AddSubscriptionComponent_div_91_Template","EditSubscriptionComponent_div_91_div_2_Template","EditSubscriptionComponent_div_91_div_3_Template","EditSubscriptionComponent","params","findOneSubscriptionByName","update","updateOneSubscription","EditSubscriptionComponent_span_80_Template","EditSubscriptionComponent_div_91_Template","NotificationAliveGuard","canActivate","state","checkAvailable","canActivateChild","ping","pipe","take","catchError","error","svcName","routerPath","url","mergeMap","of","Yz7","factory","ɵfac","providedIn","routes","component","AuthGuard","children","redirectTo","pathMatch","NotificationsRoutingModule","oAB","cJS","RouterModule","forChild","NotificationsModule","CommonModule","FormsModule"],"sourceRoot":"webpack:///"}