{"version":3,"file":"489.e2c9e281d5da65e5.js","mappings":"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","sources":["./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.module.ts"],"sourcesContent":["/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { DataService } from '../services/data.service'\nimport { MetadataService } from '../services/metadata.service';\nimport { SchedulerService } from '../services/scheduler.service';\nimport { NotificationsService } from '../services/notifications.service';\nimport { SystemAgentService } from '../services/system-agent.service';\nimport { RegistryCenterService } from '../services/registry-center.service';\n\nimport { MultiDeviceServiceResponse } from '../contracts/v3/responses/device-service-response';\nimport { MultiDeviceResponse } from '../contracts/v3/responses/device-response';\nimport { MultiDeviceProfileResponse } from '../contracts/v3/responses/device-profile-response';\nimport { MultiNotificationResponse } from '../contracts/v3/responses/notification-response';\nimport { MultiIntervalResponse } from '../contracts/v3/responses/interval-response';\nimport { ServiceEndpoint } from '../contracts/v3/register-center/service-endpoint';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  eventCount: number = 0;\n  readingCount: number = 0;\n\n  deviceSvcCount: number = 0;\n  deviceSvcStatusLockedCount: number = 0;\n\n  deviceCount: number = 0;\n  deviceStatusLockedCount: number = 0;\n\n  deviceProfileCount: number = 0;\n\n  schedulerCount: number = 0;\n  notificationCount: number = 0;\n  registeredServiceCount: number = 0;\n\n  constructor(private dataService: DataService,\n    private metadataSvc:MetadataService,\n    private schedulerSvc: SchedulerService,\n    private notiSvc :NotificationsService,\n    private systemAgentSvc: SystemAgentService,\n    private registrySvc: RegistryCenterService) { }\n\n  ngOnInit(): void {\n    this.dataService.ping().subscribe(() => {\n      this.getEventAndReadingCount()\n    })\n\n    this.metadataSvc.ping().subscribe(() => {\n      this.getDeviceServiceCount()\n      this.getDeviceCount()\n      this.getDeviceProfileCount()\n    })\n\n    this.schedulerSvc.ping().subscribe(() => {\n      this.getIntervalCount()\n    })\n\n    this.notiSvc.ping().subscribe(() => {\n      this.getNotificationCount()\n    })\n\n    this.systemAgentSvc.ping().subscribe(() => {\n      //system agent gets all services via registry center, checking registry service status is required.\n      this.registrySvc.ping().subscribe(() => {\n        this.getRegisteredServiceCount()\n      })\n    })\n  }\n\n  getEventAndReadingCount() {\n    this.dataService.eventCount().subscribe((resp: any) => this.eventCount = resp.Count);\n    this.dataService.readingCount().subscribe((resp: any) => this.readingCount = resp.Count);\n  }\n\n  getDeviceServiceCount() {\n    this.metadataSvc.allDeviceServices().subscribe((resp: MultiDeviceServiceResponse) => {\n      this.deviceSvcCount = resp.services.length;\n      resp.services.forEach((svc,i) => {\n        if (svc.adminState === 'LOCKED') {\n          this.deviceSvcStatusLockedCount++;\n        }\n      });\n    });\n  }\n\n  getDeviceCount() {\n    this.metadataSvc.allDevices().subscribe((resp: MultiDeviceResponse) => {\n      this.deviceCount = resp.devices.length;\n      resp.devices.forEach((device,i) => {\n        if (device.adminState === 'LOCKED') {\n          this.deviceStatusLockedCount++;\n        }\n      })\n    });\n  }\n\n  getDeviceProfileCount() {\n    this.metadataSvc.allDeviceProfolesPagination(0,-1).subscribe((resp: MultiDeviceProfileResponse)=>{\n      this.deviceProfileCount = resp.profiles.length;\n    });\n  }\n\n  getIntervalCount() {\n    this.schedulerSvc.findAllIntervalsPagination(0,-1).subscribe((resp: MultiIntervalResponse) => {\n      this.schedulerCount = resp.intervals.length;\n    });\n  }\n\n  getNotificationCount() {\n    this.notiSvc.findNotificationsByStatusPagination(0,-1,'NEW').subscribe((resp: MultiNotificationResponse) => {\n      this.notificationCount = resp.notifications.length;\n    });\n  }\n\n  getRegisteredServiceCount() {\n    this.systemAgentSvc.getRegisteredServiceAll().subscribe((resp: ServiceEndpoint[]) => {\n      this.registeredServiceCount = resp.length? resp.length: 0\n    })\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"row\">\n  <div class=\"col-lg-4\">\n    <div class=\"card\" role=\"button\" routerLink=\"/metadata\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\" i18n>\n          Device Services\n        </h5>\n        <h5 class=\"d-inline\">\n          <span class=\"badge badge-info\"> {{deviceSvcCount > 100 ? '100+' : deviceSvcCount}} </span>\n          <span class=\"float-right badge badge-danger\">Locked {{deviceSvcStatusLockedCount}}</span>\n          <span class=\"float-right badge badge-success mr-2\">Unlocked {{deviceSvcCount - deviceSvcStatusLockedCount}}</span>\n        </h5>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-4\">\n    <div class=\"card\" role=\"button\" routerLink=\"/metadata/device-center\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\" i18n>Devices</h5>\n        <h5 class=\"d-inline\">\n          <span class=\"badge badge-info\"> {{deviceCount > 100 ? '100+' : deviceCount}} </span>\n          <span class=\"float-right badge badge-danger\">Locked {{deviceStatusLockedCount}}</span>\n          <span class=\"float-right badge badge-success mr-2\">Unlocked {{deviceCount - deviceStatusLockedCount}}</span>\n        </h5>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-4\">\n    <div class=\"card\" role=\"button\" routerLink=\"/metadata/device-profile-center\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\" i18n>Device Profiles</h5>\n        <h5 class=\"d-inline\"><span class=\"badge badge-info\">{{deviceProfileCount > 100 ? '100+' : deviceProfileCount}}</span></h5>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n  <div class=\"col-lg-6\">\n    <div class=\"card\" role=\"button\" routerLink=\"/scheduler\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\" i18n>Schedulers</h5>\n        <h5><a href=\"#\" class=\"card-link font-weight-bolder badge badge-info\">{{schedulerCount > 100 ? '100+' : schedulerCount}}</a></h5>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-6\">\n    <div class=\"card\" role=\"button\" routerLink=\"/notifications\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\" i18n>Notifications</h5>\n        <h5><a href=\"#\" class=\"card-link font-weight-bolder badge badge-info\">{{notificationCount > 100 ? '100+' : notificationCount}}</a></h5>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n  <div class=\"col-lg-6\">\n    <div class=\"card\" role=\"button\" routerLink=\"/core-data\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\" i18n>Events</h5>\n        <h5><a href=\"#\" class=\"card-link font-weight-bolder badge badge-info\">{{eventCount}}</a></h5>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-6\">\n    <div class=\"card\" role=\"button\" routerLink=\"/core-data\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\" i18n>Readings</h5>\n        <h5><a href=\"#\" class=\"card-link font-weight-bolder badge badge-info\">{{readingCount}}</a></h5>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\nimport { AuthGuard } from '../guards/auth/guard/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [AuthGuard],\n    component: DashboardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\n\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule\n  ]\n})\nexport class DashboardModule { }\n"],"names":["DashboardComponent","constructor","dataService","metadataSvc","schedulerSvc","notiSvc","systemAgentSvc","registrySvc","this","eventCount","readingCount","deviceSvcCount","deviceSvcStatusLockedCount","deviceCount","deviceStatusLockedCount","deviceProfileCount","schedulerCount","notificationCount","registeredServiceCount","ngOnInit","ping","subscribe","getEventAndReadingCount","getDeviceServiceCount","getDeviceCount","getDeviceProfileCount","getIntervalCount","getNotificationCount","getRegisteredServiceCount","resp","Count","allDeviceServices","services","length","forEach","svc","i","adminState","allDevices","devices","device","allDeviceProfolesPagination","profiles","findAllIntervalsPagination","intervals","findNotificationsByStatusPagination","notifications","getRegisteredServiceAll","static","t","i0","i1","i2","i3","i4","i5","i6","core","Xpm","selectors","decls","vars","consts","i18n_0","$localize","ctx","routes","path","canActivate","AuthGuard","component","DashboardRoutingModule","oAB","cJS","RouterModule","forChild","DashboardModule","CommonModule"],"sourceRoot":"webpack:///"}