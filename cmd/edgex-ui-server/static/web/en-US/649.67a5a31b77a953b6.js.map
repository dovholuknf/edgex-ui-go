{"version":3,"file":"649.67a5a31b77a953b6.js","mappings":"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","sources":["./src/app/metadata/metadata.component.ts","./src/app/metadata/metadata.component.html","./src/app/metadata/device-service/device-service-media-list/device-service-media-list.component.html","./src/app/metadata/device-service/device-service-media-list/device-service-media-list.component.ts","./src/app/metadata/device/device-center/device-center.component.ts","./src/app/metadata/device/device-center/device-center.component.html","./src/app/metadata/device/device-command-viewer/device-command-viewer.component.html","./src/app/metadata/device/device-command-viewer/device-command-viewer.component.ts","./src/app/metadata/device/device-list/device-list.component.html","./src/app/metadata/device/device-list/device-list.component.ts","./src/app/metadata/device/device-protocol/builtin-protocol-template/types.ts","./src/app/metadata/device/device-protocol/device-protocol.component.html","./src/app/metadata/device/device-protocol/device-protocol.component.ts","./src/app/metadata/device-service/device-service-list/device-service-list.component.html","./src/app/metadata/device-service/device-service-list/device-service-list.component.ts","./src/app/metadata/device/device-auto-event/device-auto-event.component.html","./src/app/metadata/device/device-auto-event/device-auto-event.component.ts","./src/app/metadata/device/add-device/add-device.component.html","./src/app/metadata/device/add-device/add-device.component.ts","./src/app/metadata/device/edit-device/edit-device.component.html","./src/app/metadata/device/edit-device/edit-device.component.ts","./src/app/metadata/profile/device-profile-center/device-profile-center.component.ts","./src/app/metadata/profile/device-profile-center/device-profile-center.component.html","./src/app/metadata/profile/add-profile/add-profile.component.ts","./src/app/metadata/profile/add-profile/add-profile.component.html","./src/app/metadata/profile/edit-profile/edit-profile.component.ts","./src/app/metadata/profile/edit-profile/edit-profile.component.html","./src/app/metadata/provision-watcher/provision-watcher-center/provision-watcher-center.component.ts","./src/app/metadata/provision-watcher/provision-watcher-center/provision-watcher-center.component.html","./src/app/metadata/provision-watcher/provision-watcher-list/provision-watcher-list.component.html","./src/app/metadata/provision-watcher/provision-watcher-list/provision-watcher-list.component.ts","./src/app/metadata/provision-watcher/add-provision-watcher/add-provision-watcher.component.html","./src/app/metadata/provision-watcher/add-provision-watcher/add-provision-watcher.component.ts","./src/app/metadata/provision-watcher/edit-provision-watcher/edit-provision-watcher.component.html","./src/app/metadata/provision-watcher/edit-provision-watcher/edit-provision-watcher.component.ts","./src/app/guards/health/metadata-alive.guard.ts","./src/app/metadata/metadata-routing.module.ts","./src/app/metadata/metadata.module.ts","./src/app/metadata/profile/device-profile-list/device-profile-list.component.html","./src/app/metadata/profile/device-profile-list/device-profile-list.component.ts","./src/app/services/command.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-metadata',\n  templateUrl: './metadata.component.html',\n  styleUrls: ['./metadata.component.css']\n})\nexport class MetadataComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n      <ul class=\"nav nav-tabs card-header-tabs font-weight-bold\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link \" routerLink=\"./device-service-list\" routerLinkActive=\"active\" i18n>Device Service</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"./device-center\" routerLinkActive=\"active\" i18n>Device</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"./device-profile-center\" routerLinkActive=\"active\" i18n>Device Profile</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"./provision-watcher-center\" routerLinkActive=\"active\" i18n>Provision Watcher</a>\n          </li>\n      </ul>\n    </div>\n    <div class=\"card-body\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<ul class=\"list-group p-0\">\n    <li *ngFor=\"let svc of deviceServiceList\" class=\"list-group-item list-group-item-action list-group-item-light\">\n        <div class=\"media\">\n            <div class=\"align-self-center mr-3\">\n                <i class=\"fa fa-tags fa-2x text-secondary\"></i>  \n            </div>\n            <div class=\"media-body\">\n                <div class=\"mt-0 mb-1\">\n                    <h5 class=\"d-inline mr-3 align-middle text-dark\">{{svc.name}}</h5>\n                    <!-- <span class=\"float-right\">\n                        <i class=\"fa fa-calendar align-baseline text-primary\"></i><span class=\"badge badge-light align-baseline\"> {{svc.created | date:'yyyy-MM-dd hh:mm:ss'}}</span>\n                    </span> -->\n                </div>\n                <p *ngIf=\"svc.description; else nodesc\">{{svc.description}}</p>\n                <ng-template #nodesc> <p class=\"my-1\">no description.</p> </ng-template>\n                <div>\n                    <span class=\"badge badge-info mr-3\">Port {{getSvcPort(svc.baseAddress)}}</span>\n                    <span [ngSwitch]=\"svc.adminState\">\n                        <span *ngSwitchCase=\"'UNLOCKED'\" class=\"badge badge-success mr-3\">{{svc.adminState}}</span> \n                        <span *ngSwitchDefault class=\"badge badge-danger mr-3\">{{svc.adminState}}</span> \n                    </span>\n                   <!-- <span [ngSwitch]=\"svc.operatingState\">\n                        <span *ngSwitchCase=\"'ENABLED'\" class=\"badge badge-success mr-3\">{{svc.operatingState}}</span>\n                        <span *ngSwitchDefault class=\"badge badge-danger mr-3\">{{svc.operatingState}}</span>\n                   </span> -->\n\n                    <a *ngIf=\"associatedDevices.size\" class=\"badge badge-primary\" role=\"button\" (click)=\"associatedDevicesSkip(svc.name)\">\n                        <i class=\"fa fa-sitemap mr-1\"></i><span i18n>Associated Devices</span>&nbsp; {{associatedDevices.get(svc.name)}}\n                    </a>\n                    <span class=\"badge badge-secondary float-right\" role=\"button\" (click)=\"edit(svc)\">\n                        <i class=\"fa fa-cog mr-1\"></i>\n                        <span i18n>Setting</span>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </li>\n</ul>\n\n<div *ngIf=\"deviceSvcSelected\" class=\"card mt-3\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-edit mr-1 text-danger\"></i>\n        <span i18n>edit</span><span class=\"ml-1\">{{ deviceSvcSelected.name }}</span>\n        <button class=\"btn btn-success btn-sm float-right\" (click)=\"updateSvc()\" i18n>Save</button>\n    </div>\n    <div class=\"card-body\">\n        <form>\n            <div class=\"form-group row\">\n                <label for=\"deviceDesc\" class=\"col-md-2 col-form-label\" i18n>Description</label>\n                <div class=\"col-md-10\">\n                  <input type=\"text\" class=\"form-control\" name=\"deviceSvcDescription\" [(ngModel)]=\"deviceSvcSelected.description\">\n                </div>\n              </div>\n            <div class=\"form-group row\">\n                <label for=\"adminState\" class=\"col-md-2 col-form-label\" i18n>AdminState</label>\n                <div class=\"col-md-10\">\n                    <select class=\"custom-select\"  name=\"deviceSvcAdminState\" [(ngModel)]=\"deviceSvcSelected.adminState\">\n                        <option value=\"UNLOCKED\">UNLOCKED</option>\n                        <option value=\"LOCKED\">LOCKED</option>\n                    </select>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\nimport { MetadataService } from '../../../services/metadata.service';\nimport { DeviceService } from '../../../contracts/v3/device-service';\nimport { MultiDeviceServiceResponse } from '../../../contracts/v3/responses/device-service-response';\nimport { MultiDeviceResponse } from '../../../contracts/v3/responses/device-response';\nimport {  MessageService } from '../../../message/message.service';\n\n@Component({\n  selector: 'app-device-service-media-list',\n  templateUrl: './device-service-media-list.component.html',\n  styleUrls: ['./device-service-media-list.component.css']\n})\nexport class DeviceServiceMediaListComponent implements OnInit {\n\n  deviceServiceList: DeviceService[] = [];\n  deviceSvcSelected?: DeviceService;\n  associatedDevices = new Map<string, string>();\n\n  constructor(private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.metaSvc.allDeviceServices().subscribe((data: MultiDeviceServiceResponse) => {\n      this.deviceServiceList = data.services;\n      this.deviceServiceList.forEach((svc) => {\n        this.metaSvc\n        .findDevicesByServiceName(0, 20, svc.name)\n        .subscribe((data: MultiDeviceResponse) => {\n          this.associatedDevices.set(svc.name, data.devices.length > 20 ? '20+' : String(data.devices.length))\n        });\n      });\n    })\n  }\n\n  getSvcPort(baseURL: string): string {\n    return (new URL(baseURL)).port\n  }\n\n  edit(svc: DeviceService) {\n    this.deviceSvcSelected = svc;\n  }\n\n  updateSvc() {\n    this.metaSvc\n    .updateDeviceService(this.deviceSvcSelected as DeviceService)\n    .subscribe(() => {\n      this.msgSvc.success(\"update device service\",`name: ${this.deviceSvcSelected?.name}`);\n      this.deviceSvcSelected = undefined;\n    })\n  }\n\n  associatedDevicesSkip(svcName: string) {\n    let navParam: NavigationExtras = {\n      queryParams: { 'svcName': svcName },\n      relativeTo: this.route\n    }\n    this.router.navigate(['../device-center'], navParam)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-device-center',\n  templateUrl: './device-center.component.html',\n  styleUrls: ['./device-center.component.css']\n})\nexport class DeviceCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div *ngIf=\"deviceCoreCommand; then hasAssociatedCommand else noAssociatedCommand\"></div>\n <ng-template #hasAssociatedCommand>\n    <div class=\"card mt-3\">\n        <div class=\"card-header\">\n            <span class=\"badge badge-danger text-light\">\n                <i class=\"fa fa-terminal font-weight-bolder\"></i>\n            </span>\n            <span class=\"text-primary mx-2 font-weight-bold\">{{associatedCmdDeviceName}}</span>\n            <span i18n>Associated Commands</span>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <div class=\"col-md-2 col-lg-2\">\n                    <div class=\"card mb-2\">\n                        <div class=\"card-header font-weight-bold\" i18n>\n                            Command Name List\n                        </div>\n                        <div class=\"card-body p-0\">\n                            <ul class=\"list-group list-group-flush\">\n                                <li *ngFor=\"let cmd of deviceCoreCommand\" role=\"button\" class=\"list-group-item list-group-item-action\" [class.list-group-item-info]='selectedCmd?.name === cmd.name' (click)=\"selectCmd(cmd)\">{{cmd.name}}</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-10 col-lg-10\">\n                    <div *ngIf=\"selectedCmd\" class=\"card\">\n                        <div class=\"card-header\">\n                            <span class=\"text-primary font-weight-bold mr-2\"><i class=\"fa fa-thumb-tack text-danger mr-1\"></i> {{selectedCmd.name}} method:</span>  \n                            <span i18n>Get and Set</span> \n                        </div>\n                        <div class=\"card-body px-2\">\n                            <div class=\"row\">\n                                <div class=\"col-md-5 col-lg-5\">\n                                    <div class=\"card mb-2\">\n                                        <div class=\"card-header\">\n                                            Get\n                                            <button *ngIf=\"selectedCmd.get\" (click)=\"issueGetCmd()\" class=\"btn btn-primary btn-sm float-right\">try</button>\n                                        </div>\n                                        <div class=\"card-body overflow-auto\">\n                                            <div *ngIf=\"selectedCmd.get; then hasGetMethod else noGetMethod\"></div>\n                                            <ng-template #hasGetMethod>\n                                                <div>\n                                                    <span class=\"badge badge-info\" i18n>Response:</span>  \n                                                    <span *ngIf=\"cmdGetResponse\" class=\"ml-2 text-primary\"> {{cmdGetResponse}}</span>\n                                                    <!-- <img *ngIf=\"cmdBinaryResponse; else noSupportedMediaType\" src=\"{{cmdBinaryResponseURL}}\">\n                                                    <ng-template #noSupportedMediaType>\n                                                        <h6 class=\"text-warning\"> <i class=\"fa fa-warning\"></i> the mediaType only supports image/jpeg, image/jpg, image/png</h6>\n                                                    </ng-template> -->\n                                                </div>\n                                                <div class=\"mt-3\">\n                                                    <span class=\"badge badge-info\" i18n>ResponseRaw:</span>\n                                                    <pre *ngIf=\"cmdGetResponseRaw\" class=\"mt-2 bg-secondary p-2 text-light rounded\">{{cmdGetResponseRaw}}</pre>\n                                                </div>\n                                            </ng-template>\n                                            <ng-template #noGetMethod>\n                                                <h6 class=\"text-warning\"> <i class=\"fa fa-warning mr-1\"></i><span i18n>no Get method</span></h6>\n                                            </ng-template>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-7 col-lg-7\">\n                                    <div class=\"card\">\n                                        <div class=\"card-header\">\n                                            Set\n                                            <button *ngIf=\"selectedCmd.set\" (click)=\"issueSetCmd()\" class=\"btn btn-primary btn-sm float-right\">try</button>\n                                        </div>\n                                        <div class=\"card-body\">\n                                            <div *ngIf=\"selectedCmd.set; then hasSetMethod else noSetMethod\"></div>\n\n                                            <ng-template #hasSetMethod>\n                                                <div *ngIf=\"selectedCmdSetParams\" class=\"card mb-2\">\n                                                    <div class=\"card-header\" i18n>Set Parameters</div>\n                                                    <div class=\"card-body\">\n                                                        <div *ngIf=\"selectedCmd\" class=\"d-flex flex-column bd-highlight\">\n                                                            <div *ngFor=\"let p of selectedCmdSetParams; let i=index;\" class=\"form p-2 bd-highlight\">\n                                                                <div *ngIf=\"p.valueType == 'Bool'; else valueTypeIsNotBool\">\n                                                                    <label for=\"{{p.resourceName}}\">\n                                                                         {{p.resourceName}}\n                                                                    </label> \n                                                                    <select id=\"{{p.resourceName}}\" name=\"{{p.resourceName}}\" [(ngModel)]=\"parameterBearerList[i].value\" class=\"custom-select custom-select-sm\">\n                                                                        <option [ngValue]=\"false\">false</option>\n                                                                        <option [ngValue]=\"true\">true</option>\n                                                                    </select>\n                                                                </div>\n                                                                <ng-template #valueTypeIsNotBool>\n                                                                    <label for=\"{{p.resourceName}}\">{{p.resourceName}}</label>\n                                                                    <input id=\"{{p.resourceName}}\" name=\"{{p.resourceName}}\" [(ngModel)]=\"parameterBearerList[i].value\" placeholder=\"valueType: {{p.valueType}}\" class=\"form-control form-control-sm\">\n                                                                </ng-template>\n                                                                \n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                    \n                                                <div>\n                                                    <div>\n                                                        <span class=\"badge badge-info\" i18n>Response:</span>\n                                                        <span *ngIf=\"cmdSetResponse\" class=\"ml-2 text-primary\">{{cmdSetResponse}}</span>\n                                                    </div>\n                                                    <div class=\"mt-3\">\n                                                        <span class=\"badge badge-info\" i18n>ResponseRaw:</span>\n                                                        <pre *ngIf=\"cmdSetResponseRaw\" class=\"mt-2 bg-secondary p-2 text-light rounded\">{{cmdSetResponseRaw}}</pre>\n                                                    </div>\n                                                </div>\n                                            </ng-template>\n\n                                            <ng-template #noSetMethod>\n                                                <h6 class=\"text-warning\"> <i class=\"fa fa-warning mr-1\"></i><span i18n>no Set method</span></h6>\n                                            </ng-template>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template  #noAssociatedCommand>\n    <div class=\"card mt-3\">\n        <div class=\"card-header\">\n            <span class=\"badge badge-danger text-light\">\n                <i class=\"fa fa-terminal font-weight-bolder\"></i>\n            </span>\n            <span class=\"text-primary mx-2 font-weight-bold\">{{associatedCmdDeviceName}}</span>\n            <span i18n>Associated Commands</span> \n        </div>\n        <div class=\"card-body text-center\">\n            <h5 class=\"text-warning\"> <i class=\"fa fa-warning\"></i><span i18n>no associated commands</span></h5>\n        </div>\n    </div>\n</ng-template>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, OnChanges } from '@angular/core';\n\nimport { CoreCommand } from '../../../contracts/v3/core-command';\nimport { CoreCommandParameter } from '../../../contracts/v3/core-command';\nimport { EventResponse } from '../../../contracts/v3/responses/event-response';\nimport { BaseReading } from '../../../contracts/v3/reading';\nimport { BaseResponse } from '../../../contracts/v3/common/base-response';\nimport { DeviceCoreCommandResponse } from '../../../contracts/v3/responses/device-core-command-response';\nimport { DeviceProfileResponse } from '../../../contracts/v3/responses/device-profile-response';\nimport { DeviceProfile } from '../../../contracts/v3/device-profile';\n\nimport { CommandService } from '../../../services/command.service';\nimport { MetadataService } from '../../../services/metadata.service';\n\ndeclare type ParameterBearer = {\n  [key: string]:  any\n}\n\n@Component({\n  selector: 'app-device-command-viewer',\n  templateUrl: './device-command-viewer.component.html',\n  styleUrls: ['./device-command-viewer.component.css']\n})\nexport class DeviceCommandViewerComponent implements OnInit, OnChanges {\n\n  @Input() deviceName?: string\n\n  deviceCoreCommand?: CoreCommand[];\n\n  selectedCmd: CoreCommand = {} as CoreCommand;\n  selectedCmdSetParams: CoreCommandParameter[] = [];\n  parameterBearerList: ParameterBearer[] = []\n\n  cmdBinaryResponse: any;\n  cmdBinaryResponseURL?: string;\n\n  cmdGetResponse: any;\n  cmdGetResponseRaw: any;\n\n  cmdSetResponse: any;\n  cmdSetResponseRaw: any;\n\n  associatedCmdDeviceName?: string;\n  associateDeviceProfile?: DeviceProfile\n\n  constructor(private cmdSvc: CommandService, private metadataSvc: MetadataService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    if (!this.deviceName) {\n      return\n    }\n    this.resetResponse();\n\n    this.cmdSvc\n    .findDeviceAssociatedCommnadsByDeviceName(this.deviceName)\n    .subscribe((data: DeviceCoreCommandResponse) => {\n      this.associatedCmdDeviceName = data.deviceCoreCommand.deviceName;\n      this.deviceCoreCommand = data.deviceCoreCommand.coreCommands;\n\n      if (!this.deviceCoreCommand || this.deviceCoreCommand.length === 0) {\n        return\n      }\n\n      //init selectedCmd for first one\n      this.selectedCmd = this.deviceCoreCommand[0];\n      this.selectedCmdSetParams = this.selectedCmd.parameters;\n      this.setParameterBearerList()\n\n      this.getAssociatedDeviceProfile(data.deviceCoreCommand.profileName)\n    })\n  }\n\n  getAssociatedDeviceProfile(profileName: string) {\n    this.metadataSvc\n    .findProfileByName(profileName)\n    .subscribe((data:DeviceProfileResponse) => this.associateDeviceProfile = data.profile);\n  }\n\n  selectCmd(cmd: CoreCommand) {\n    this.selectedCmd = cmd;\n    this.selectedCmdSetParams = this.selectedCmd.parameters;\n    this.resetResponse();\n    this.setParameterBearerList()\n  }\n\n  setParameterBearerList() {\n    this.parameterBearerList =  []\n    this.selectedCmdSetParams.forEach(p  => {\n      let paramBearer: ParameterBearer = {\n        'key': p.resourceName,\n        'value': ''\n      }\n      this.parameterBearerList.push(paramBearer)\n    })\n  }\n\n  resetResponse() {\n    this.cmdGetResponse = \"\";\n    this.cmdGetResponseRaw = \"\";\n\n    this.cmdSetResponse = \"\";\n    this.cmdSetResponseRaw = \"\";\n\n    this.cmdBinaryResponse = true;\n    this.cmdBinaryResponseURL = \"\";\n  }\n\n  isBinaryResource(): boolean {\n    let isBinary = false;\n\n    this.associateDeviceProfile!.deviceResources.forEach(resource => {\n      if (resource.name === this.selectedCmd!.name && resource.properties.valueType === \"Binary\") {\n          isBinary = true\n          return\n      }\n    });\n\n    if (isBinary) {\n      return isBinary\n    }\n\n    this.associateDeviceProfile!.deviceCommands.forEach(dc => {\n      if (dc.name === this.selectedCmd!.name) {\n        dc.resourceOperations.forEach(ro => {\n          this.associateDeviceProfile!.deviceResources.forEach(dr => {\n            if (ro.deviceResource === dr.name && dr.properties.valueType === \"Binary\") {\n              isBinary = true\n              return\n            }\n          });\n        })\n      }\n    });\n\n    return isBinary\n  }\n\n  issueGetCmd() {\n    this.cmdSvc\n    .issueGetCmd(this.associatedCmdDeviceName as string, this.selectedCmd!.name as string)\n    .subscribe((resp: EventResponse) => {\n      this.cmdGetResponseRaw = JSON.stringify(resp.event.readings, null, 3);\n      if (this.isBinaryResource()) {\n        this.cmdGetResponse = \"Binary resource is not supported for preview\"\n        return\n      }\n      let result: any[] = [];\n      resp.event.readings.forEach((reading: BaseReading) => {\n        result.push(reading.value);\n      });\n      this.cmdGetResponse = result.join(',');\n    })\n  }\n\n  issueGetCmdOfBinaryResource() {\n    this.cmdSvc.issueGetBinaryCmd(this.associatedCmdDeviceName as string, this.selectedCmd!.name as string)\n      .subscribe((data: any) => {\n        let result = CBOR.decode(data)\n        if (result.mediaType === \"image/jpeg\" ||\n          result.mediaType === \"image/jpg\" ||\n          result.mediaType === \"image/png\"\n        ) {\n          this.cmdBinaryResponse = result.binaryValue;\n          this.cmdBinaryResponseURL = URL.createObjectURL(this.cmdBinaryResponse);\n        } else {\n          this.cmdBinaryResponse = \"only image binary is supported\";\n        }\n      })\n  }\n\n  issueSetCmd() {\n    let params: any = {};\n    this.parameterBearerList.forEach((paramBearer) => {\n      params[paramBearer.key] = paramBearer.value\n    })\n\n    this.cmdSvc\n    .issueSetCmd(this.associatedCmdDeviceName as string, this.selectedCmd?.name as string, params)\n    .subscribe((resp: BaseResponse) => {\n      this.cmdSetResponseRaw = JSON.stringify(resp, null, 3);\n      this.cmdSetResponse = resp.message\n    })\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-list text-danger mr-2\"></i> \n        <span *ngIf=\"associatedSvcName !== ''\"> \n            <span class=\"mr-1\" i18n>DeviceService</span>\n            <span class=\"text-danger mr-1\">{{associatedSvcName}}</span> \n            <span i18n>Associated Device List</span>\n        </span>\n        <span *ngIf=\"associatedProfileName !== ''\"> \n            <span class=\"mr-1\" i18n>DeviceProfile</span>\n            <span class=\"text-danger mr-1\">{{associatedProfileName}}</span>\n            <span i18n>Associated Device List</span>\n        </span>\n        <span  *ngIf=\"associatedProfileName === '' && associatedSvcName === ''\" i18n>Device List</span>\n    </div>\n    <div class=\"card-body p-0 position-relative\">\n        <div class=\"bg-light px-2 py-2\">\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n                <button class=\"btn btn-primary\" data-testid=\"device-list-refresh-btn\" (click)=\"refresh()\">\n                    <span>\n                        <i class=\"fa fa-refresh mr-1\"></i>\n                        <span i18n>Refresh</span>\n                    </span> \n                </button>\n                <button type=\"button\" class=\"btn btn-info\"  routerLink=\"../add-device\">\n                    <span>\n                        <i class=\"fa fa-plus mr-1\"></i>\n                        <span i18n>Add</span> \n                    </span>\n                </button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"edit()\" [disabled]=\"selectedDevice.length !== 1\">\n                    <span>\n                        <i class=\"fa fa-edit mr-1\"></i>\n                        <span i18n>Edit</span> \n                    </span>\n                </button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteConfirm()\" [disabled]=\"selectedDevice.length === 0\">\n                    <span>\n                        <i class=\"fa fa-trash mr-1\"></i>\n                        <span i18n>Delete</span>\n                    </span>\n                </button>\n              </div>\n        </div>\n        <div class=\"table-responsive \">\n            <table class=\"table table-hover text-truncate \">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\"><input type=\"checkbox\" role=\"button\" [checked]=\"isCheckedAll()\" (click)=\"selectAll($event)\"></th>\n                      <th scope=\"col\" i18n>ID</th>\n                      <th scope=\"col\" i18n>Name</th>\n                      <th scope=\"col\" i18n>Description</th>\n                      <th scope=\"col\" i18n>Labels</th>\n                      <th scope=\"col\" i18n>AdminState</th>\n                      <th scope=\"col\" i18n>OperatingState</th>\n                      <th scope=\"col\" i18n>Command</th>\n                      <th scope=\"col\" i18n>AutoEvents</th>\n                      <th scope=\"col\" i18n>AssociatedProfile</th>\n                      <th scope=\"col\" i18n>AssociatedService</th>\n                      \n                      <!-- <th scope=\"col\">Created</th>\n                      <th scope=\"col\">Modified</th> -->\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let device of deviceList\" [class.table-active]=\"isChecked(device.id) || specialFeatureAssociatedDeviceName === device.name\">\n                        <td> <input type=\"checkbox\" role=\"button\"  [checked]=\"isChecked(device.id)\" (click)=\"selectOne($event,device)\"></td>\n                        <td class=\"user-select-all\">{{device.id}}</td>\n                        <td class=\"user-select-all\">{{device.name}}</td>\n                        <td>{{device.description}}</td>\n                        <td>{{device.labels}}</td>\n                        <td>\n                            <span [ngSwitch]=\"device.adminState\">\n                                <span *ngSwitchCase=\"'UNLOCKED'\" class=\"badge badge-success\">{{device.adminState}}</span> \n                                <span *ngSwitchDefault class=\"badge badge-danger\">{{device.adminState}}</span> \n                            </span>\n                        </td>\n                        <td class=\"text-center\">\n                            <span [ngSwitch]=\"device.operatingState\">\n                                <span *ngSwitchCase=\"'UP'\" class=\"badge badge-success\"> {{device.operatingState}}</span> \n                                <span *ngSwitchCase=\"'DOWN'\" class=\"badge badge-danger\"> {{device.operatingState}}</span> \n                                <span *ngSwitchDefault class=\"badge badge-danger\"> {{device.operatingState}}</span> \n                            </span>\n                        </td>\n                        <td class=\"text-center\">\n                            <span class=\"badge badge-primary text-light\" [class.badge-danger]=\"specialFeatureName === FEATURE_COMMAND && specialFeatureAssociatedDeviceName === device.name\"  role=\"button\" (click)=\"setSpecialFeatureViewer(device,FEATURE_COMMAND)\">\n                                <i class=\"fa fa-terminal font-weight-bolder\"></i>\n                            </span>\n                        </td>\n                        <td class=\"text-center\">\n                            <span class=\"badge badge-primary text-light\" [class.badge-danger]=\"specialFeatureName === FEATURE_AUTOEVENT && specialFeatureAssociatedDeviceName === device.name\" role=\"button\" (click)=\"setSpecialFeatureViewer(device,FEATURE_AUTOEVENT)\">\n                                <i class=\"fa fa-calendar-check-o font-weight-bolder\"></i>\n                            </span>\n                        </td>\n                        <td>\n                            <a routerLink=\"../../device-profile-center\" [queryParams]=\"{'profileName':device.profileName}\">{{device.profileName}}</a>\n                        </td>\n                        <td>\n                            <a routerLink=\"../../device-service-list\">{{device.serviceName}}</a> \n                        </td>\n                       \n                        <!-- <td>{{device.created | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                        <td>{{device.modified | date:'yyyy-MM-dd hh:mm:ss' }}</td> -->\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\" i18n>items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"custom-select\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\">\n                        <i class=\"fa fa-angle-double-left mr-1\"></i>\n                        <span i18n>Previous</span>  \n                    </button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > deviceList.length\">\n                        <span i18n>Next</span>\n                        <i class=\"fa fa-angle-double-right ml-1\"></i>\n                    </button>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>\n\n<div *ngIf=\"specialFeatureName === FEATURE_AUTOEVENT\">\n    <div *ngIf=\"autoEvents; else noAutoEvents\">\n        <div class=\"card mt-3\">\n            <div class=\"card-header\">\n                <span class=\"badge badge-danger text-light\">\n                    <i class=\"fa fa-calendar-check-o font-weight-bolder\"></i>\n                </span>\n                <span class=\"text-primary mx-2 font-weight-bold\"> {{specialFeatureAssociatedDeviceName}}</span><span i18n>Associated AutoEvents</span> \n            </div>\n            <div class=\"card-body p-0\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-hover text-truncate\">\n                        <thead class=\"thead-light\">\n                            <th scope=\"col\" i18n>Resource</th>\n                            <th scope=\"col\" i18n>Interval</th>\n                            <th scope=\"col\" i18n>Onchange</th>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let event of autoEvents\">\n                                <td>{{event.sourceName}}</td>\n                                <td><span class=\"badge badge-secondary badge-pill\">{{event.interval}}</span></td>\n                                <td><span class=\"\">{{event.onChange}}</span></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ng-template #noAutoEvents>\n        <div class=\"card mt-3\">\n            <div class=\"card-header\">\n                <span class=\"badge badge-danger text-light\">\n                    <i class=\"fa fa-calendar-check-o font-weight-bolder\"></i>\n                </span>\n                <span class=\"text-primary mx-2 font-weight-bold\"> {{specialFeatureAssociatedDeviceName}}</span><span i18n>Associated AutoEvents</span>\n            </div>\n            <div class=\"card-body text-center\">\n                <h5 class=\"text-warning\">\n                    <i class=\"fa fa-warning mr-1\"></i> \n                    <span i18n>no associated AutoEvents</span>\n                </h5>\n            </div>\n        </div>\n    </ng-template>\n</div>\n\n<div *ngIf=\"specialFeatureName === FEATURE_COMMAND\">\n    <app-device-command-viewer [deviceName]=\"specialFeatureAssociatedDeviceName\"></app-device-command-viewer>\n</div>\n\n\n\n<div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning mr-1\"></i>\n                    <span i18n>Warning</span>\n                </h5>  \n            </div>\n            <div class=\"modal-body\" i18n>\n                The data will be permanently erased!!! Are you sure to execute delete operation？\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" i18n>Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\" i18n>Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\nimport { MultiDeviceResponse } from '../../../contracts/v3/responses/device-response';\nimport { Device } from '../../../contracts/v3/device';\nimport { AutoEvent } from '../../../contracts/v3/auto-event';\nimport { DeviceProfile } from '../../../contracts/v3/device-profile';\n\n@Component({\n  selector: 'app-device-list',\n  templateUrl: './device-list.component.html',\n  styleUrls: ['./device-list.component.css']\n})\nexport class DeviceListComponent implements OnInit {\n\n  @Input() toolbars: boolean = true;\n  @Input() enableSelectAll: boolean = true;\n\n  deviceList: Device[] = [];\n  associatedSvcName: string = '';\n  associatedProfileName: string = '';\n\n  selectedDevice: Device[] = [];\n  associateDeviceProfile?: DeviceProfile;\n  autoEvents?: AutoEvent[];\n  FEATURE_AUTOEVENT =  \"autoevent\"\n  FEATURE_COMMAND = \"command\"\n  specialFeatureAssociatedDeviceName?: string;\n  specialFeatureName?: string\n\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n\n  constructor(\n    private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      if (params['svcName']) {\n        this.associatedSvcName = params['svcName'];\n        this.getDeviceListByAssociatedSvc(this.associatedSvcName);\n        return\n      } else if (params['profileName']) {\n        this.associatedProfileName = params['profileName'];\n        this.getDeviceListByAssociatedProfile(this.associatedProfileName);\n        return\n      } else {\n        this.associatedSvcName = '';\n        this.associatedProfileName = '';\n        this.getDeviceListPagination();\n      }\n    });\n  }\n\n  renderPopoverComponent() {\n    setTimeout(() => {\n      $('[data-toggle=\"popover\"]').popover({\n        trigger: 'hover'\n      });\n    }, 250);\n  }\n\n\n  getDeviceList() {\n    if (this.associatedSvcName !== '') {\n      this.getDeviceListByAssociatedSvc(this.associatedSvcName);\n      return\n    }\n    if (this.associatedProfileName !== '') {\n      this.getDeviceListByAssociatedProfile(this.associatedSvcName);\n      return\n    }\n    this.getDeviceListPagination();\n  }\n\n  getDeviceListByAssociatedSvc(svcName: string) {\n    this.metaSvc.findDevicesByServiceName(this.pageOffset, this.pageLimit, svcName).subscribe((data: MultiDeviceResponse) => this.deviceList = data.devices);\n  }\n\n  getDeviceListByAssociatedProfile(profileName: string) {\n    this.metaSvc.findDevicesByProfileName(this.pageOffset, this.pageLimit, profileName).subscribe((data: MultiDeviceResponse) => this.deviceList = data.devices);\n  }\n\n  getDeviceListPagination() {\n    this.metaSvc.allDevicesPagination(this.pageOffset, this.pageLimit).subscribe((data: MultiDeviceResponse) => {\n      this.deviceList = data.devices;\n    });\n  }\n\n  refresh() {\n    this.associatedProfileName = '';\n    this.associatedSvcName = '';\n    this.metaSvc.allDevicesPagination(0, this.pageLimit).subscribe((data: MultiDeviceResponse) => {\n      this.deviceList = data.devices;\n      this.msgSvc.success('refresh');\n      this.resetPagination();\n    });\n  }\n\n  edit() {\n    this.router.navigate(['../edit-device'], {\n      relativeTo: this.route,\n      queryParams: { 'deviceName': this.selectedDevice[0].name }\n    })\n  }\n\n  deleteConfirm() {\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n\n  delete() {\n    this.selectedDevice.forEach((d,i) => {\n      this.metaSvc.deleteOneDeviceByName(d.name).subscribe(() => {\n        this.selectedDevice.splice(i,1);\n        this.deviceList.forEach((device: Device, index) => {\n          if (device.id === d.id) {\n            this.deviceList.splice(index, 1);\n            this.msgSvc.success('remove device ', ` Name: ${device.name}`);\n            return\n          }\n        });\n      });\n\n    });\n    //close Command or AutoEvent feature viewer window\n    this.specialFeatureName = undefined;\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  setSpecialFeatureViewer(device: Device, featureName: string) {\n    this.specialFeatureAssociatedDeviceName = device.name\n    this.specialFeatureName = featureName\n    switch (this.specialFeatureName) {\n      case this.FEATURE_AUTOEVENT:\n        this.autoEvents = device.autoEvents;\n        break;\n      default:\n        break;\n    }\n  }\n\n  isCheckedAll(): boolean {\n    let checkedAll = true;\n    if (this.deviceList &&  this.deviceList.length === 0) {\n      checkedAll = false\n    }\n    this.deviceList.forEach(device => {\n      if (this.selectedDevice.findIndex(d => d.name === device.name) === -1) {\n        checkedAll = false\n      }\n    });\n    return checkedAll\n  }\n\n  selectAll(event: any) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.deviceList.forEach(device => {\n        if (this.selectedDevice.findIndex(d => d.name === device.name) !== -1) {\n          return\n        }\n        this.selectedDevice.push(device);\n      });\n    } else {\n      this.deviceList.forEach(device => {\n        this.selectedDevice.forEach((deviceSelected, index) => {\n          if (deviceSelected.name === device.name) {\n            this.selectedDevice.splice(index,1);\n          }\n        })\n      });\n    }\n  }\n\n  isChecked(id: string): boolean {\n    return this.selectedDevice.findIndex(device => device.id === id) >= 0;\n  }\n\n  selectOne(event: any, device: Device) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.selectedDevice.push(device);\n      return\n    }\n    this.selectedDevice.forEach((d,i) => {\n      if (d.name === device.name) {\n        this.selectedDevice.splice(i, 1);\n      }\n    })\n  }\n\n  onPageSelected() {\n    this.resetPagination();\n    this.getDeviceList();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.getDeviceList();\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.getDeviceList();\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n}\n","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nexport class MqttProtocolTemplate {\n  Schema: string = \"\";\n  Host: string = \"\";\n  Port: string = \"\";\n  User: string = \"\";\n  Password: string = \"\";\n  ClientId: string = \"\";\n  CommandTopic: string = \"\";\n}\n\nexport class ModusTCPProtocolTemplate {\n  Address: string = \"\";\n  Port: string = \"\";\n  UnitID: string = \"\";\n  Timeout: string = \"\";\n  IdleTimeout: string = \"\";\n}\n\nexport class ModusRTUProtocolTemplate {\n  Address: string = \"\";\n  UnitID: string = \"\";\n  BaudRate: string = \"\";\n  DataBits: string = \"\";\n  StopBits: string = \"\";\n  Parity: string = \"\"; // Parity: N - None, O - Odd, E - Even\n  Timeout: string = \"\";\n  IdleTimeout: string = \"\";\n}\n\nexport class VirtualProtocolTemplate {\n  Address: string = \"\";\n  Port: string = \"\";\n}\n\nexport class OnvifProtocolTemplate {\n  Address: string = \"\";\n  Port: string = \"\";\n  MACAddress: string = \"\";\n}\n\nexport class TCPProtocolTemplate {\n  host: string = \"\";\n  port: string = \"\";\n}","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-tags fa-lg text-danger mr-1\"></i><span i18n>Device Protocol</span>\n    </div>\n    <div class=\"card-body\">\n        <div *ngIf=\"mode\" class=\"card\">\n            <div class=\"card-body\">\n                <div *ngIf=\"mode === MODE_ADD\" class=\"mb-2\">\n                    <span class=\"user-select-none badge font-weight-bold mr-3\" role=\"button\" (click)=\"changeProtocolTemplateMode(TEMPLATE_BUILT_IN)\" [class.badge-primary]=\"protocolTemplateMode === TEMPLATE_BUILT_IN\" [class.badge-secondary]=\"protocolTemplateMode !== TEMPLATE_BUILT_IN\">\n                        <i class=\"fa fa-square-o mr-1\" [class.fa-check-square]=\"protocolTemplateMode === TEMPLATE_BUILT_IN\"></i>\n                        <span i18n>Avaliable Protocol Templates</span>\n                    </span>\n    \n                    <span class=\"user-select-none badge font-weight-bold\" role=\"button\" (click)=\"changeProtocolTemplateMode(TEMPLATE_CUSTOM)\"  [class.badge-primary]=\"protocolTemplateMode === TEMPLATE_CUSTOM\" [class.badge-secondary]=\"protocolTemplateMode !== TEMPLATE_CUSTOM\">\n                        <i class=\"fa fa-square-o mr-1\" [class.fa-check-square]=\"protocolTemplateMode === TEMPLATE_CUSTOM\"></i>\n                        <span i18n>Custom Protocol Templates</span>\n                    </span>\n                </div>\n                \n                <div *ngIf=\"protocolTemplateMode === TEMPLATE_CUSTOM; then customProtocolTemplate else builtinProtocolTemplate\"> \n                </div>\n\n                <ng-template  #builtinProtocolTemplate>\n                    <div class=\"row border border-secondary p-2 rounded-lg mx-1\">\n                        <div class=\"col-md-2 border-right border-info\">\n                            <form>\n                                <div class=\"form-group\">\n                                    <label i18n>Protocol Name</label>\n                                    <select type=\"text\" class=\"custom-select\"  name=\"builtinProtocolName\" [class.is-invalid]=\"!builtinProtocolName\" [class.is-valid]=\"builtinProtocolName\" [(ngModel)]=\"builtinProtocolName\" (ngModelChange)=\"onSelectBuiltinProtocolTemplate()\" required>\n                                        <option value=\"mqtt\">device-mqtt</option>\n                                        <option value=\"other-rest\">device-rest</option>\n                                        <option value=\"other\">device-virtual</option>\n                                        <option value=\"modbus-tcp\">device-modbus-tcp</option>\n                                        <option value=\"modbus-rtu\">device-modbus-rtu</option>\n                                        <option value=\"Onvif\">device-onvif-camera</option>\n                                        <option value=\"tcp\">device-rfid-llrp</option>\n                                    </select>\n                                    <div class=\"invalid-feedback\">\n                                        <small i18n>the protocol name can't be empty!</small> \n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"col-md-10\">\n                            <div *ngIf=\"builtinProtocolTemplateProperties.length !== 0; else noBuiltinProperties\">\n                                <div *ngFor=\"let property of builtinProtocolTemplateProperties\">\n                                    <form class=\"form-inline mb-1\">\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                              <span class=\"input-group-text\" i18n>PropertyName</span>\n                                            </div>\n                                            <input type=\"text\" class=\"form-control\"  disabled [value]=\"property\" style=\"width: 300px;\">\n                                        </div>\n                                        <div class=\"form-group mx-2\">\n                                            <i class=\"fa fa-long-arrow-right\"></i> \n                                        </div>\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                              <span class=\"input-group-text\" i18n>PropertyVaule</span>\n                                            </div>\n                                            <input type=\"text\" class=\"form-control\" name=\"property\" [(ngModel)]=\"builtinProtocolTemplateSelected[property]\" style=\"width: 300px;\" >\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                            <ng-template #noBuiltinProperties>\n                                <div>\n                                    <span class=\"fa fa-info-circle fa-lg text-success font-weight-bold mr-1\">\n                                    </span>\n                                    <span class=\"text-muted\" i18n>\n                                        all built-in protocol templates refer to the device service released by edgex, such as device-virtual, device-rest, device-mqtt, device-modbus\n                                    </span>\n                                </div>\n                                <h5 *ngIf=\"builtinProtocolTemplateProperties.length === 0 && builtinProtocolName\" class=\"text-warning\">\n                                    <i class=\"fa fa-warning mr-1\"></i>\n                                    <span i18n>this device service doesn't need to set protocol properties</span>\n                                </h5>\n                            </ng-template>\n                        </div>\n                    </div>\n                </ng-template>\n\n                <ng-template #customProtocolTemplate>\n                    <div class=\"row  border border-secondary p-2 rounded-lg mx-1\">\n                        <div class=\"col-md-2 col-lg-2 border-right border-secondary\">\n                            <div class=\"form-group\">\n                                <label i18n>Protocol Name</label>\n                                <input type=\"text\" class=\"form-control\" [class.is-invalid]=\"!customProtocolName\" [class.is-valid]=\"customProtocolName\" name=\"customProtocolName\" [(ngModel)]=\"customProtocolName\" (ngModelChange)=\"onCustomProtocolNameChange()\">\n                                <div class=\"invalid-feedback\">\n                                    <small i18n>the protocol name can't be empty!</small> \n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-10 col-lg-10\">\n                            <div>\n                                <p class=\"badge badge-secondary font-weight-bold\">\n                                    <span class=\"fa fa-plus-circle mr-2\"></span>\n                                    <span class=\"user-select-none\" role=\"button\" (click)=\"addCustomProtocolProperty()\" i18n>Add Protocol Property</span>\n                                </p>\n                            </div>\n    \n                            <div *ngFor=\"let property of customProtocolPropertyBearer\">\n                                <form class=\"form-inline mb-1\">\n                                    <div class=\"input-group\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\" i18n>PropertyName</span>\n                                        </div>\n                                        <input type=\"text\" class=\"form-control\" name=\"propertyName\" [(ngModel)]=\"property.propertyName\" style=\"width: 300px;\">\n                                    </div>\n                                    <div class=\"form-group mx-2\">\n                                        <i class=\"fa fa-long-arrow-right\"></i> \n                                    </div>\n                                    <div class=\"input-group\">\n                                        <div class=\"input-group-prepend\">\n                                            <span class=\"input-group-text\" i18n>PropertyValue</span>\n                                        </div>\n                                        <input type=\"text\" class=\"form-control\" name=\"PropertyValue\" [(ngModel)]=\"property.propertyValue\" style=\"width: 300px;\">\n                                    </div>\n                                    <div class=\"input-group ml-2\">\n                                        <button class=\"btn btn-danger btn-sm\" (click)=\"removeCustomProtocolProperty(property)\"> <i class=\"fa fa-trash\"></i> </button>\n                                    </div>\n                                </form>\n                            </div>\n    \n                        </div>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ModusRTUProtocolTemplate, ModusTCPProtocolTemplate, \n  MqttProtocolTemplate,VirtualProtocolTemplate,\n  OnvifProtocolTemplate, TCPProtocolTemplate } from './builtin-protocol-template/types'\n\ndeclare type protocol = {\n  [key: string]: properties;\n};\n\ndeclare type properties = {\n  [key: string]: any;\n};\n\ninterface ProtocolProperty {\n  propertyName: string,\n  propertyValue: string\n}\n\n@Component({\n  selector: 'app-device-protocol',\n  templateUrl: './device-protocol.component.html',\n  styleUrls: ['./device-protocol.component.css']\n})\nexport class DeviceProtocolComponent implements OnInit {\n\n  MODE_ADD = 'add'\n  MODE_EDIT = 'edit'\n  @Input() mode?: string //add or edit\n\n  @Input() deviceProtocols: protocol = {}\n  protocolName?: string\n\n  @Input() isValid: boolean = false\n  @Output() isValidChange = new EventEmitter<boolean>()\n\n  TEMPLATE_CUSTOM = \"custom\"\n  TEMPLATE_BUILT_IN = \"built-in\"\n  protocolTemplateMode?: string; //custom or built-in\n\n  customProtocolName?: string;\n  customProtocolPropertyBearer: ProtocolProperty[] = []\n\n  builtinProtocolName?: string\n  builtinProtocolTemplateSelected: any;\n  builtinProtocolTemplateProperties: string[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    if(!this.mode)  {\n      return\n    }\n\n    //right now, edit mode only supports rendering custom protocol template \n    //the protocol template conversion between \n    //custom and built-in, add and edit mode is quite complex in angular two-way binding mode.\n    if (this.mode ==  this.MODE_EDIT) {\n      this.protocolTemplateMode = this.TEMPLATE_CUSTOM\n      this.extractProtocolName()\n      if (!this.protocolName) {\n        this.customProtocolName  = ''\n      } else {\n        this.customProtocolName = this.protocolName\n      }\n     \n      this.setCustomProtocolPropertysBearer()\n      return\n    }\n\n    //add mode\n    if (this.mode ==  this.MODE_ADD) {\n      this.protocolTemplateMode = this.TEMPLATE_BUILT_IN\n    }\n    this.validate()\n  }\n\n  extractProtocolName() {\n    if (!this.deviceProtocols || Object.keys(this.deviceProtocols).length === 0) {\n      return\n    }\n    this.protocolName = Object.keys(this.deviceProtocols)[0];\n  }\n\n  onSelectBuiltinProtocolTemplate() {\n    this.validate()\n    switch (this.builtinProtocolName) {\n      case 'mqtt':\n        this.builtinProtocolTemplateSelected = new MqttProtocolTemplate();\n        break\n      case 'modbus-tcp':\n        this.builtinProtocolTemplateSelected = new ModusTCPProtocolTemplate();\n        break\n      case 'modbus-rtu':\n        this.builtinProtocolTemplateSelected = new ModusRTUProtocolTemplate();\n        break\n      case 'other':\n          this.builtinProtocolTemplateSelected = new VirtualProtocolTemplate();\n          break\n      case 'other-rest':\n        this.builtinProtocolTemplateSelected = {};\n        break\n      case 'Onvif':\n        this.builtinProtocolTemplateSelected = new OnvifProtocolTemplate();\n        break\n      case 'tcp':\n        this.builtinProtocolTemplateSelected = new TCPProtocolTemplate();\n        break\n      default:\n        this.builtinProtocolTemplateSelected = {};\n    }\n    this.builtinProtocolTemplateProperties = Object.keys(this.builtinProtocolTemplateSelected)\n  }\n\n  changeProtocolTemplateMode(templateMode: string) {\n    this.protocolTemplateMode = templateMode;\n    this.validate()\n  }\n\n  onCustomProtocolNameChange() {\n    this.validate()\n  }\n\n  setCustomProtocolPropertysBearer() {\n    if (!this.customProtocolName) {\n      return\n    }\n\n    for (const [key, value] of Object.entries(this.deviceProtocols[this.customProtocolName])) {\n      this.customProtocolPropertyBearer.push({ propertyName: key, propertyValue: value as string })\n    }\n  }\n\n  addCustomProtocolProperty() {\n    this.customProtocolPropertyBearer.push({propertyName:'',  propertyValue: ''})\n  }\n\n  removeCustomProtocolProperty(property: ProtocolProperty) {\n    this.customProtocolPropertyBearer.splice(this.customProtocolPropertyBearer.indexOf(property),1)\n  }\n\n  getDeviceProtocols(): protocol {\n    this.deviceProtocols = {}\n    if (this.protocolTemplateMode === this.TEMPLATE_BUILT_IN) {\n      this.deviceProtocols[this.builtinProtocolName as string] = Object.assign({}, this.builtinProtocolTemplateSelected)\n    } else {\n      let property: properties = {} \n      this.customProtocolPropertyBearer.forEach(p => {\n        property[p.propertyName] = p.propertyValue\n      })\n      this.deviceProtocols[this.customProtocolName as string] = property\n    }\n    return this.deviceProtocols\n  }\n\n  validate() {\n    this.isValid = true\n    switch (this.protocolTemplateMode) {\n      case this.TEMPLATE_BUILT_IN:\n        if (!this.builtinProtocolName) {\n          this.isValid = false\n        }\n        break;\n    \n      default:\n        if (!this.customProtocolName) {\n          this.isValid = false\n        }\n        break;\n    }\n    this.isValidChange.emit(this.isValid)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n     <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-list mr-2 text-danger\"></i>\n        <span i18n>Device Service List</span>\n     </div>\n     <div class=\"card-body p-0\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-hover text-truncate\">\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\" i18n>ID</th>\n                        <th scope=\"col\" i18n>Name</th>\n                        <th scope=\"col\" i18n>Description</th>\n                        <th scope=\"col\" i18n>Labels</th>\n                        <th scope=\"col\" i18n>AdminState</th>\n                        <!-- <th scope=\"col\">OperatingState</th> -->\n                        <th scope=\"col\" i18n>Created</th>\n                        <th scope=\"col\" i18n>Modified</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let svc of deviceServiceList\" [class.table-active]=\"isSvcChecked(svc.name)\">\n                        <td><input type=\"checkbox\" role=\"button\" [checked]=\"isSvcChecked(svc.name)\" (click)=\"selectOneSvc($event,svc.name)\"></td>\n                        <td>{{svc.id}}</td>\n                        <td>{{svc.name}}</td>\n                        <td>{{svc.description}}</td>\n                        <td>{{svc.labels}}</td>\n                        <td>{{svc.adminState}}</td>\n                        <!-- <td>{{svc.operatingState}}</td> -->\n                        <td>{{svc.created | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                        <td>{{svc.modified | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n     </div>\n     <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\" i18n>items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"custom-select\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\">\n                        <i class=\"fa fa-angle-double-left mr-1\"></i> \n                        <span i18n>Previous</span>\n                    </button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > deviceServiceList.length\">\n                        <span i18n>Next</span>\n                        <i class=\"fa fa-angle-double-right ml-1\"></i>\n                    </button>\n                </li>\n            </ul>\n        </nav>\n     </div>\n </div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { DeviceService } from '../../../contracts/v3/device-service';\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MultiDeviceServiceResponse } from '../../../contracts/v3/responses/device-service-response';\n\n@Component({\n  selector: 'app-device-service-list',\n  templateUrl: './device-service-list.component.html',\n  styleUrls: ['./device-service-list.component.css']\n})\nexport class DeviceServiceListComponent implements OnInit {\n\n  @Output() singleDeviceSvcSelectedEvent = new EventEmitter<DeviceService>();\n  deviceServiceList: DeviceService[] = [];\n  @Input() deviceSvcSelected?: DeviceService;\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n\n  constructor(private metaSvc: MetadataService) { }\n\n  ngOnInit(): void {\n    this.findAllDeviceSvcPagination();\n  }\n\n  findAllDeviceSvcPagination() {\n    this.metaSvc\n    .findAllDeviceServicesPagination(this.pageOffset, this.pageLimit)\n    .subscribe((resp: MultiDeviceServiceResponse) => {\n      this.deviceServiceList = resp.services;\n    })\n  }\n\n  onSingleDeviceSvcSelectedEmitter() {\n    this.singleDeviceSvcSelectedEvent.emit(this.deviceSvcSelected);\n  }\n\n  isSvcChecked(name: string): boolean {\n    return this.deviceSvcSelected?.name === name\n  }\n\n  selectOneSvc(event: any, name: string) {\n    const checkbox = event.target;\n    let self = this;\n    if (checkbox.checked) {\n      this.deviceServiceList.forEach(function (svc) {\n        if (svc.name === name) {\n          self.deviceSvcSelected = svc;\n        }\n      });\n    } else {\n      this.deviceSvcSelected = undefined;\n    }\n    this.onSingleDeviceSvcSelectedEmitter();\n  }\n\n  onPageSelected() {\n    this.resetPagination();\n    this.setPagination();\n    this.findAllDeviceSvcPagination();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.findAllDeviceSvcPagination();\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.findAllDeviceSvcPagination();\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-tags fa-lg text-danger mr-1\"></i><span i18n>AutoEvents</span>\n    </div>\n    <div class=\"card-body\">\n        <p class=\"badge badge-secondary font-weight-bold\">\n            <span class=\"fa fa-plus-circle mr-2\"></span>\n            <span class=\"user-select-none\" role=\"button\" (click)=\"addAutoEvent()\" i18n>Add More AutoEvent</span>\n        </p>\n        <div class=\"card mb-3\" *ngFor=\"let event of autoEventDecoratorBearer\">\n            <div class=\"card-body\">\n                <form>\n                    <div class=\"form-group row has-validation\">\n                        <label class=\"col-md-2 col-form-label\" i18n>Interval</label>\n                        <div class=\"col-md-10\">\n                            <div class=\"input-group mb-3\"  style=\"width: 250px;\">\n                                <input type=\"text\" name=\"interval\" [(ngModel)]=\"event.interval\" (ngModelChange)=\"onValueChange()\" [class.is-invalid]=\"!eventIntervalNumType(event.interval)\" [class.is-valid]=\"eventIntervalNumType(event.interval)\" class=\"form-control\" required>\n                                <div class=\"input-group-append\">\n                                    <select class=\"custom-select\" name=\"eventIntervalUnit\" [(ngModel)]=\"event.unit\" (ngModelChange)=\"onValueChange()\" required>\n                                        <option value=\"ms\">millisecond</option>\n                                        <option value=\"s\">second</option>\n                                        <option value=\"m\">minute</option>\n                                        <option value=\"h\">hour</option>\n                                    </select>\n                                </div>\n                                <div class=\"invalid-feedback\" i18n>\n                                    can only be a pure integer number\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\" i18n>onchange</label>\n                        <div class=\"col-md-10\">\n                            <select class=\"custom-select\" name=\"onchange\" [(ngModel)]=\"event.onChange\" (ngModelChange)=\"onValueChange()\" style=\"width: 250px;\">\n                                <option value=\"true\">true</option>\n                                <option value=\"false\">false</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\" i18n>resource</label>\n                        <div class=\"col-md-10\">\n                            <select class=\"custom-select\" name=\"resource\" [(ngModel)]=\"event.resource\" (ngModelChange)=\"onValueChange()\" [class.is-invalid]=\"event.resource === ''\" [class.is-valid]=\"event.resource !==''\"  style=\"width: 250px;\" required>\n                                <option *ngFor=\"let r of autoEventResourceNameSet\" value=\"{{r}}\">{{r}}</option>\n                            </select>\n                            <div class=\"invalid-feedback\" i18n>\n                                resource can't be empty\n                            </div>\n                        </div>\n                    </div>\n                    <button class=\"btn btn-danger btn-sm\" (click)=\"removeAutoEvent(event)\">\n                        <i class=\"fa fa-trash mr-1\"></i>\n                        <span i18n>Remove</span>\n                    </button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, Input, OnInit, OnChanges ,Output, EventEmitter} from '@angular/core';\n\nimport { AutoEvent } from '../../../contracts/v3/auto-event';\nimport { DeviceProfile } from '../../../contracts/v3/device-profile';\n\ninterface AutoEventDecorator {\n  interval: string,\n  onChange: boolean,\n  resource: string,\n  unit: string\n}\n\n@Component({\n  selector: 'app-device-auto-event',\n  templateUrl: './device-auto-event.component.html',\n  styleUrls: ['./device-auto-event.component.css']\n})\nexport class DeviceAutoEventComponent implements OnInit, OnChanges {\n\n  @Input() autoEvents: AutoEvent[] = []\n  @Output() autoEventsChange = new EventEmitter<AutoEvent[]>()\n  @Input() deviceProfile?: DeviceProfile\n\n  @Input() isValid: boolean = false\n  @Output() isValidChange = new EventEmitter<boolean>()\n\n  autoEventDecoratorBearer: AutoEventDecorator[] = [];\n  autoEventResourceNameSet: string[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.resetAutoEventDecoratorBearer()\n    this.setAutoEventDecorator(this.autoEvents)\n    this.setupAutoEventResourceNameSet(this.deviceProfile)\n    this.resumeOriginalAutoEvents()\n  }\n\n  onValueChange() {\n    this.resumeOriginalAutoEvents()\n  }\n\n  resetAutoEventDecoratorBearer() {\n    this.autoEventDecoratorBearer.splice(0,this.autoEventDecoratorBearer.length);\n  }\n\n  addAutoEvent() {\n    this.autoEventDecoratorBearer.push({\n      interval: '',\n      onChange: false,\n      resource: '',\n      unit: 'ms'\n    });\n    this.resumeOriginalAutoEvents()\n  }\n\n  removeAutoEvent(event: AutoEventDecorator) {\n    this.autoEventDecoratorBearer.splice(this.autoEventDecoratorBearer.indexOf(event), 1);\n    this.resumeOriginalAutoEvents()\n  }\n\n  setupAutoEventResourceNameSet(profile?: DeviceProfile) {\n    if  (!profile) {\n      return\n    }\n    this.autoEventResourceNameSet.splice(0,this.autoEventResourceNameSet.length)\n    profile.deviceResources.forEach((r,i) => {\n      this.autoEventResourceNameSet.push(r.name);\n    })\n    profile.deviceCommands.forEach((cmd,i) => {\n      this.autoEventResourceNameSet.push(cmd.name);\n    })\n  }\n\n  eventIntervalNumType(interval: any): boolean {\n    if (!isNaN(interval) && (parseFloat(interval) === parseInt(interval))) {\n      return true\n    }\n    return false\n  }\n\n  setAutoEventDecorator(events?: AutoEvent[]) {\n    if (!events) {\n      return\n    }\n\n    events!.forEach(e => {\n      let index: number = 0;\n\n      if (e.interval.indexOf('ms') !== -1) {\n        index = e.interval.indexOf('ms');\n      } else if (e.interval.indexOf('s') !== -1) {\n        index = e.interval.indexOf('s');\n      } else if (e.interval.indexOf('m') !== -1) {\n        index = e.interval.indexOf('m');\n      } else if (e.interval.indexOf('h') !== -1) {\n        index = e.interval.indexOf('h');\n      }\n      this.autoEventDecoratorBearer.push({\n        interval: e.interval.slice(0, index),\n        onChange: e.onChange ? e.onChange : false,\n        resource: e.sourceName,\n        unit: e.interval.substring(index)\n      });\n    });\n  }\n\n  resumeOriginalAutoEvents() {\n    if (!this.autoEvents) {\n      this.autoEvents = []\n    } else {\n      this.autoEvents.splice(0,this.autoEvents.length);\n    }\n\n    this.autoEventDecoratorBearer.forEach(e => {\n      this.autoEvents.push({\n        interval: `${e.interval}${e.unit}`,\n        onChange: e.onChange ? true : false,\n        sourceName: e.resource\n      })\n    });\n    this.validate()\n    this.autoEventsChange.emit(this.autoEvents)\n  }\n\n  validate() {\n    this.isValid = true\n    if (this.autoEventDecoratorBearer.length !== 0) {\n      this.autoEventDecoratorBearer.forEach(e => {\n        if (!this.eventIntervalNumType(e.interval) || e.resource === '') {\n          this.isValid = false\n          return\n        }\n      })\n    }\n    this.isValidChange.emit(this.isValid)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <span class=\"font-weight-bold\">\n            <span class=\"fa fa-lightbulb-o fa-lg mr-2 text-danger\"></span>\n            <span class=\"text-secondary\" i18n>Add Device Wizard</span>\n        </span>\n    </div>\n    <div class=\"card-header py-2\">\n        <nav aria-label=\"breadcrumb\" class=\"mb-0 p-0\">\n            <ol class=\"breadcrumb p-1 mb-0 bg-light\">\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 0? selectedClass:noSelectedClass\">\n                        <span i18n>SelectDeviceService</span>\n                        <i *ngIf=\"currentStep >= 1\" class=\"fa fa-check ml-1\"></i>\n                    </span>\n                </li>\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 1? selectedClass:noSelectedClass\">\n                        <span i18n>SelectDeviceProfile</span>\n                        <i *ngIf=\"currentStep >= 2\" class=\"fa fa-check ml-1\"></i>\n                    </span>\n                </li>\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 2? selectedClass:noSelectedClass\">\n                        <span i18n>DevicePrimary</span>\n                        <i *ngIf=\"currentStep >= 3\" class=\"fa fa-check ml-1\"></i>\n                    </span>\n                </li>\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 3? selectedClass:noSelectedClass\">\n                        <span i18n>CreateAutoEvent</span>\n                        <i *ngIf=\"currentStep >= 4\" class=\"fa fa-check ml-1\"></i>\n                    </span>\n                </li>\n                <li class=\"breadcrumb-item active\">\n                    <span [ngClass]=\"currentStep >= 4? selectedClass:noSelectedClass\">\n                        <span i18n>CreateDeviceProtocol</span>\n                        <i *ngIf=\"currentStep >= 5\" class=\"fa fa-check ml-1\"></i>\n                    </span>\n                </li>\n            </ol>\n        </nav>\n    </div>\n    <div class=\"card-header py-1\">\n        <button *ngIf=\"currentStep\" class=\"btn btn-info btn-sm\"  (click)=\"previous()\">\n            <i class=\"fa fa-long-arrow-left mr-1\"></i>\n            <span i18n>Previous</span>\n        </button>\n        <button *ngIf=\"4 > currentStep; else stepDone\" class=\"btn btn-primary btn-sm float-right\" (click)=\"next()\" [disabled]=\"stepStateLock()\">\n            <span i18n>Next</span>\n            <i class=\"fa fa-long-arrow-right ml-1\"></i>\n        </button>\n        <ng-template #stepDone>\n            <button class=\"btn btn-success btn-sm ml-4 float-right\" [disabled]=\"stepStateLock()\" (click)=\"submit()\">\n                <i class=\"fa fa-save mr-1\"></i> \n                <span i18n>Submit</span> \n            </button>\n        </ng-template>\n    </div>\n    <div class=\"card-body p-0\">\n        <div [ngSwitch]=\"currentStep\">\n            <ng-template [ngSwitchCase]=\"0\" #SelectDeviceService>\n                <div class=\"p-2\">\n                    <app-device-service-list\n                    (singleDeviceSvcSelectedEvent)=\"onSingleDeviceSvcSelected($event)\"\n                    [deviceSvcSelected]=\"selectedSvc\"\n                    ></app-device-service-list>\n                </div>\n            </ng-template>\n\n            <ng-template [ngSwitchCase]=\"1\" #SelectDeviceProfile>\n                <div class=\"p-2\">\n                    <app-device-profile-list\n                    (singleProfileSelectedEvent)=\"onSingleProfileSelected($event)\"\n                    [singleProfileSelected]=\"selectedProfile\"\n                    [enableSelectAll]=\"false\"\n                    [toolbars]=\"false\"\n                    [associatedDeviceColumn]=\"false\"></app-device-profile-list>\n                </div>\n            </ng-template>\n\n            <ng-template [ngSwitchCase]=\"2\" #DevicePrimary>\n                <form class=\"px-5 py-4\">\n                    <div class=\"form-group row has-validation\">\n                      <label for=\"deviceName\" class=\"col-md-2 col-form-label\" required i18n>Name</label>\n                      <div class=\"col-md-10\">\n                        <input type=\"text\" class=\"form-control\" id=\"validationDeviceNameFeedback\" [class.is-invalid]=\"!newDevice.name\" [class.is-valid]=\"newDevice.name\" name=\"deviceName\" [(ngModel)]=\"newDevice.name\">\n                        <div id=\"validationDeviceNameFeedback\" class=\"invalid-feedback\">\n                            <small i18n>the device name can't be empty!</small>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group row\">\n                      <label for=\"deviceDesc\" class=\"col-md-2 col-form-label\" i18n>Description</label>\n                      <div class=\"col-md-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"deviceDescription\" [(ngModel)]=\"newDevice.description\">\n                      </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"deviceLabels\" class=\"col-md-2 col-form-label\" i18n>Labels</label>\n                        <div class=\"col-md-10\">\n                          <input type=\"text\" class=\"form-control\" name=\"deviceLabels\" [(ngModel)]=\"deviceLabels\" placeholder=\"Multiple Labels are separated by commas: label1,label2,label3\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"adminState\" class=\"col-md-2 col-form-label\" i18n>AdminState</label>\n                        <div class=\"col-md-10\">\n                            <select class=\"custom-select\"  name=\"deviceAdminState\" [(ngModel)]=\"newDevice.adminState\">\n                                <option value=\"UNLOCKED\">UNLOCKED</option>\n                                <option value=\"LOCKED\">LOCKED</option>\n                            </select>\n                        </div>\n                    </div>\n                </form>\n            </ng-template>\n\n            <ng-template  [ngSwitchCase]=\"3\" #CreateAutoEvent>\n                <div class=\"card border-0\">\n                    <div class=\"card-header\">\n                        <span class=\"fa fa-info-circle text-warning font-weight-bold\" i18n> this step is optional, you can skip it then set it later in edit mode.</span>\n                    </div>\n                    <div class=\"card-body\">\n                        <app-device-auto-event \n                        [deviceProfile]=\"selectedProfile\"\n                        [(autoEvents)]=\"newDevice.autoEvents\"\n                        [(isValid)]=\"isAutoEventsValid\"\n                        ></app-device-auto-event>\n                    </div>\n                </div>\n            </ng-template>\n            \n            <div [style.display]=\"currentStep === 4 ? '' : 'none'\" #CreateDeviceProtocol>\n                <div class=\"card border-0\">\n                    <div class=\"card-body\"> \n                        <app-device-protocol\n                            [mode]=\"'add'\" \n                            [(isValid)]=\"isProtocolValid\">\n                        </app-device-protocol>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { DeviceService } from '../../../contracts/v3/device-service';\nimport { Device } from '../../../contracts/v3/device';\nimport { DeviceProfile } from '../../../contracts/v3/device-profile';\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\nimport { DeviceProtocolComponent } from  '../device-protocol/device-protocol.component';\n\n@Component({\n  selector: 'app-add-device',\n  templateUrl: './add-device.component.html',\n  styleUrls: ['./add-device.component.css']\n})\nexport class AddDeviceComponent implements OnInit {\n\n  newDevice: Device;\n  deviceLabels: string = '';\n\n  @ViewChild(DeviceProtocolComponent)\n  private deviceProtocols!: DeviceProtocolComponent\n\n  currentStep = 0;\n  selectedClass = \"text-white rounded px-2 bg-success  font-weight-bold\";\n  noSelectedClass = \"text-white rounded px-2 bg-secondary  font-weight-bold\";\n  selectedSvc?: DeviceService;\n  selectedProfile?: DeviceProfile;\n\n  isProtocolValid: boolean = false;\n  isAutoEventsValid: boolean = false;\n\n  constructor(private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private errorSvc: ErrorService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.newDevice = {\n      adminState: 'UNLOCKED',\n      operatingState: 'UP'\n    } as Device;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSingleProfileSelected(profile: DeviceProfile) {\n    this.selectedProfile = profile;\n  }\n\n  onSingleDeviceSvcSelected(svc: DeviceService) {\n    this.selectedSvc = svc;\n  }\n\n  stepStateLock(): boolean {\n    switch (this.currentStep) {\n      case 0:\n        return this.selectedSvc === undefined\n      case 1:\n        return this.selectedProfile === undefined\n      case 2:\n        return !this.newDevice.name\n      case 3:\n        return !this.isAutoEventsValid\n      case 4:\n        return !this.isProtocolValid\n      default:\n        return false\n    }\n  }\n\n  next() {\n    this.currentStep += 1;\n  }\n\n  previous() {\n    this.currentStep = this.currentStep - 1;\n  }\n\n  submit() {\n    this.newDevice.labels = this.deviceLabels?.split(','),\n    this.newDevice.serviceName = this.selectedSvc?.name as string;\n    this.newDevice.profileName = this.selectedProfile?.name as string;\n    this.newDevice.protocols = this.deviceProtocols.getDeviceProtocols()\n\n    this.metaSvc.addDevice(this.newDevice).subscribe((resp:any) => {\n      if(this.errorSvc.handleErrorForAPI(resp)) {\n        return\n      }\n      this.msgSvc.success('Add device',`name: ${this.newDevice.name}`);\n      this.router.navigate(['../device-list'], { relativeTo: this.route })\n    })\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div *ngIf=\"device\" class=\"card\">\n    <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-edit text-danger fa-lg\"></i> \n        <span class=\"mx-2\" i18n>Edit Device</span>\n        <span class=\"text-primary\">{{device.name}}</span> \n        <button type=\"button\" class=\"btn btn-success btn-sm float-right\" (click)=\"save()\"  [disabled]=\"validateBeforeSave()\">\n            <span>\n                <i class=\"fa fa-save mr-1\"></i>\n                <span i18n>Save</span> \n            </span>\n        </button>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"card mb-3\">\n            <div class=\"card-header font-weight-bold\">\n                <i class=\"fa fa-tags fa-lg text-danger mr-1\"></i><span i18n>Device Primary</span>\n            </div>\n            <div class=\"card-body\">\n                <form>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\" i18n>DeviceName</label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" name=\"name\" [(ngModel)]=\"device.name\" [class.is-invalid]=\"device.name === ''\" class=\"form-control\" required>\n                            <div class=\"invalid-feedback\" i18n>\n                               device name can't not be empty!\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\" i18n>Description</label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" name=\"description\" [(ngModel)]=\"device.description\" class=\"form-control\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\" i18n>Labels</label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" name=\"labels\" [(ngModel)]=\"deviceLabels\"  class=\"form-control\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"adminState\" class=\"col-md-2 col-form-label\" i18n>AdminState</label>\n                        <div class=\"col-md-10\">\n                            <select class=\"custom-select\"  name=\"adminState\" [(ngModel)]=\"device.adminState\">\n                                <option value=\"UNLOCKED\">UNLOCKED</option>\n                                <option value=\"LOCKED\">LOCKED</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"operatingState\" class=\"col-md-2 col-form-label\" i18n>OperatingState</label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" name=\"operatingState\" disabled [value]=\"device.operatingState\" class=\"form-control\">\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n        <div class=\"mb-3\">\n            <app-device-service-list \n            (singleDeviceSvcSelectedEvent)=\"onSingleDeviceSvcSelected($event)\" \n            [deviceSvcSelected]=\"selectedSvc\"></app-device-service-list>\n        </div>\n\n        <div class=\"mb-3\">\n            <app-device-profile-list  \n            (singleProfileSelectedEvent)=\"onSingleProfileSelected($event)\" \n            [enableSelectAll]=\"false\" [toolbars]=\"false\" \n            [singleProfileSelected]=\"selectedProfile\"\n            [associatedDeviceColumn]=\"false\"></app-device-profile-list>\n        </div>\n\n        <div class=\"mb-3\">\n            <app-device-protocol \n            [mode]=\"'edit'\"\n            [deviceProtocols]=\"device.protocols\"\n            [(isValid)]=\"isProtocolValid\"></app-device-protocol>\n        </div>\n\n       <div class=\"mb-3\">\n            <app-device-auto-event \n            [deviceProfile]=\"selectedProfile\"\n            [(autoEvents)]=\"device.autoEvents\"\n            [(isValid)]=\"isAutoEventsValid\"\n            ></app-device-auto-event>\n       </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\nimport { Device } from '../../../contracts/v3/device';\nimport { DeviceResponse } from '../../../contracts/v3/responses/device-response';\nimport { DeviceService } from '../../../contracts/v3/device-service';\nimport { DeviceServiceResponse } from '../../../contracts/v3/responses/device-service-response';\nimport { DeviceProfile } from '../../../contracts/v3/device-profile';\nimport { DeviceProfileResponse } from '../../../contracts/v3/responses/device-profile-response';\nimport { DeviceProtocolComponent } from '../device-protocol/device-protocol.component';\n\n@Component({\n  selector: 'app-edit-device',\n  templateUrl: './edit-device.component.html',\n  styleUrls: ['./edit-device.component.css']\n})\nexport class EditDeviceComponent implements OnInit {\n\n  device?: Device;\n  deviceLabels?: string;\n  selectedSvc?: DeviceService;\n  selectedProfile?: DeviceProfile;\n\n  @ViewChild(DeviceProtocolComponent)\n  private deviceProtocols!: DeviceProtocolComponent\n\n  isProtocolValid: boolean = true;\n  isAutoEventsValid: boolean = true;\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private errorSvc: ErrorService) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      let deviceName = params['deviceName'];\n      if (!params['deviceName']) {\n        return\n      }\n      this.metaSvc.findDeviceByName(deviceName).subscribe((data: DeviceResponse) => {\n        this.device = data.device;\n\n        this.deviceLabels = this.device.labels?.join(',');\n        this.setDefaultDeviceSvcSelected(this.device.serviceName);\n        this.setDefaultDeviceProfileSelected(this.device.profileName);\n      });\n    });\n  }\n\n  onSingleProfileSelected(profile: DeviceProfile) {\n    this.selectedProfile = profile;\n  }\n\n  onSingleDeviceSvcSelected(svc: DeviceService) {\n    this.selectedSvc = svc;\n  }\n\n  setDefaultDeviceSvcSelected(svcName: string) {\n    this.metaSvc\n    .findDevcieServiceByName(svcName)\n    .subscribe((resp: DeviceServiceResponse) => {\n      this.selectedSvc = resp.service;\n    });\n  }\n\n  setDefaultDeviceProfileSelected(profileName: string) {\n    this.metaSvc\n    .findProfileByName(profileName)\n    .subscribe((resp: DeviceProfileResponse) => {\n      this.selectedProfile = resp.profile;\n    });\n  }\n\n  validateBeforeSave(): boolean {\n    if (this.device!.name === '') {\n      return true\n    }\n    return !this.isAutoEventsValid || !this.isProtocolValid\n  }\n\n  save() {\n    this.device!.labels  = this.deviceLabels?.split(\",\") as string[];\n    this.device!.serviceName = this.selectedSvc?.name as string;\n    this.device!.profileName = this.selectedProfile?.name as string;\n    this.device!.protocols = this.deviceProtocols.getDeviceProtocols()\n\n    this.metaSvc.updateDevice(this.device as Device).subscribe((resp: any) => {\n      if(this.errorSvc.handleErrorForAPI(resp)) {\n        return\n      }\n      this.msgSvc.success('update device', `name: ${this.device?.name}`);\n      this.router.navigate(['../device-list'], { relativeTo: this.route });\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-device-profile-center',\n  templateUrl: './device-profile-center.component.html',\n  styleUrls: ['./device-profile-center.component.css']\n})\nexport class DeviceProfileCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router'\n\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\n\n@Component({\n  selector: 'app-add-profile',\n  templateUrl: './add-profile.component.html',\n  styleUrls: ['./add-profile.component.css']\n})\nexport class AddProfileComponent implements OnInit {\n\n  profileYamlSource?: any;\n  codeMirrorEditor: any;\n  yamlFile?: File;\n\n  constructor(private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private errSvc: ErrorService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.renderYamlSource()\n  }\n\n  renderYamlSource() {\n    let myTextarea = document.getElementById('editor');\n    this.codeMirrorEditor = CodeMirror.fromTextArea(myTextarea, {\n      mode: \"yaml\",\n      theme: \"gruvbox-dark\",\n      foldGutter: true,\n      smartIndent: true,\n      showCursorWhenSelecting: true,\n      lineNumbers: true,\n      lineWrapping: true,\n      gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\", \"CodeMirror-lint-markers\"],\n      autofocus: true,\n      matchBrackets: true,\n      autoCloseBrackets: true,\n      styleActiveLine: true,\n      // scrollbarStyle: 'simple',\n\n      // allowDropFileTypes: ['text/plain'],\n      cursorHeight: 0.85,\n      autocorrect: true\n\n    });\n    this.codeMirrorEditor.setSize('auto', '600px')\n    this.codeMirrorEditor.on('drop', (instance: any, event: Event) => {\n      // console.log((event as DragEvent).dataTransfer?.files)\n      this.yamlFile = (event as DragEvent).dataTransfer?.files[0];\n    });\n\n    this.codeMirrorEditor.on('paste', (instance: any, event: Event) => {\n      // console.log(event)\n      // console.log((event as DragEvent).dataTransfer?.files)\n      // this.yamlFile = (event as DragEvent).dataTransfer?.files[0];\n    });\n\n  }\n\n  submit() {\n\n    this.profileYamlSource = this.codeMirrorEditor.getValue()\n\n    // let blob = new Blob([this.profileYamlSource]);\n    // console.log(this.profileYamlSource)\n    // let formData = new FormData();\n    // // formData.set('file', this.yamlFile as File, (this.yamlFile as File).name)\n    // formData.set('file', blob, 'ssssss');\n    // this.metaSvc.uploadProfileYamlFile(formData).subscribe(() => {\n    //   this.msgSvc.success('submit');\n    //   this.router.navigate(['../device-profile-list'], { relativeTo: this.route });\n    // });\n\n    this.metaSvc.addProfileYamlByNameViaUIBackend(this.profileYamlSource).subscribe((resp: any) => {\n      if (this.errSvc.handleErrorForAPI(resp) ) {\n        return\n      }\n      this.msgSvc.success('Add profile');\n      this.router.navigate(['../device-profile-list'], { relativeTo: this.route })\n    });\n\n    // this.metaSvc.uploadProfileYamlContent(this.profileYamlSource).subscribe((data: string) => {\n    //   this.msgSvc.success('Add profile');\n    //   this.router.navigate(['../device-profile-list'], { relativeTo: this.route })\n    // });\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <span>\n            <span class=\"text-danger font-weight-bold fa fa-code mr-2\"></span>\n            <span class=\"mr-3 font-weight-bold\" i18n>Add Profile</span> \n            <span class=\"fa fa-info-circle text-success font-weight-bold\" i18n>&nbsp;drag-and-drop is enabled</span>\n        </span>\n        <span class=\"float-right\">\n            <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"submit()\">\n                <i class=\"fa fa-save mr-1\"></i>\n                <span i18n>Submit</span> \n            </button>\n        </span>\n    </div>\n   \n    <div class=\"card-body p-0\">\n        <textarea id=\"editor\" name=\"editor\"></textarea>\n    </div>\n</div>\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit,OnDestroy } from '@angular/core';\nimport { ActivatedRoute,Router } from '@angular/router';\n\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit, OnDestroy {\n\n  profileYamlSource?: any;\n  codeMirrorEditor: any;\n  profileName?: string;\n\n  constructor(private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private errSvc: ErrorService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.renderYamlSource();\n    this.route.queryParams.subscribe(params => {\n      if (params['profileName']) {\n        this.profileName = params['profileName'];\n        this.metaSvc.findProfileYamlByNameViaUIBackend(params['profileName']).subscribe((data: any) => {\n          // this.profileYamlSource = data;\n          this.codeMirrorEditor.setValue(data);\n          this.codeMirrorEditor.refresh();\n        });\n      }\n    });\n  }\n\n  update() {\n    this.codeMirrorEditor.refresh();\n    this.metaSvc.updateProfileYamlContentViaUIBackend(this.codeMirrorEditor.getValue()).subscribe(data => {\n      if (this.errSvc.handleErrorForAPI(data)){\n        return\n      }\n      this.msgSvc.success('Update profile', `name: ${this.profileName}`);\n      this.router.navigate(['../device-profile-list'], { relativeTo: this.route });\n    })\n  }\n\n  renderYamlSource() {\n    let myTextarea = document.getElementById('editor-edit');\n    this.codeMirrorEditor = CodeMirror.fromTextArea(myTextarea, {\n      mode: \"yaml\",\n      theme: \"gruvbox-dark\",\n      foldGutter: true,\n      smartIndent: true,\n      showCursorWhenSelecting: true,\n      lineNumbers: true,\n      lineWrapping: true,\n      gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\", \"CodeMirror-lint-markers\"],\n      autofocus: true,\n      matchBrackets: true,\n      autoCloseBrackets: true,\n      styleActiveLine: true,\n      // scrollbarStyle: 'simple',\n\n      // allowDropFileTypes: ['text/plain'],\n      cursorHeight: 0.85,\n      autocorrect: true\n    });\n    this.codeMirrorEditor.setSize('auto', '600px')\n  }\n\n  ngOnDestroy():void {\n    this.codeMirrorEditor = null;\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <span>\n            <span class=\"text-danger fa fa-edit mr-2\"></span>{{profileName}}\n        </span>\n        <span class=\"float-right\">\n            <button class=\"btn btn-primary btn-sm\" (click)=\"update()\">\n                <span><i class=\"fa fa-save mr-1\"></i><span i18n>Save</span></span> \n            </button>\n        </span>\n    </div>\n   \n    <div class=\"card-body p-0\">\n        <textarea id=\"editor-edit\" name=\"editor\"></textarea>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-provision-watcher-center',\n  templateUrl: './provision-watcher-center.component.html',\n  styleUrls: ['./provision-watcher-center.component.css']\n})\nexport class ProvisionWatcherCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","<div class=\"card\">\n    <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-list text-danger mr-2\"></i> \n        <span i18n>Device Profile List</span> \n    </div>\n    <div class=\"card-body p-0\">\n        <div  class=\"bg-light px-2 py-2\">\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n                <button class=\"btn btn-primary\" data-testid=\"device-list-refresh-btn\" (click)=\"refresh()\">\n                    <span>\n                        <i class=\"fa fa-refresh mr-1\"></i>\n                        <span i18n>Refresh</span>\n                    </span> \n                </button>\n                <button type=\"button\" class=\"btn btn-info\"  routerLink=\"../add-provision-watcher\">\n                    <span>\n                        <i class=\"fa fa-plus mr-1\"></i>\n                        <span i18n>Add</span>\n                    </span>\n                </button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"edit()\" [disabled]=\"selectedProvisionWatcher.length !== 1\">\n                    <span>\n                        <i class=\"fa fa-edit mr-1\"></i>\n                        <span i18n>Edit</span> \n                    </span>\n                </button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteConfirm()\" [disabled]=\"selectedProvisionWatcher.length === 0\">\n                    <span>\n                        <i class=\"fa fa-trash mr-1\"></i>\n                        <span i18n>Delete</span>\n                    </span>\n                </button>\n              </div>\n              <!-- <button class=\"btn btn-secondary btn-sm text-light ml-3\">upload yaml file</button> -->\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-hover text-truncate\">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\"><input type=\"checkbox\" role=\"button\" [checked]=\"isCheckedAll()\" (click)=\"selectAll($event)\"></th>\n                      <th scope=\"col\">ID</th>\n                      <th scope=\"col\" i18n>Name</th>\n                      <th scope=\"col\" i18n>Labels</th>\n                      <th scope=\"col\" i18n>AdminState</th>\n                      <th scope=\"col\" i18n>DiscoveredDeviceAdminState</th>\n                      <th scope=\"col\" i18n>DiscoveredDeviceProfileName</th>\n                      <th scope=\"col\" i18n>ServiceName</th>\n                      <th scope=\"col\" i18n>IdentifiersAddress</th>\n                      <th scope=\"col\" i18n>IdentifiersPort</th>\n                      <th scope=\"col\" i18n>BlockingIdentifiers</th>\n                      <!-- <th scope=\"col\">Created</th>\n                      <th scope=\"col\">Modified</th> -->\n                    </tr>\n                </thead>\n                    <tbody>\n                        <tr *ngFor=\"let provisionWatcher of provisionWatcherList\" [class.table-active]=\"isChecked(provisionWatcher.id) || specialFeatureAssociatedProvisionWatcherName === provisionWatcher.name\">\n                            <td> <input type=\"checkbox\" role=\"button\"  [checked]=\"isChecked(provisionWatcher.id)\" (click)=\"selectOne($event,provisionWatcher)\"></td>\n                            <td class=\"user-select-all\">{{provisionWatcher.id}}</td>\n                            <td class=\"user-select-all\">{{provisionWatcher.name}}</td>\n                            <td>{{provisionWatcher.labels}}</td>\n                            <td>\n                                <span [ngSwitch]=\"provisionWatcher.adminState\">\n                                    <span *ngSwitchCase=\"'UNLOCKED'\" class=\"badge badge-success\">{{provisionWatcher.adminState}}</span> \n                                    <span *ngSwitchDefault class=\"badge badge-danger\">{{provisionWatcher.adminState}}</span> \n                                </span>\n                            </td>\n                            <td>\n                                <span [ngSwitch]=\"provisionWatcher.discoveredDevice.adminState\">\n                                    <span *ngSwitchCase=\"'UNLOCKED'\" class=\"badge badge-success\">{{provisionWatcher.discoveredDevice.adminState}}</span> \n                                    <span *ngSwitchDefault class=\"badge badge-danger\">{{provisionWatcher.discoveredDevice.adminState}}</span> \n                                </span>\n                            </td>\n                            <td>\n                                <a routerLink=\"../../device-profile-center\" [queryParams]=\"{'profileName':provisionWatcher.discoveredDevice.profileName}\">{{provisionWatcher.discoveredDevice.profileName}}</a>\n                            </td>\n                            <td>\n                                <a routerLink=\"../../device-service-list\">{{provisionWatcher.serviceName}}</a> \n                            </td>\n                            <td>{{provisionWatcher.identifiers.address}}</td>\n                            <td>{{provisionWatcher.identifiers.port}}</td>\n                            <td>{{provisionWatcher.blockingIdentifiers|json}}</td>\n                            <!-- <td>{{device.created | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                            <td>{{device.modified | date:'yyyy-MM-dd hh:mm:ss' }}</td> -->\n                        </tr>\n                    </tbody>\n            </table>\n        </div>\n    </div>\n    <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\" i18n>items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"custom-select\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\">\n                        <i class=\"fa fa-angle-double-left mr-1\"></i>\n                        <span i18n>Previous</span>  \n                    </button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > provisionWatcherList.length\">\n                        <span i18n>Next</span>\n                        <i class=\"fa fa-angle-double-right ml-1\"></i>\n                    </button>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>\n<div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning mr-1\"></i>\n                    <span i18n>Warning</span>\n                </h5>  \n            </div>\n            <div class=\"modal-body\" i18n>\n                The data will be permanently erased!!! Are you sure to execute delete operation？\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" i18n>Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\" i18n>Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\nimport { MultiProvisionWatcherResponse } from '../../../contracts/v3/responses/provision-watcher-response';\nimport { ProvisionWatcher } from '../../../contracts/v3/provision-watcher';\nimport { AutoEvent } from '../../../contracts/v3/auto-event';\nimport { DeviceProfile } from '../../../contracts/v3/device-profile';\n\n@Component({\n  selector: 'app-provision-watcher-list',\n  templateUrl: './provision-watcher-list.component.html',\n  styleUrls: ['./provision-watcher-list.component.css']\n})\nexport class ProvisionWatcherListComponent implements OnInit {\n\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n  provisionWatcherList: ProvisionWatcher[] = [];\n  selectedProvisionWatcher: ProvisionWatcher[] = [];\n  specialFeatureAssociatedProvisionWatcherName?: string;\n  specialFeatureName?: string\n\n  constructor(private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n        this.getProvisionWatcherListPagination();\n    });\n  }\n  getProvisionWatcherList() {\n    this.getProvisionWatcherListPagination();\n  }\n\n  getProvisionWatcherListPagination() {\n    this.metaSvc.allProvisionWatchersPagination(this.pageOffset, this.pageLimit).subscribe((data: MultiProvisionWatcherResponse) => {\n      this.provisionWatcherList = data.provisionWatchers;\n    });\n  }\n  edit() {\n    this.router.navigate(['../edit-provision-watcher'], {\n      relativeTo: this.route,\n      queryParams: { 'provisionWatcherName': this.selectedProvisionWatcher[0].name }\n    })\n  }\n  selectAll(event: any) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.provisionWatcherList.forEach(provisionWatcher => {\n        if (this.selectedProvisionWatcher.findIndex(d => d.name === provisionWatcher.name) !== -1) {\n          return\n        }\n        this.selectedProvisionWatcher.push(provisionWatcher);\n      });\n    } else {\n      this.provisionWatcherList.forEach(provisionWatcher => {\n        this.selectedProvisionWatcher.forEach((provisionWatcherSelected, index) => {\n          if (provisionWatcherSelected.name === provisionWatcher.name) {\n            this.selectedProvisionWatcher.splice(index,1);\n          }\n        })\n      });\n    }\n  }\n  selectOne(event: any, provisionWatcher: ProvisionWatcher) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.selectedProvisionWatcher.push(provisionWatcher);\n      return\n    }\n    this.selectedProvisionWatcher.forEach((d,i) => {\n      if (d.name === provisionWatcher.name) {\n        this.selectedProvisionWatcher.splice(i, 1);\n      }\n    })\n  }\n\n  isChecked(id: string): boolean {\n    return this.selectedProvisionWatcher.findIndex(provisionWatcher => provisionWatcher.id === id) >= 0;\n  }\n  isCheckedAll(): boolean {\n    let checkedAll = true;\n    if (this.provisionWatcherList &&  this.provisionWatcherList.length === 0) {\n      checkedAll = false\n    }\n    this.provisionWatcherList.forEach(provisionWatcher => {\n      if (this.selectedProvisionWatcher.findIndex(d => d.name === provisionWatcher.name) === -1) {\n        checkedAll = false\n      }\n    });\n    return checkedAll\n  }\n  deleteConfirm() {\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n  refresh() {\n    this.metaSvc.allProvisionWatchersPagination(0, this.pageLimit).subscribe((data: MultiProvisionWatcherResponse) => {\n      this.provisionWatcherList = data.provisionWatchers;\n      this.msgSvc.success('refresh');\n      this.resetPagination();\n    });\n  }\n  delete() {\n    this.selectedProvisionWatcher.forEach((d,i) => {\n      this.metaSvc.deleteOneProvisionWatcherByName(d.name).subscribe(() => {\n        this.selectedProvisionWatcher.splice(i,1);\n        this.provisionWatcherList.forEach((provisionWatcher: ProvisionWatcher, index) => {\n          if (provisionWatcher.id === d.id) {\n            this.provisionWatcherList.splice(index, 1);\n            this.msgSvc.success('remove provisionWatcher ', ` Name: ${provisionWatcher.name}`);\n            return\n          }\n        });\n      });\n\n    });\n    //close Command or AutoEvent feature viewer window\n    this.specialFeatureName = undefined;\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n  onPageSelected() {\n    this.resetPagination();\n    this.getProvisionWatcherList();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.getProvisionWatcherList();\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.getProvisionWatcherList();\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n    <div class=\"card-header\">\n        <span class=\"font-weight-bold\">\n            <span class=\"fa fa-lightbulb-o fa-lg mr-2 text-danger\"></span>\n            <span class=\"text-secondary\" i18n>Add Provision Watcher Wizard</span>\n        </span>\n    </div>\n    <div class=\"card-header py-2\">\n        <nav aria-label=\"breadcrumb\" class=\"mb-0 p-0\">\n            <ol class=\"breadcrumb p-1 mb-0 bg-light\">\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 0? selectedClass:noSelectedClass\">\n                        <span i18n>SelectDeviceService</span>\n                        <i *ngIf=\"currentStep >= 1\" class=\"fa fa-check ml-1\"></i>\n                    </span>\n                </li>\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 1? selectedClass:noSelectedClass\">\n                        <span i18n>SelectDiscoveredDeviceProfile</span>\n                        <i *ngIf=\"currentStep >= 2\" class=\"fa fa-check ml-1\"></i>\n                    </span>\n                </li>\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 2? selectedClass:noSelectedClass\">\n                        <span i18n>ProvisionWatcherPrimary</span>\n                        <i *ngIf=\"currentStep >= 3\" class=\"fa fa-check ml-1\"></i>\n                    </span>\n                </li>\n            </ol>\n        </nav>\n    </div>\n    <div class=\"card-header py-1\">\n        <button *ngIf=\"currentStep\" class=\"btn btn-info btn-sm\"  (click)=\"previous()\">\n            <i class=\"fa fa-long-arrow-left mr-1\"></i>\n            <span i18n>Previous</span>\n        </button>\n        <button *ngIf=\"2 > currentStep; else stepDone\" class=\"btn btn-primary btn-sm float-right\" (click)=\"next()\" [disabled]=\"stepStateLock()\">\n            <span i18n>Next</span>\n            <i class=\"fa fa-long-arrow-right ml-1\"></i>\n        </button>\n        <ng-template #stepDone>\n            <button class=\"btn btn-success btn-sm ml-4 float-right\" [disabled]=\"stepStateLock()\" (click)=\"submit()\">\n                <i class=\"fa fa-save mr-1\"></i> \n                <span i18n>Submit</span> \n            </button>\n        </ng-template>\n    </div>\n    <div class=\"card-body p-0\">\n        <div [ngSwitch]=\"currentStep\">\n            <ng-template [ngSwitchCase]=\"0\" #SelectDeviceService>\n                <div class=\"p-2\">\n                    <app-device-service-list\n                    (singleDeviceSvcSelectedEvent)=\"onSingleDeviceSvcSelected($event)\"\n                    [deviceSvcSelected]=\"selectedSvc\"\n                    ></app-device-service-list>\n                </div>\n            </ng-template>\n\n            <ng-template [ngSwitchCase]=\"1\" #SelectDeviceProfile>\n                <div class=\"p-2\">\n                    <app-device-profile-list\n                    (singleProfileSelectedEvent)=\"onSingleProfileSelected($event)\"\n                    [singleProfileSelected]=\"selectedProfile\"\n                    [enableSelectAll]=\"false\"\n                    [toolbars]=\"false\"\n                    [associatedDeviceColumn]=\"false\"></app-device-profile-list>\n                </div>\n            </ng-template>\n\n            <ng-template [ngSwitchCase]=\"2\" #DevicePrimary>\n                <form class=\"px-5 py-4\">\n                    <div class=\"form-group row has-validation\">\n                      <label for=\"provisionWatcherName\" class=\"col-md-2 col-form-label\" required i18n>Name</label>\n                      <div class=\"col-md-10\">\n                        <input type=\"text\" class=\"form-control\" id=\"validationProvisionWatcherNameFeedback\" [class.is-invalid]=\"!newProvisionWatcher.name\" [class.is-valid]=\"newProvisionWatcher.name\" name=\"provisionWatcherName\" [(ngModel)]=\"newProvisionWatcher.name\">\n                        <div id=\"validationProvisionWatcherNameFeedback\" class=\"invalid-feedback\">\n                            <small i18n>the provision watcher name can't be empty!</small>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"provisionWatcherLabels\" class=\"col-md-2 col-form-label\" i18n>Labels</label>\n                        <div class=\"col-md-10\">\n                          <input type=\"text\" class=\"form-control\" name=\"provisionWatcherLabels\" [(ngModel)]=\"provisionWatcherLabels\" placeholder=\"Multiple Labels are separated by commas: label1,label2,label3\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"provisionWatcherBlockingIdentifiers\" class=\"col-md-2 col-form-label\" i18n>BlockingIdentifiers</label>\n                        <div class=\"col-md-10\">\n                          <input type=\"text\" class=\"form-control\" name=\"provisionWatcherBlockingIdentifiers\" [(ngModel)]=\"provisionWatcherBlockingIdentifiers\" placeholder=\"Multiple BlockingIdentifiers are separated by commas: port1,port2,port3\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"provisionWatcherIdentifiersAddress\" class=\"col-md-2 col-form-label\" i18n>IdentifiersAddress</label>\n                        <div class=\"col-md-10\">\n                          <input type=\"text\" class=\"form-control\" name=\"provisionWatcherIdentifiersAddress\" [(ngModel)]=\"provisionWatcherIdentifiersAddress\" >\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"provisionWatcherIdentifiersPort\" class=\"col-md-2 col-form-label\" i18n>IdentifiersPort</label>\n                        <div class=\"col-md-10\">\n                          <input type=\"text\" class=\"form-control\" name=\"provisionWatcherIdentifiersPort\" [(ngModel)]=\"provisionWatcherIdentifiersPort\" >\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"provisionWatcherAdminState\" class=\"col-md-2 col-form-label\" i18n>AdminState</label>\n                        <div class=\"col-md-10\">\n                            <select class=\"custom-select\"  name=\"provisionWatcherAdminState\" [(ngModel)]=\"newProvisionWatcher.adminState\">\n                                <option value=\"UNLOCKED\">UNLOCKED</option>\n                                <option value=\"LOCKED\">LOCKED</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"provisionWatcherDiscoveredDeviceAdminState\" class=\"col-md-2 col-form-label\" i18n>DiscoveredDevice\n                            AdminState</label>\n                        <div class=\"col-md-10\">\n                            <select class=\"custom-select\"  name=\"provisionWatcherDiscoveredDeviceAdminState\" [(ngModel)]=\"newProvisionWatcher.discoveredDevice.adminState\">\n                                <option value=\"UNLOCKED\">UNLOCKED</option>\n                                <option value=\"LOCKED\">LOCKED</option>\n                            </select>\n                        </div>\n                    </div>\n                </form>\n            </ng-template>\n\n\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { DeviceService } from '../../../contracts/v3/device-service';\nimport { ProvisionWatcher } from '../../../contracts/v3/provision-watcher';\nimport { DeviceProfile } from '../../../contracts/v3/device-profile';\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\n//import { DeviceProtocolComponent } from  '../device-protocol/device-protocol.component';\n\n@Component({\n  selector: 'app-add-provision-watcher',\n  templateUrl: './add-provision-watcher.component.html',\n  styleUrls: ['./add-provision-watcher.component.css']\n})\nexport class AddProvisionWatcherComponent implements OnInit {\n  newProvisionWatcher: ProvisionWatcher;\n  profileYamlSource?: any;\n  codeMirrorEditor: any;\n  yamlFile?: File;\n  currentStep = 0;\n  selectedClass = \"text-white rounded px-2 bg-success  font-weight-bold\";\n  noSelectedClass = \"text-white rounded px-2 bg-secondary  font-weight-bold\";\n  isProtocolValid: boolean = false;\n  isAutoEventsValid: boolean = false;\n  selectedSvc?: DeviceService;\n  selectedProfile?: DeviceProfile;\n  provisionWatcherLabels: string = '';\n  provisionWatcherBlockingIdentifiers: string = '';\n  provisionWatcherIdentifiersAddress: string = '';\n  provisionWatcherIdentifiersPort: string = '';\n  constructor(private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private errorSvc: ErrorService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { this.newProvisionWatcher = {\n    name: \"\",\n    serviceName: \"\",\n    adminState: \"LOCKED\",\n    labels: [],\n    identifiers: {\n      address: \"\",\n      port: \"\"\n    },\n    blockingIdentifiers: {\n      port: []\n    },\n    discoveredDevice:{\n      adminState: 'LOCKED',\n      profileName: \"\",\n  }\n  } as unknown as ProvisionWatcher;}\n\n  ngOnInit(): void {\n  }\n\n  \n  onSingleDeviceSvcSelected(svc: DeviceService) {\n    this.selectedSvc = svc;\n  }\n\n  onSingleProfileSelected(profile: DeviceProfile) {\n    this.selectedProfile = profile;\n  }\n\n  submit() {\n    this.newProvisionWatcher.labels = this.provisionWatcherLabels?.split(','),\n    this.newProvisionWatcher.serviceName = this.selectedSvc?.name as string;\n    this.newProvisionWatcher.discoveredDevice.profileName = this.selectedProfile?.name as string;\n    this.newProvisionWatcher.identifiers.address = this.provisionWatcherIdentifiersAddress,\n    this.newProvisionWatcher.identifiers.port = this.provisionWatcherIdentifiersPort,\n    this.newProvisionWatcher.blockingIdentifiers.port = this.provisionWatcherBlockingIdentifiers?.split(','),\n\n    this.metaSvc.addProvisionWatcher(this.newProvisionWatcher).subscribe((resp:any) => {\n      if(this.errorSvc.handleErrorForAPI(resp)) {\n        return\n      }\n      this.msgSvc.success('Add ProvisionWatcher',`name: ${this.newProvisionWatcher.name}`);\n      this.router.navigate(['../provision-watcher-list'], { relativeTo: this.route })\n    })\n  }\n\n  next() {\n    this.currentStep += 1;\n  }\n\n  previous() {\n    this.currentStep = this.currentStep - 1;\n  }\n\n  stepStateLock(): boolean {\n    switch (this.currentStep) {\n      case 0:\n        return this.selectedSvc === undefined\n      case 1:\n        return this.selectedProfile === undefined\n      case 2:\n        return !this.newProvisionWatcher.name\n      case 3:\n        return !this.isAutoEventsValid\n      case 4:\n        return !this.isProtocolValid\n      default:\n        return false\n    }\n  }\n}\n","<div *ngIf=\"provisionWatcher\" class=\"card\">\n    <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-edit text-danger fa-lg\"></i> \n        <span class=\"mx-2\" i18n>Edit ProvisionWatcher</span>\n        <span class=\"text-primary\">{{provisionWatcher.name}}</span> \n        <button type=\"button\" class=\"btn btn-success btn-sm float-right\" (click)=\"save()\"  [disabled]=\"validateBeforeSave()\">\n            <span>\n                <i class=\"fa fa-save mr-1\"></i>\n                <span i18n>Save</span> \n            </span>\n        </button>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"card mb-3\">\n            <div class=\"card-header font-weight-bold\">\n                <i class=\"fa fa-tags fa-lg text-danger mr-1\"></i><span i18n>ProvisionWatcher Primary</span>\n            </div>\n            <div class=\"card-body\">\n                <form>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\" i18n>ProvisionWatcherName</label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" name=\"name\" [(ngModel)]=\"provisionWatcher.name\" [class.is-invalid]=\"provisionWatcher.name === ''\" class=\"form-control\" required>\n                            <div class=\"invalid-feedback\" i18n>\n                               device name can't not be empty!\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\" i18n>Labels</label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" name=\"labels\" [(ngModel)]=\"provisionWatcherLabels\"  class=\"form-control\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"adminState\" class=\"col-md-2 col-form-label\" i18n>AdminState</label>\n                        <div class=\"col-md-10\">\n                            <select class=\"custom-select\"  name=\"adminState\" [(ngModel)]=\"provisionWatcher.adminState\">\n                                <option value=\"UNLOCKED\">UNLOCKED</option>\n                                <option value=\"LOCKED\">LOCKED</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"discoveredDeviceadminState\" class=\"col-md-2 col-form-label\" i18n>DiscoveredDeviceAdminState</label>\n                        <div class=\"col-md-10\">\n                            <select class=\"custom-select\"  name=\"discoveredDevice.adminState\" [(ngModel)]=\"provisionWatcher.discoveredDevice.adminState\">\n                                <option value=\"UNLOCKED\">UNLOCKED</option>\n                                <option value=\"LOCKED\">LOCKED</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\" i18n>IdentifiersAddress</label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" name=\"address\" [(ngModel)]=\"provisionWatcher.identifiers.address\"  class=\"form-control\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\" i18n>IdentifiersPort</label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" name=\"port\" [(ngModel)]=\"provisionWatcher.identifiers.port\"  class=\"form-control\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\" i18n>BlockingIdentifiers</label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" name=\"blockingIdentifiers\" [(ngModel)]=\"blockingIdentifiers\"  class=\"form-control\">\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n        </div>\n        <div class=\"mb-3\">\n            <app-device-service-list \n            (singleDeviceSvcSelectedEvent)=\"onSingleDeviceSvcSelected($event)\" \n            [deviceSvcSelected]=\"selectedSvc\"></app-device-service-list>\n        </div>\n\n        <div class=\"mb-3\">\n            <app-device-profile-list  \n            (singleProfileSelectedEvent)=\"onSingleProfileSelected($event)\" \n            [enableSelectAll]=\"false\" [toolbars]=\"false\" \n            [singleProfileSelected]=\"selectedProfile\"\n            [associatedDeviceColumn]=\"false\"></app-device-profile-list>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { DeviceProfile } from '../../../contracts/v3/device-profile';\nimport { DeviceService } from '../../../contracts/v3/device-service';\nimport { ProvisionWatcher } from '../../../contracts/v3/provision-watcher';\nimport { DeviceProfileResponse } from '../../../contracts/v3/responses/device-profile-response';\nimport { DeviceServiceResponse } from '../../../contracts/v3/responses/device-service-response';\nimport { ProvisionWatcherResponse } from '../../../contracts/v3/responses/provision-watcher-response';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\nimport { MetadataService } from '../../../services/metadata.service';\n@Component({\n  selector: 'app-edit-provision-watcher',\n  templateUrl: './edit-provision-watcher.component.html',\n  styleUrls: ['./edit-provision-watcher.component.css']\n})\nexport class EditProvisionWatcherComponent implements OnInit {\n  provisionWatcher?: ProvisionWatcher;\n  provisionWatcherLabels?: string;\n  selectedSvc?: DeviceService;\n  selectedProfile?: DeviceProfile;\n  blockingIdentifiers?: string;\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private errorSvc: ErrorService) { }\n\n    ngOnInit(): void {\n      this.route.queryParams.subscribe((params) => {\n        let provisionWatcherName = params['provisionWatcherName'];\n        if (!params['provisionWatcherName']) {\n          return\n        }\n        this.metaSvc.findProvisionWatcherByName(provisionWatcherName).subscribe((data: ProvisionWatcherResponse) => {\n          this.provisionWatcher = data.provisionWatcher;\n          this.provisionWatcherLabels = this.provisionWatcher.labels?.join(',');\n          this.blockingIdentifiers = JSON.stringify(data.provisionWatcher.blockingIdentifiers);\n          this.setDefaultDeviceSvcSelected(this.provisionWatcher.serviceName);\n          this.setDefaultDeviceProfileSelected(this.provisionWatcher.discoveredDevice.profileName);\n        });\n      });\n    }\n    setDefaultDeviceSvcSelected(svcName: string) {\n      this.metaSvc\n      .findDevcieServiceByName(svcName)\n      .subscribe((resp: DeviceServiceResponse) => {\n        this.selectedSvc = resp.service;\n      });\n    }\n    onSingleProfileSelected(profile: DeviceProfile) {\n      this.selectedProfile = profile;\n    }\n\n    onSingleDeviceSvcSelected(svc: DeviceService) {\n      this.selectedSvc = svc;\n    }\n    setDefaultDeviceProfileSelected(profileName: string) {\n      this.metaSvc\n      .findProfileByName(profileName)\n      .subscribe((resp: DeviceProfileResponse) => {\n        this.selectedProfile = resp.profile;\n      });\n    }\n    validateBeforeSave(): boolean {\n      if (this.provisionWatcher!.name === '') {\n        return true\n      }\n      return false;\n    }\n\n    save() {\n      this.provisionWatcher!.labels  = this.provisionWatcherLabels?.split(\",\") as string[];\n      this.provisionWatcher!.serviceName = this.selectedSvc?.name as string;\n      this.provisionWatcher!.discoveredDevice.profileName = this.selectedProfile?.name as string;\n\n      this.metaSvc.updateProvisionWatcher(this.provisionWatcher as ProvisionWatcher).subscribe((resp: any) => {\n        if(this.errorSvc.handleErrorForAPI(resp)) {\n          return\n        }\n        this.msgSvc.success('update ProvisionWatcher', `name: ${this.provisionWatcher?.name}`);\n        this.router.navigate(['../provision-watcher-list'], { relativeTo: this.route });\n      });\n    }\n}","/*******************************************************************************\n * Copyright © 2022-2023 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { MetadataService } from '../../services/metadata.service';\nimport { mergeMap, take ,catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetadataAliveGuard  {\n\n  constructor(private router: Router, private metadataSvc: MetadataService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.checkAvailable(route,\n      state);\n  }\n\n  canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.canActivate(route,state)\n  }\n\n  checkAvailable(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.metadataSvc.ping().pipe(\n      take(1),\n      catchError((error)=>{\n        return this.router.navigate(['/svc-unavailable'],{ \n          queryParams: {'svcName':'metadata','routerPath':`/${state.url.split('/')[1]}`}\n        })\n      }),\n      mergeMap(() => {\n        return of(true)\n      })\n    )\n  }\n  \n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MetadataComponent } from './metadata.component';\nimport { DeviceServiceMediaListComponent } from './device-service/device-service-media-list/device-service-media-list.component';\n\nimport { DeviceCenterComponent } from './device/device-center/device-center.component';\nimport { DeviceListComponent } from './device/device-list/device-list.component';\nimport { AddDeviceComponent } from './device/add-device/add-device.component';\nimport { EditDeviceComponent } from './device/edit-device/edit-device.component';\n\nimport { DeviceProfileCenterComponent } from './profile/device-profile-center/device-profile-center.component';\nimport { DeviceProfileListComponent } from './profile/device-profile-list/device-profile-list.component';\nimport { AddProfileComponent } from './profile/add-profile/add-profile.component';\nimport { EditProfileComponent } from './profile/edit-profile/edit-profile.component';\n\nimport { ProvisionWatcherCenterComponent } from './provision-watcher/provision-watcher-center/provision-watcher-center.component';\nimport { ProvisionWatcherListComponent } from './provision-watcher/provision-watcher-list/provision-watcher-list.component';\nimport { AddProvisionWatcherComponent } from './provision-watcher/add-provision-watcher/add-provision-watcher.component';\nimport { EditProvisionWatcherComponent } from './provision-watcher/edit-provision-watcher/edit-provision-watcher.component';\nimport { AuthGuard } from '../guards/auth/guard/auth.guard';\nimport { MetadataAliveGuard } from '../guards/health/metadata-alive.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MetadataComponent,\n    canActivate: [AuthGuard, MetadataAliveGuard],\n    canActivateChild: [MetadataAliveGuard],\n    children: [\n      {\n        path: '',\n        redirectTo: 'device-service-list',\n        pathMatch: 'full',\n      },\n      {\n        path: 'device-service-list',\n        component: DeviceServiceMediaListComponent,\n      },\n      {\n        path: 'device-center',\n        component: DeviceCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'device-list',\n            pathMatch: 'full',\n          },\n          {\n            path: 'device-list',\n            component: DeviceListComponent,\n          },\n          {\n            path: 'add-device',\n            component: AddDeviceComponent,\n          },\n          {\n            path: 'edit-device',\n            component: EditDeviceComponent,\n          }\n        ]\n      },\n      {\n        path: 'device-profile-center',\n        component: DeviceProfileCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'device-profile-list',\n            pathMatch: 'full',\n          },\n          {\n            path: 'device-profile-list',\n            component: DeviceProfileListComponent\n          },\n          {\n            path: 'edit-profile',\n            component: EditProfileComponent\n          },\n          {\n            path: 'add-profile',\n            component: AddProfileComponent\n          }\n        ]\n      },\n      {\n        path: 'provision-watcher-center',\n        component: ProvisionWatcherCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'provision-watcher-list',\n            pathMatch: 'full',\n          },\n          {\n            path: 'provision-watcher-list',\n            component: ProvisionWatcherListComponent\n          },\n          {\n            path: 'edit-provision-watcher',\n            component: EditProvisionWatcherComponent\n          },\n          {\n            path: 'add-provision-watcher',\n            component: AddProvisionWatcherComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MetadataRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MetadataRoutingModule } from './metadata-routing.module';\nimport { MetadataComponent } from './metadata.component';\nimport { DeviceServiceMediaListComponent } from './device-service/device-service-media-list/device-service-media-list.component';\nimport { DeviceServiceListComponent } from './device-service/device-service-list/device-service-list.component';\nimport { DeviceListComponent } from './device/device-list/device-list.component';\nimport { EditDeviceComponent } from './device/edit-device/edit-device.component';\nimport { AddDeviceComponent } from './device/add-device/add-device.component';\nimport { DeviceProfileListComponent } from './profile/device-profile-list/device-profile-list.component';\nimport { EditProfileComponent } from './profile/edit-profile/edit-profile.component';\nimport { AddProfileComponent } from './profile/add-profile/add-profile.component';\nimport { DeviceCenterComponent } from './device/device-center/device-center.component';\nimport { DeviceProfileCenterComponent } from './profile/device-profile-center/device-profile-center.component';\nimport { ProvisionWatcherCenterComponent } from './provision-watcher/provision-watcher-center/provision-watcher-center.component';\nimport { ProvisionWatcherListComponent } from './provision-watcher/provision-watcher-list/provision-watcher-list.component';\nimport { EditProvisionWatcherComponent } from './provision-watcher/edit-provision-watcher/edit-provision-watcher.component';\nimport { AddProvisionWatcherComponent } from './provision-watcher/add-provision-watcher/add-provision-watcher.component';\nimport { DeviceComboListComponent } from './device/device-combo-list/device-combo-list.component';\nimport { DeviceProfileComboListComponent } from './profile/device-profile-combo-list/device-profile-combo-list.component';\nimport { SourceComboListComponent } from './profile/source-combo-list/source-combo-list.component';\nimport { ResourceComboListComponent } from './profile/resource-combo-list/resource-combo-list.component';\nimport { DeviceCommandViewerComponent } from './device/device-command-viewer/device-command-viewer.component';\nimport { DeviceAutoEventComponent } from './device/device-auto-event/device-auto-event.component';\nimport { DeviceProtocolComponent } from './device/device-protocol/device-protocol.component';\n\n@NgModule({\n  declarations: [MetadataComponent, DeviceServiceMediaListComponent, DeviceServiceListComponent, DeviceListComponent, EditDeviceComponent, AddDeviceComponent, DeviceProfileListComponent, EditProfileComponent, AddProfileComponent, DeviceCenterComponent, DeviceProfileCenterComponent, ProvisionWatcherCenterComponent, ProvisionWatcherListComponent, EditProvisionWatcherComponent, AddProvisionWatcherComponent, DeviceComboListComponent, DeviceProfileComboListComponent, SourceComboListComponent, ResourceComboListComponent, DeviceCommandViewerComponent, DeviceAutoEventComponent, DeviceProtocolComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MetadataRoutingModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    DeviceProfileListComponent,DeviceListComponent,\n    DeviceComboListComponent, DeviceProfileComboListComponent\n  ]\n})\nexport class MetadataModule { }\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-list text-danger mr-2\"></i> \n        <span i18n>Device Profile List</span> \n    </div>\n    <div class=\"card-body p-0\">\n        <div *ngIf=\"toolbars\" class=\"bg-light px-2 py-2\">\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n                <button class=\"btn btn-primary\" (click)=\"refresh()\">\n                    <span>\n                        <i class=\"fa fa-refresh mr-1\"></i>\n                        <span i18n>Refresh</span>\n                    </span> \n                </button>\n                <button type=\"button\" class=\"btn btn-info\"  routerLink=\"../add-profile\">\n                    <span>\n                        <i class=\"fa fa-plus mr-1\"></i>\n                        <span i18n>Add</span>\n                    </span>\n                </button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"edit()\"  data-toggle=\"tooltip\" data-placement=\"top\" title=\"only one should be selected\" [disabled]=\"multiProfilesSelected.length !== 1\">\n                    <span>\n                        <i class=\"fa fa-edit mr-1\"></i>\n                        <span i18n>Edit</span>\n                    </span>\n                </button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteConfirm()\" [disabled]=\"multiProfilesSelected.length === 0\">\n                    <span>\n                        <i class=\"fa fa-trash mr-1\"></i>\n                        <span i18n>Delete</span>\n                    </span>\n                </button>\n              </div>\n              <!-- <button class=\"btn btn-secondary btn-sm text-light ml-3\">upload yaml file</button> -->\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-hover text-truncate\">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">\n                          <input *ngIf=\"enableSelectAll\" type=\"checkbox\" [checked]=\"isCheckedAll()\" (click)=\"selectAll($event)\">\n                      </th>\n                      <th scope=\"col\">ID</th>\n                      <th scope=\"col\" i18n>Name</th>\n                      <th scope=\"col\" i18n>Description</th>\n                      <th *ngIf=\"associatedDeviceColumn\" scope=\"col\" i18n>AssociatedDevice</th>\n                      <th scope=\"col\" i18n>Labels</th>\n                      <th scope=\"col\" i18n>Manufacturer</th>\n                      <th scope=\"col\" i18n>Model</th>\n                      <!-- <th scope=\"col\">Created</th>\n                      <th scope=\"col\">Modified</th> -->\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let profile of profileList\" [class.table-active]=\"isChecked(profile.name)\">\n                        <td> <input type=\"checkbox\" value=\"{{profile.name}}\" [checked]=\"isChecked(profile.name)\" (click)=\"selectOne($event,profile.name)\"></td>\n                        <td class=\"user-select-all\">{{profile.id}}</td>\n                        <td class=\"user-select-all\">{{profile.name}}</td>\n                        <td>{{profile.description}}</td>\n                        <td *ngIf=\"associatedDeviceColumn\" class=\"text-center\">\n                            <a routerLink=\"../../device-center\" class=\"badge badge-pill badge-primary\" [queryParams]=\"{'profileName':profile.name}\"><i class=\"fa fa-sitemap\"></i></a>\n                        </td>\n                        <td>{{profile.labels}}</td>\n                        <td>{{profile.manufacturer}}</td>\n                        <td>{{profile.model}}</td>\n                        <!-- <td>{{profile.created | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                        <td>{{profile.modified | date:'yyyy-MM-dd hh:mm:ss' }}</td> -->\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\" i18n>items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"custom-select\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\">\n                        <i class=\"fa fa-angle-double-left mr-1\"></i>\n                        <span i18n>Previous</span>\n                    </button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > profileList.length\">\n                        <span i18n>Next</span>\n                        <i class=\"fa fa-angle-double-right ml-1\"></i>\n                    </button>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>\n  \n<div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning mr-1\"></i>\n                    <span i18n>Warning</span>\n                </h5>  \n            </div>\n            <div class=\"modal-body\" i18n>\n                The data will be permanently erased!!! Are you sure to execute delete operation？\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" i18n>Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\" i18n>Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\nimport { MultiDeviceProfileResponse, DeviceProfileResponse} from '../../../contracts/v3/responses/device-profile-response';\nimport { DeviceProfile } from '../../../contracts/v3/device-profile';\n\n@Component({\n  selector: 'app-device-profile-list',\n  templateUrl: './device-profile-list.component.html',\n  styleUrls: ['./device-profile-list.component.css']\n})\nexport class DeviceProfileListComponent implements OnInit {\n\n  @Input() associatedDeviceColumn: boolean = true;\n  @Input() toolbars: boolean = true;\n  @Input() enableSelectAll: boolean = true;\n  @Output() singleProfileSelectedEvent = new EventEmitter<DeviceProfile>();\n  @Output() multipleProfileSelectedEvent = new EventEmitter<string[]>();\n  profileList: DeviceProfile[] = [];\n  @Input() multiProfilesSelected: string[] = [];\n  @Input() singleProfileSelected?: DeviceProfile;\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n\n  constructor(private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      if (params['profileName']) {\n        this.metaSvc.findProfileByName(params['profileName']).subscribe((data: DeviceProfileResponse) => {\n          this.profileList = [];\n          this.profileList.push(data.profile);\n        });\n      } else {\n        this.findAllDeviceProfilesPagination();\n      }\n    });\n  }\n\n  findAllDeviceProfilesPagination() {\n    this.metaSvc.allDeviceProfolesPagination(this.pageOffset, this.pageLimit).subscribe((data: MultiDeviceProfileResponse) => {\n      this.profileList = data.profiles;\n    });\n  }\n\n  onSingleProfileSelectedEmitter() {\n    this.singleProfileSelectedEvent.emit(this.singleProfileSelected);\n  }\n\n  onMultipleProfileSelectedEmitter() {\n    this.multipleProfileSelectedEvent.emit(this.multiProfilesSelected);\n  }\n\n  refresh() {\n    this.metaSvc.allDeviceProfolesPagination(0,this.pageLimit).subscribe((data: MultiDeviceProfileResponse) => {\n      this.profileList = data.profiles;\n      this.msgSvc.success('refresh');\n      this.pagination = 1;\n      this.resetCheckbox();\n    });\n  }\n\n  onPageSelected() {\n    this.resetPagination();\n    this.setPagination();\n    this.findAllDeviceProfilesPagination();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.metaSvc.allDeviceProfolesPagination(this.pageOffset,this.pageLimit).subscribe((data: MultiDeviceProfileResponse) => {\n      this.profileList = data.profiles;\n    });\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.metaSvc.allDeviceProfolesPagination(this.pageOffset,this.pageLimit).subscribe((data: MultiDeviceProfileResponse) => {\n      this.profileList = data.profiles;\n    });\n  }\n\n  setPageLimit(n: number) {\n    this.pageLimit = n;\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n    this.resetCheckbox();\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n    this.resetCheckbox();\n  }\n\n  resetCheckbox() {\n  }\n\n  edit() {\n    this.router.navigate(['../edit-profile'], {\n      relativeTo: this.route,\n      queryParams: {\n        'profileName': this.multiProfilesSelected[0]\n      }\n    });\n  }\n\n  deleteConfirm() {\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n\n  delete() {\n    this.multiProfilesSelected.forEach((profileName) => {\n      this.metaSvc.deleteProfileByName(profileName).subscribe(() => {\n        this.multiProfilesSelected = [];\n        this.profileList.forEach((profile, index) => {\n          if (profile.name == profileName) {\n            this.profileList.splice(index, 1);\n            this.msgSvc.success('delete', `  Name: ${profile.name}`);\n          }\n        });\n      });\n    });\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  isSingleProfileChecked(name: string): boolean {\n    return this.singleProfileSelected?.name === name\n  }\n\n  selectSingleProfile(event: any, name: string) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.profileList.forEach((profile) => {\n        if (profile.name === name) {\n          this.singleProfileSelected = profile;\n        }\n      });\n    } else {\n      this.singleProfileSelected = undefined;\n    }\n    this.onSingleProfileSelectedEmitter();\n  }\n\n  isCheckedAll(): boolean {\n    let checkall = true;\n    if (this.profileList && this.profileList.length === 0) {\n      checkall = false\n    }\n    this.profileList.forEach((p) => {\n      if (this.multiProfilesSelected.indexOf(p.name) === -1)  {\n        checkall = false\n      }\n    })\n    return checkall\n  }\n\n  selectAll(event: any) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.profileList.forEach(profile => {\n        if (this.multiProfilesSelected.includes(profile.name)) {\n          return\n        }\n        this.multiProfilesSelected.push(profile.name);\n      });\n    } else {\n      this.profileList.forEach(profile => {\n        if (this.multiProfilesSelected.includes(profile.name)) {\n          this.multiProfilesSelected.splice(this.multiProfilesSelected.indexOf(profile.name),1);\n        }\n      });\n    }\n    this.onMultipleProfileSelectedEmitter()\n  }\n\n  isChecked(profileName: string): boolean {\n    if (!this.enableSelectAll) {\n      return this.isSingleProfileChecked(profileName)\n    }\n    return this.multiProfilesSelected.includes(profileName)\n  }\n\n\n  selectOne(event: any, name: string) {\n    if (!this.enableSelectAll) {\n      this.selectSingleProfile(event, name);\n      return\n    }\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.multiProfilesSelected.push(name)\n    } else {\n      this.multiProfilesSelected.splice(this.multiProfilesSelected.indexOf(name), 1)\n    }\n    this.onMultipleProfileSelectedEmitter()\n  }\n\n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { ErrorService } from './error.service';\n\nimport { DeviceCoreCommandResponse, MultiDeviceCoreCommandsResponse } from '../contracts/v3/responses/device-core-command-response';\nimport { EventResponse } from '../contracts/v3/responses/event-response';\nimport { BaseResponse } from '../contracts/v3/common/base-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommandService {\n\n  endpoint: string = \"/core-command\";\n  version: string = \"/api/v3\";\n  urlPrefix: string = `${this.endpoint}${this.version}`;\n\n  endpointHealthUrl: string = \"/ping\";\n  versionUrl: string = \"/version\";\n\n  configUrl: string = \"/config\";\n\n  deviceCoreCommandListUrl: string = `${this.urlPrefix}/device/all`;\n  commandsByDeviceIdUrl: string = `${this.urlPrefix}/device/`; //deprecated\n  commandsByDeviceNameUrl: string = `${this.urlPrefix}/device/name/`; //deprecated\n  issueCmdByDeviceNameAndCmdNameUrl: string = `${this.urlPrefix}/device/name/`;\n\n  httpPostOrPutJSONOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient, private errorSvc: ErrorService) { }\n\n  getConfig(): Observable<any> {\n    let url = `${this.urlPrefix}${this.configUrl}`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findCommnadsByDeviceId(deviceId: string): Observable<any> {\n    let url = `${this.commandsByDeviceIdUrl}${deviceId}`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  allDeviceCoreCommandsPagination(offset: number, limit: number): Observable<MultiDeviceCoreCommandsResponse> {\n    let url = `${this.deviceCoreCommandListUrl}?offset=${offset}&limit=${limit}`;\n    return this.http.get<MultiDeviceCoreCommandsResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findDeviceAssociatedCommnadsByDeviceName(name: string): Observable<DeviceCoreCommandResponse> {\n    let url = `${this.commandsByDeviceNameUrl}${name}`;\n    return this.http.get<DeviceCoreCommandResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findAllDeviceCommnads(): Observable<any> {\n    let url = `${this.urlPrefix}/device`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  issueGetBinaryCmd(deviceId: string, commandId: string): Observable<any> {\n    let url = `${this.commandsByDeviceIdUrl}${deviceId}/command/${commandId}`;\n    return this.http.request('GET', url, {\n      responseType: 'arraybuffer'\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  issueGetCmd(deviceName: string, commandName: string): Observable<EventResponse> {\n    let url = `${this.issueCmdByDeviceNameAndCmdNameUrl}${deviceName}/${commandName}?ds-pushevent=true&ds-returnevent=true`;\n    return this.http.get<EventResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  issueSetCmd(deviceName: string, commandName: string, params?: any): Observable<BaseResponse> {\n    let url = `${this.issueCmdByDeviceNameAndCmdNameUrl}${deviceName}/${commandName}`;\n    return this.http.put<BaseResponse>(url, JSON.stringify(params),this.httpPostOrPutJSONOptions).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n}\n"],"names":["MetadataComponent","constructor","ngOnInit","static","this","t","core","Xpm","selectors","decls","vars","consts","i18n_0","$localize","i0","svc_r2","description","adminState","_r14","$implicit","ctx_r12","associatedDevicesSkip","name","ctx_r8","associatedDevices","get","DeviceServiceMediaListComponent_li_1_p_8_Template","DeviceServiceMediaListComponent_li_1_ng_template_9_Template","DeviceServiceMediaListComponent_li_1_span_15_Template","DeviceServiceMediaListComponent_li_1_span_16_Template","DeviceServiceMediaListComponent_li_1_a_17_Template","_r17","ctx_r16","edit","_r4","ctx_r0","getSvcPort","baseAddress","size","_r19","ctx_r18","updateSvc","$event","ctx_r20","deviceSvcSelected","ctx_r21","ctx_r1","DeviceServiceMediaListComponent","metaSvc","msgSvc","router","route","deviceServiceList","Map","allDeviceServices","subscribe","data","services","forEach","svc","findDevicesByServiceName","set","devices","length","String","baseURL","URL","port","updateDeviceService","success","undefined","svcName","navigate","queryParams","relativeTo","i1","i2","i3","DeviceServiceMediaListComponent_li_1_Template","DeviceServiceMediaListComponent_div_2_Template","ctx","DeviceCenterComponent","template","rf","cmd_r7","_r9","selectCmd","ctx_r5","selectedCmd","_r23","ctx_r22","issueGetCmd","ctx_r24","cmdGetResponse","ctx_r25","cmdGetResponseRaw","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_16_span_3_Template","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_16_pre_7_Template","ctx_r13","_r27","ctx_r26","issueSetCmd","_r39","i_r34","index","ctx_r38","parameterBearerList","value","p_r33","resourceName","ctx_r35","_r43","ctx_r42","valueType","ctx_r37","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_27_div_0_div_4_div_1_div_1_Template","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_27_div_0_div_4_div_1_ng_template_2_Template","_r36","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_27_div_0_div_4_div_1_Template","ctx_r31","selectedCmdSetParams","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_27_div_0_div_4_Template","ctx_r28","ctx_r29","cmdSetResponse","ctx_r30","cmdSetResponseRaw","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_27_div_0_Template","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_27_span_5_Template","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_27_pre_9_Template","ctx_r19","DeviceCommandViewerComponent_ng_template_1_div_18_button_13_Template","DeviceCommandViewerComponent_ng_template_1_div_18_div_15_Template","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_16_Template","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_18_Template","DeviceCommandViewerComponent_ng_template_1_div_18_button_24_Template","DeviceCommandViewerComponent_ng_template_1_div_18_div_26_Template","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_27_Template","DeviceCommandViewerComponent_ng_template_1_div_18_ng_template_29_Template","ctx_r6","_r12","_r18","_r20","DeviceCommandViewerComponent_ng_template_1_li_16_Template","DeviceCommandViewerComponent_ng_template_1_div_18_Template","ctx_r2","associatedCmdDeviceName","deviceCoreCommand","ctx_r4","DeviceCommandViewerComponent","cmdSvc","metadataSvc","ngOnChanges","deviceName","resetResponse","findDeviceAssociatedCommnadsByDeviceName","coreCommands","parameters","setParameterBearerList","getAssociatedDeviceProfile","profileName","findProfileByName","associateDeviceProfile","profile","cmd","p","push","key","cmdBinaryResponse","cmdBinaryResponseURL","isBinaryResource","isBinary","deviceResources","resource","properties","deviceCommands","dc","resourceOperations","ro","dr","deviceResource","resp","JSON","stringify","event","readings","result","reading","join","issueGetCmdOfBinaryResource","issueGetBinaryCmd","CBOR","decode","mediaType","binaryValue","createObjectURL","params","paramBearer","message","inputs","features","DeviceCommandViewerComponent_div_0_Template","DeviceCommandViewerComponent_ng_template_1_Template","DeviceCommandViewerComponent_ng_template_3_Template","_r1","_r3","associatedSvcName","associatedProfileName","device_r6","operatingState","ctx_r17","selectOne","DeviceListComponent_tr_56_span_13_Template","DeviceListComponent_tr_56_span_14_Template","DeviceListComponent_tr_56_span_17_Template","DeviceListComponent_tr_56_span_18_Template","DeviceListComponent_tr_56_span_19_Template","setSpecialFeatureViewer","FEATURE_COMMAND","FEATURE_AUTOEVENT","ctx_r3","isChecked","id","specialFeatureAssociatedDeviceName","labels","specialFeatureName","_c52","serviceName","event_r25","sourceName","interval","onChange","DeviceListComponent_div_81_div_1_tr_20_Template","autoEvents","ctx_r23","DeviceListComponent_div_81_div_1_Template","DeviceListComponent_div_81_ng_template_2_Template","_r22","DeviceListComponent","toolbars","enableSelectAll","deviceList","selectedDevice","pagination","pageLimit","pageOffset","getDeviceListByAssociatedSvc","getDeviceListByAssociatedProfile","getDeviceListPagination","renderPopoverComponent","setTimeout","$","popover","trigger","getDeviceList","findDevicesByProfileName","allDevicesPagination","refresh","resetPagination","deleteConfirm","modal","delete","d","i","deleteOneDeviceByName","splice","device","featureName","isCheckedAll","checkedAll","findIndex","selectAll","target","checked","deviceSelected","onPageSelected","prePage","setPagination","nextPage","n","DeviceListComponent_span_3_Template","DeviceListComponent_span_4_Template","DeviceListComponent_span_5_Template","DeviceListComponent_tr_56_Template","DeviceListComponent_div_81_Template","DeviceListComponent_div_82_Template","MqttProtocolTemplate","Schema","Host","Port","User","Password","ClientId","CommandTopic","ModusTCPProtocolTemplate","Address","UnitID","Timeout","IdleTimeout","ModusRTUProtocolTemplate","BaudRate","DataBits","StopBits","Parity","VirtualProtocolTemplate","OnvifProtocolTemplate","MACAddress","TCPProtocolTemplate","host","_r8","ctx_r7","changeProtocolTemplateMode","TEMPLATE_BUILT_IN","ctx_r9","TEMPLATE_CUSTOM","protocolTemplateMode","property_r14","_r16","ctx_r15","builtinProtocolTemplateSelected","DeviceProtocolComponent_div_6_ng_template_4_div_25_div_1_Template","ctx_r10","builtinProtocolTemplateProperties","DeviceProtocolComponent_div_6_ng_template_4_ng_template_26_h5_4_Template","builtinProtocolName","onSelectBuiltinProtocolTemplate","DeviceProtocolComponent_div_6_ng_template_4_div_25_Template","DeviceProtocolComponent_div_6_ng_template_4_ng_template_26_Template","_r11","property_r22","_r24","propertyName","propertyValue","removeCustomProtocolProperty","_r28","ctx_r27","customProtocolName","onCustomProtocolNameChange","addCustomProtocolProperty","DeviceProtocolComponent_div_6_ng_template_6_div_15_Template","customProtocolPropertyBearer","DeviceProtocolComponent_div_6_div_2_Template","DeviceProtocolComponent_div_6_div_3_Template","DeviceProtocolComponent_div_6_ng_template_4_Template","DeviceProtocolComponent_div_6_ng_template_6_Template","mode","MODE_ADD","_r5","DeviceProtocolComponent","MODE_EDIT","deviceProtocols","isValid","isValidChange","EventEmitter","extractProtocolName","protocolName","setCustomProtocolPropertysBearer","validate","Object","keys","templateMode","entries","property","indexOf","getDeviceProtocols","assign","emit","outputs","DeviceProtocolComponent_div_6_Template","svc_r1","selectOneSvc","isSvcChecked","created","modified","DeviceServiceListComponent","singleDeviceSvcSelectedEvent","findAllDeviceSvcPagination","findAllDeviceServicesPagination","onSingleDeviceSvcSelectedEmitter","self","DeviceServiceListComponent_tr_27_Template","r_r3","event_r1","onValueChange","unit","DeviceAutoEventComponent_div_10_option_35_Template","removeAutoEvent","eventIntervalNumType","autoEventResourceNameSet","DeviceAutoEventComponent","autoEventsChange","autoEventDecoratorBearer","resetAutoEventDecoratorBearer","setAutoEventDecorator","setupAutoEventResourceNameSet","deviceProfile","resumeOriginalAutoEvents","addAutoEvent","r","isNaN","parseFloat","parseInt","events","e","slice","substring","DeviceAutoEventComponent_div_10_Template","previous","_r21","next","stepStateLock","submit","_r25","onSingleDeviceSvcSelected","selectedSvc","onSingleProfileSelected","selectedProfile","_r29","newDevice","deviceLabels","ctx_r32","ctx_r14","_r34","ctx_r33","isAutoEventsValid","AddDeviceComponent","errorSvc","currentStep","selectedClass","noSelectedClass","isProtocolValid","split","protocols","addDevice","handleErrorForAPI","i4","viewQuery","AddDeviceComponent_i_13_Template","AddDeviceComponent_i_18_Template","AddDeviceComponent_i_23_Template","AddDeviceComponent_i_28_Template","AddDeviceComponent_i_33_Template","AddDeviceComponent_button_35_Template","AddDeviceComponent_button_36_Template","AddDeviceComponent_ng_template_37_Template","AddDeviceComponent_ng_template_41_Template","AddDeviceComponent_ng_template_43_Template","AddDeviceComponent_ng_template_45_Template","AddDeviceComponent_ng_template_47_Template","_r7","_r2","save","ctx_r11","validateBeforeSave","EditDeviceComponent","findDeviceByName","setDefaultDeviceSvcSelected","setDefaultDeviceProfileSelected","findDevcieServiceByName","service","updateDevice","EditDeviceComponent_div_0_Template","DeviceProfileCenterComponent","AddProfileComponent","errSvc","renderYamlSource","myTextarea","document","getElementById","codeMirrorEditor","CodeMirror","fromTextArea","theme","foldGutter","smartIndent","showCursorWhenSelecting","lineNumbers","lineWrapping","gutters","autofocus","matchBrackets","autoCloseBrackets","styleActiveLine","cursorHeight","autocorrect","setSize","on","instance","yamlFile","dataTransfer","files","profileYamlSource","getValue","addProfileYamlByNameViaUIBackend","EditProfileComponent","findProfileYamlByNameViaUIBackend","setValue","update","updateProfileYamlContentViaUIBackend","ngOnDestroy","ProvisionWatcherCenterComponent","provisionWatcher_r1","discoveredDevice","ProvisionWatcherListComponent_tr_55_span_11_Template","ProvisionWatcherListComponent_tr_55_span_12_Template","ProvisionWatcherListComponent_tr_55_span_15_Template","ProvisionWatcherListComponent_tr_55_span_16_Template","specialFeatureAssociatedProvisionWatcherName","_c42","identifiers","address","blockingIdentifiers","ProvisionWatcherListComponent","provisionWatcherList","selectedProvisionWatcher","getProvisionWatcherListPagination","getProvisionWatcherList","allProvisionWatchersPagination","provisionWatchers","provisionWatcherName","provisionWatcher","provisionWatcherSelected","deleteOneProvisionWatcherByName","ProvisionWatcherListComponent_tr_55_Template","newProvisionWatcher","provisionWatcherLabels","provisionWatcherBlockingIdentifiers","provisionWatcherIdentifiersAddress","provisionWatcherIdentifiersPort","AddProvisionWatcherComponent","addProvisionWatcher","AddProvisionWatcherComponent_i_13_Template","AddProvisionWatcherComponent_i_18_Template","AddProvisionWatcherComponent_i_23_Template","AddProvisionWatcherComponent_button_25_Template","AddProvisionWatcherComponent_button_26_Template","AddProvisionWatcherComponent_ng_template_27_Template","AddProvisionWatcherComponent_ng_template_31_Template","AddProvisionWatcherComponent_ng_template_33_Template","AddProvisionWatcherComponent_ng_template_35_Template","EditProvisionWatcherComponent","findProvisionWatcherByName","updateProvisionWatcher","EditProvisionWatcherComponent_div_0_Template","MetadataAliveGuard","canActivate","state","checkAvailable","canActivateChild","ping","pipe","take","catchError","error","routerPath","url","mergeMap","of","Yz7","factory","ɵfac","providedIn","routes","path","component","AuthGuard","children","redirectTo","pathMatch","DeviceProfileListComponent","MetadataRoutingModule","oAB","cJS","RouterModule","forChild","MetadataModule","CommonModule","FormsModule","ReactiveFormsModule","multiProfilesSelected","_c36","profile_r10","DeviceProfileListComponent_tr_27_td_9_Template","associatedDeviceColumn","manufacturer","model","singleProfileSelectedEvent","multipleProfileSelectedEvent","profileList","findAllDeviceProfilesPagination","allDeviceProfolesPagination","profiles","onSingleProfileSelectedEmitter","singleProfileSelected","onMultipleProfileSelectedEmitter","resetCheckbox","setPageLimit","deleteProfileByName","isSingleProfileChecked","selectSingleProfile","checkall","includes","_angular_core__WEBPACK_IMPORTED_MODULE_2__","DeviceProfileListComponent_div_6_Template","DeviceProfileListComponent_input_12_Template","DeviceProfileListComponent_th_19_Template","DeviceProfileListComponent_tr_27_Template","CommandService","http","endpoint","version","urlPrefix","endpointHealthUrl","versionUrl","configUrl","deviceCoreCommandListUrl","commandsByDeviceIdUrl","commandsByDeviceNameUrl","issueCmdByDeviceNameAndCmdNameUrl","httpPostOrPutJSONOptions","headers","HttpHeaders","getConfig","handleError","findCommnadsByDeviceId","deviceId","allDeviceCoreCommandsPagination","offset","limit","findAllDeviceCommnads","commandId","request","responseType","commandName","put","_angular_core__WEBPACK_IMPORTED_MODULE_3__"],"sourceRoot":"webpack:///"}